import xml.etree.ElementTree as ET

def remove_namespaces(element):
    """
    Removes namespace prefixes from element tags.

    Args:
        element: The root element of the XML tree.

    Returns:
        The modified element with namespaces removed.
    """
    for elem in element.iter():
        if '}' in elem.tag:
            elem.tag = elem.tag.split('}', 1)[1]  # Remove namespace prefix
    return element

def indent(elem, level=0):
    """
    Adds indentation to the XML tree.
    """
    i = "\n" + level*"  "
    if len(elem):
        if not elem.text or not elem.text.strip():
            elem.text = i + "  "
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
        for elem in elem:
            indent(elem, level+1)
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
    else:
        if level and (not elem.tail or not elem.tail.strip()):
            elem.tail = i



def create_arxml():
    """
    Creates an ARXML file with the specified structure.
    """
    root = ET.Element('AUTOSAR', attrib={'{http://www.w3.org/2001/XMLSchema-instance}schemaLocation': 'http://autosar.org/schema/r4.0 AUTOSAR_4-0-2.xsd'})
    ar_packages1 = ET.SubElement(root, 'AR-PACKAGES')
    ar_package1 = ET.SubElement(ar_packages1, 'AR-PACKAGE')
    ar_package1.attrib = {'UUID': '5983c226-f5b2-4ba1-958d-32fe5f2fde51'}
    short_name1 = ET.SubElement(ar_package1, 'SHORT-NAME')
    short_name1.text = 'AUTOSAR'
    ar_packages2 = ET.SubElement(ar_package1, 'AR-PACKAGES')
    ar_package2 = ET.SubElement(ar_packages2, 'AR-PACKAGE')
    short_name2 = ET.SubElement(ar_package2, 'SHORT-NAME')
    short_name2.text = 'AUTOSAR_GenDef'
    ar_packages3 = ET.SubElement(ar_package2, 'AR-PACKAGES')
    ar_package3 = ET.SubElement(ar_packages3, 'AR-PACKAGE')
    short_name3 = ET.SubElement(ar_package3, 'SHORT-NAME')
    short_name3.text = 'BaseTypes'
    category1 = ET.SubElement(ar_package3, 'CATEGORY')
    category1.text = 'STANDARD'
    elements1 = ET.SubElement(ar_package3, 'ELEMENTS')
    sw_base_type1 = ET.SubElement(elements1, 'SW-BASE-TYPE')
    short_name4 = ET.SubElement(sw_base_type1, 'SHORT-NAME')
    short_name4.text = 'void'
    long_name1 = ET.SubElement(sw_base_type1, 'LONG-NAME')
    l_41 = ET.SubElement(long_name1, 'L-4')
    l_41.text = 'void'
    l_41.attrib = {'L': 'EN'}
    category2 = ET.SubElement(sw_base_type1, 'CATEGORY')
    category2.text = 'VOID'
    base_type_encoding1 = ET.SubElement(sw_base_type1, 'BASE-TYPE-ENCODING')
    base_type_encoding1.text = 'VOID'
    native_declaration1 = ET.SubElement(sw_base_type1, 'NATIVE-DECLARATION')
    native_declaration1.text = 'void'
    ar_package4 = ET.SubElement(ar_packages2, 'AR-PACKAGE')
    short_name5 = ET.SubElement(ar_package4, 'SHORT-NAME')
    short_name5.text = 'AUTOSAR_PhysicalUnits'
    long_name2 = ET.SubElement(ar_package4, 'LONG-NAME')
    l_42 = ET.SubElement(long_name2, 'L-4')
    l_42.text = 'AUTOSAR'
    l_42.attrib = {'L': 'EN'}
    ar_packages4 = ET.SubElement(ar_package4, 'AR-PACKAGES')
    ar_package5 = ET.SubElement(ar_packages4, 'AR-PACKAGE')
    short_name6 = ET.SubElement(ar_package5, 'SHORT-NAME')
    short_name6.text = 'PhysicalDimensions'
    category3 = ET.SubElement(ar_package5, 'CATEGORY')
    category3.text = 'STANDARD'
    elements2 = ET.SubElement(ar_package5, 'ELEMENTS')
    physical_dimension1 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name7 = ET.SubElement(physical_dimension1, 'SHORT-NAME')
    short_name7.text = 'Amnt1'
    long_name3 = ET.SubElement(physical_dimension1, 'LONG-NAME')
    l_43 = ET.SubElement(long_name3, 'L-4')
    l_43.text = 'Quantity of substance'
    l_43.attrib = {'L': 'EN'}
    length_exp1 = ET.SubElement(physical_dimension1, 'LENGTH-EXP')
    length_exp1.text = '0'
    mass_exp1 = ET.SubElement(physical_dimension1, 'MASS-EXP')
    mass_exp1.text = '0'
    time_exp1 = ET.SubElement(physical_dimension1, 'TIME-EXP')
    time_exp1.text = '0'
    current_exp1 = ET.SubElement(physical_dimension1, 'CURRENT-EXP')
    current_exp1.text = '0'
    temperature_exp1 = ET.SubElement(physical_dimension1, 'TEMPERATURE-EXP')
    temperature_exp1.text = '0'
    molar_amount_exp1 = ET.SubElement(physical_dimension1, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp1.text = '1'
    luminous_intensity_exp1 = ET.SubElement(physical_dimension1, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp1.text = '0'
    physical_dimension2 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name8 = ET.SubElement(physical_dimension2, 'SHORT-NAME')
    short_name8.text = 'I1'
    long_name4 = ET.SubElement(physical_dimension2, 'LONG-NAME')
    l_44 = ET.SubElement(long_name4, 'L-4')
    l_44.text = 'Electric Current'
    l_44.attrib = {'L': 'EN'}
    length_exp2 = ET.SubElement(physical_dimension2, 'LENGTH-EXP')
    length_exp2.text = '0'
    mass_exp2 = ET.SubElement(physical_dimension2, 'MASS-EXP')
    mass_exp2.text = '0'
    time_exp2 = ET.SubElement(physical_dimension2, 'TIME-EXP')
    time_exp2.text = '0'
    current_exp2 = ET.SubElement(physical_dimension2, 'CURRENT-EXP')
    current_exp2.text = '1'
    temperature_exp2 = ET.SubElement(physical_dimension2, 'TEMPERATURE-EXP')
    temperature_exp2.text = '0'
    molar_amount_exp2 = ET.SubElement(physical_dimension2, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp2.text = '0'
    luminous_intensity_exp2 = ET.SubElement(physical_dimension2, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp2.text = '0'
    physical_dimension3 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name9 = ET.SubElement(physical_dimension3, 'SHORT-NAME')
    short_name9.text = 'Illmn1'
    long_name5 = ET.SubElement(physical_dimension3, 'LONG-NAME')
    l_45 = ET.SubElement(long_name5, 'L-4')
    l_45.text = 'Luminous intensity'
    l_45.attrib = {'L': 'EN'}
    length_exp3 = ET.SubElement(physical_dimension3, 'LENGTH-EXP')
    length_exp3.text = '0'
    mass_exp3 = ET.SubElement(physical_dimension3, 'MASS-EXP')
    mass_exp3.text = '0'
    time_exp3 = ET.SubElement(physical_dimension3, 'TIME-EXP')
    time_exp3.text = '0'
    current_exp3 = ET.SubElement(physical_dimension3, 'CURRENT-EXP')
    current_exp3.text = '0'
    temperature_exp3 = ET.SubElement(physical_dimension3, 'TEMPERATURE-EXP')
    temperature_exp3.text = '0'
    molar_amount_exp3 = ET.SubElement(physical_dimension3, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp3.text = '0'
    luminous_intensity_exp3 = ET.SubElement(physical_dimension3, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp3.text = '1'
    physical_dimension4 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name10 = ET.SubElement(physical_dimension4, 'SHORT-NAME')
    short_name10.text = 'Len1'
    long_name6 = ET.SubElement(physical_dimension4, 'LONG-NAME')
    l_46 = ET.SubElement(long_name6, 'L-4')
    l_46.text = 'Length'
    l_46.attrib = {'L': 'EN'}
    length_exp4 = ET.SubElement(physical_dimension4, 'LENGTH-EXP')
    length_exp4.text = '1'
    mass_exp4 = ET.SubElement(physical_dimension4, 'MASS-EXP')
    mass_exp4.text = '0'
    time_exp4 = ET.SubElement(physical_dimension4, 'TIME-EXP')
    time_exp4.text = '0'
    current_exp4 = ET.SubElement(physical_dimension4, 'CURRENT-EXP')
    current_exp4.text = '0'
    temperature_exp4 = ET.SubElement(physical_dimension4, 'TEMPERATURE-EXP')
    temperature_exp4.text = '0'
    molar_amount_exp4 = ET.SubElement(physical_dimension4, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp4.text = '0'
    luminous_intensity_exp4 = ET.SubElement(physical_dimension4, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp4.text = '0'
    physical_dimension5 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name11 = ET.SubElement(physical_dimension5, 'SHORT-NAME')
    short_name11.text = 'Len1M1TiNeg2'
    long_name7 = ET.SubElement(physical_dimension5, 'LONG-NAME')
    l_47 = ET.SubElement(long_name7, 'L-4')
    l_47.text = 'Force'
    l_47.attrib = {'L': 'EN'}
    length_exp5 = ET.SubElement(physical_dimension5, 'LENGTH-EXP')
    length_exp5.text = '1'
    mass_exp5 = ET.SubElement(physical_dimension5, 'MASS-EXP')
    mass_exp5.text = '1'
    time_exp5 = ET.SubElement(physical_dimension5, 'TIME-EXP')
    time_exp5.text = '-2'
    current_exp5 = ET.SubElement(physical_dimension5, 'CURRENT-EXP')
    current_exp5.text = '0'
    temperature_exp5 = ET.SubElement(physical_dimension5, 'TEMPERATURE-EXP')
    temperature_exp5.text = '0'
    molar_amount_exp5 = ET.SubElement(physical_dimension5, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp5.text = '0'
    luminous_intensity_exp5 = ET.SubElement(physical_dimension5, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp5.text = '0'
    physical_dimension6 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name12 = ET.SubElement(physical_dimension6, 'SHORT-NAME')
    short_name12.text = 'Len1M1TiNeg2INeg2'
    long_name8 = ET.SubElement(physical_dimension6, 'LONG-NAME')
    l_48 = ET.SubElement(long_name8, 'L-4')
    l_48.text = 'Permeability'
    l_48.attrib = {'L': 'EN'}
    length_exp6 = ET.SubElement(physical_dimension6, 'LENGTH-EXP')
    length_exp6.text = '1'
    mass_exp6 = ET.SubElement(physical_dimension6, 'MASS-EXP')
    mass_exp6.text = '1'
    time_exp6 = ET.SubElement(physical_dimension6, 'TIME-EXP')
    time_exp6.text = '-2'
    current_exp6 = ET.SubElement(physical_dimension6, 'CURRENT-EXP')
    current_exp6.text = '-2'
    temperature_exp6 = ET.SubElement(physical_dimension6, 'TEMPERATURE-EXP')
    temperature_exp6.text = '0'
    molar_amount_exp6 = ET.SubElement(physical_dimension6, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp6.text = '0'
    luminous_intensity_exp6 = ET.SubElement(physical_dimension6, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp6.text = '0'
    physical_dimension7 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name13 = ET.SubElement(physical_dimension7, 'SHORT-NAME')
    short_name13.text = 'Len1M1TiNeg2_1'
    long_name9 = ET.SubElement(physical_dimension7, 'LONG-NAME')
    l_49 = ET.SubElement(long_name9, 'L-4')
    l_49.text = 'Electrical Energy Consumption'
    l_49.attrib = {'L': 'EN'}
    length_exp7 = ET.SubElement(physical_dimension7, 'LENGTH-EXP')
    length_exp7.text = '1'
    mass_exp7 = ET.SubElement(physical_dimension7, 'MASS-EXP')
    mass_exp7.text = '1'
    time_exp7 = ET.SubElement(physical_dimension7, 'TIME-EXP')
    time_exp7.text = '-2'
    current_exp7 = ET.SubElement(physical_dimension7, 'CURRENT-EXP')
    current_exp7.text = '0'
    temperature_exp7 = ET.SubElement(physical_dimension7, 'TEMPERATURE-EXP')
    temperature_exp7.text = '0'
    molar_amount_exp7 = ET.SubElement(physical_dimension7, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp7.text = '0'
    luminous_intensity_exp7 = ET.SubElement(physical_dimension7, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp7.text = '0'
    physical_dimension8 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name14 = ET.SubElement(physical_dimension8, 'SHORT-NAME')
    short_name14.text = 'Len1M1TiNeg3INeg1'
    long_name10 = ET.SubElement(physical_dimension8, 'LONG-NAME')
    l_410 = ET.SubElement(long_name10, 'L-4')
    l_410.text = 'Electric Field Strength / Electric intensity'
    l_410.attrib = {'L': 'EN'}
    length_exp8 = ET.SubElement(physical_dimension8, 'LENGTH-EXP')
    length_exp8.text = '1'
    mass_exp8 = ET.SubElement(physical_dimension8, 'MASS-EXP')
    mass_exp8.text = '1'
    time_exp8 = ET.SubElement(physical_dimension8, 'TIME-EXP')
    time_exp8.text = '-3'
    current_exp8 = ET.SubElement(physical_dimension8, 'CURRENT-EXP')
    current_exp8.text = '-1'
    temperature_exp8 = ET.SubElement(physical_dimension8, 'TEMPERATURE-EXP')
    temperature_exp8.text = '0'
    molar_amount_exp8 = ET.SubElement(physical_dimension8, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp8.text = '0'
    luminous_intensity_exp8 = ET.SubElement(physical_dimension8, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp8.text = '0'
    physical_dimension9 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name15 = ET.SubElement(physical_dimension9, 'SHORT-NAME')
    short_name15.text = 'Len1M1TiNeg3TNeg1'
    long_name11 = ET.SubElement(physical_dimension9, 'LONG-NAME')
    l_411 = ET.SubElement(long_name11, 'L-4')
    l_411.text = 'Thermal Conductivity'
    l_411.attrib = {'L': 'EN'}
    length_exp9 = ET.SubElement(physical_dimension9, 'LENGTH-EXP')
    length_exp9.text = '1'
    mass_exp9 = ET.SubElement(physical_dimension9, 'MASS-EXP')
    mass_exp9.text = '1'
    time_exp9 = ET.SubElement(physical_dimension9, 'TIME-EXP')
    time_exp9.text = '-3'
    current_exp9 = ET.SubElement(physical_dimension9, 'CURRENT-EXP')
    current_exp9.text = '0'
    temperature_exp9 = ET.SubElement(physical_dimension9, 'TEMPERATURE-EXP')
    temperature_exp9.text = '-1'
    molar_amount_exp9 = ET.SubElement(physical_dimension9, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp9.text = '0'
    luminous_intensity_exp9 = ET.SubElement(physical_dimension9, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp9.text = '0'
    physical_dimension10 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name16 = ET.SubElement(physical_dimension10, 'SHORT-NAME')
    short_name16.text = 'Len1TiNeg1'
    long_name12 = ET.SubElement(physical_dimension10, 'LONG-NAME')
    l_412 = ET.SubElement(long_name12, 'L-4')
    l_412.text = 'Velocity'
    l_412.attrib = {'L': 'EN'}
    length_exp10 = ET.SubElement(physical_dimension10, 'LENGTH-EXP')
    length_exp10.text = '1'
    mass_exp10 = ET.SubElement(physical_dimension10, 'MASS-EXP')
    mass_exp10.text = '0'
    time_exp10 = ET.SubElement(physical_dimension10, 'TIME-EXP')
    time_exp10.text = '-1'
    current_exp10 = ET.SubElement(physical_dimension10, 'CURRENT-EXP')
    current_exp10.text = '0'
    temperature_exp10 = ET.SubElement(physical_dimension10, 'TEMPERATURE-EXP')
    temperature_exp10.text = '0'
    molar_amount_exp10 = ET.SubElement(physical_dimension10, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp10.text = '0'
    luminous_intensity_exp10 = ET.SubElement(physical_dimension10, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp10.text = '0'
    physical_dimension11 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name17 = ET.SubElement(physical_dimension11, 'SHORT-NAME')
    short_name17.text = 'Len1TiNeg2'
    long_name13 = ET.SubElement(physical_dimension11, 'LONG-NAME')
    l_413 = ET.SubElement(long_name13, 'L-4')
    l_413.text = 'Acceleration'
    l_413.attrib = {'L': 'EN'}
    length_exp11 = ET.SubElement(physical_dimension11, 'LENGTH-EXP')
    length_exp11.text = '1'
    mass_exp11 = ET.SubElement(physical_dimension11, 'MASS-EXP')
    mass_exp11.text = '0'
    time_exp11 = ET.SubElement(physical_dimension11, 'TIME-EXP')
    time_exp11.text = '-2'
    current_exp11 = ET.SubElement(physical_dimension11, 'CURRENT-EXP')
    current_exp11.text = '0'
    temperature_exp11 = ET.SubElement(physical_dimension11, 'TEMPERATURE-EXP')
    temperature_exp11.text = '0'
    molar_amount_exp11 = ET.SubElement(physical_dimension11, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp11.text = '0'
    luminous_intensity_exp11 = ET.SubElement(physical_dimension11, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp11.text = '0'
    physical_dimension12 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name18 = ET.SubElement(physical_dimension12, 'SHORT-NAME')
    short_name18.text = 'Len1TiNeg3'
    long_name14 = ET.SubElement(physical_dimension12, 'LONG-NAME')
    l_414 = ET.SubElement(long_name14, 'L-4')
    l_414.text = 'Acceleration Time Gradient'
    l_414.attrib = {'L': 'EN'}
    length_exp12 = ET.SubElement(physical_dimension12, 'LENGTH-EXP')
    length_exp12.text = '1'
    mass_exp12 = ET.SubElement(physical_dimension12, 'MASS-EXP')
    mass_exp12.text = '0'
    time_exp12 = ET.SubElement(physical_dimension12, 'TIME-EXP')
    time_exp12.text = '-3'
    current_exp12 = ET.SubElement(physical_dimension12, 'CURRENT-EXP')
    current_exp12.text = '0'
    temperature_exp12 = ET.SubElement(physical_dimension12, 'TEMPERATURE-EXP')
    temperature_exp12.text = '0'
    molar_amount_exp12 = ET.SubElement(physical_dimension12, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp12.text = '0'
    luminous_intensity_exp12 = ET.SubElement(physical_dimension12, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp12.text = '0'
    physical_dimension13 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name19 = ET.SubElement(physical_dimension13, 'SHORT-NAME')
    short_name19.text = 'Len2'
    long_name15 = ET.SubElement(physical_dimension13, 'LONG-NAME')
    l_415 = ET.SubElement(long_name15, 'L-4')
    l_415.text = 'Area'
    l_415.attrib = {'L': 'EN'}
    length_exp13 = ET.SubElement(physical_dimension13, 'LENGTH-EXP')
    length_exp13.text = '2'
    mass_exp13 = ET.SubElement(physical_dimension13, 'MASS-EXP')
    mass_exp13.text = '0'
    time_exp13 = ET.SubElement(physical_dimension13, 'TIME-EXP')
    time_exp13.text = '0'
    current_exp13 = ET.SubElement(physical_dimension13, 'CURRENT-EXP')
    current_exp13.text = '0'
    temperature_exp13 = ET.SubElement(physical_dimension13, 'TEMPERATURE-EXP')
    temperature_exp13.text = '0'
    molar_amount_exp13 = ET.SubElement(physical_dimension13, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp13.text = '0'
    luminous_intensity_exp13 = ET.SubElement(physical_dimension13, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp13.text = '0'
    physical_dimension14 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name20 = ET.SubElement(physical_dimension14, 'SHORT-NAME')
    short_name20.text = 'Len2M1'
    long_name16 = ET.SubElement(physical_dimension14, 'LONG-NAME')
    l_416 = ET.SubElement(long_name16, 'L-4')
    l_416.text = 'Moment of Inertia'
    l_416.attrib = {'L': 'EN'}
    length_exp14 = ET.SubElement(physical_dimension14, 'LENGTH-EXP')
    length_exp14.text = '2'
    mass_exp14 = ET.SubElement(physical_dimension14, 'MASS-EXP')
    mass_exp14.text = '1'
    time_exp14 = ET.SubElement(physical_dimension14, 'TIME-EXP')
    time_exp14.text = '0'
    current_exp14 = ET.SubElement(physical_dimension14, 'CURRENT-EXP')
    current_exp14.text = '0'
    temperature_exp14 = ET.SubElement(physical_dimension14, 'TEMPERATURE-EXP')
    temperature_exp14.text = '0'
    molar_amount_exp14 = ET.SubElement(physical_dimension14, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp14.text = '0'
    luminous_intensity_exp14 = ET.SubElement(physical_dimension14, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp14.text = '0'
    physical_dimension15 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name21 = ET.SubElement(physical_dimension15, 'SHORT-NAME')
    short_name21.text = 'Len2M1TiNeg1'
    long_name17 = ET.SubElement(physical_dimension15, 'LONG-NAME')
    l_417 = ET.SubElement(long_name17, 'L-4')
    l_417.text = 'Angular Momentum'
    l_417.attrib = {'L': 'EN'}
    length_exp15 = ET.SubElement(physical_dimension15, 'LENGTH-EXP')
    length_exp15.text = '2'
    mass_exp15 = ET.SubElement(physical_dimension15, 'MASS-EXP')
    mass_exp15.text = '1'
    time_exp15 = ET.SubElement(physical_dimension15, 'TIME-EXP')
    time_exp15.text = '-1'
    current_exp15 = ET.SubElement(physical_dimension15, 'CURRENT-EXP')
    current_exp15.text = '0'
    temperature_exp15 = ET.SubElement(physical_dimension15, 'TEMPERATURE-EXP')
    temperature_exp15.text = '0'
    molar_amount_exp15 = ET.SubElement(physical_dimension15, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp15.text = '0'
    luminous_intensity_exp15 = ET.SubElement(physical_dimension15, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp15.text = '0'
    physical_dimension16 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name22 = ET.SubElement(physical_dimension16, 'SHORT-NAME')
    short_name22.text = 'Len2M1TiNeg2'
    long_name18 = ET.SubElement(physical_dimension16, 'LONG-NAME')
    l_418 = ET.SubElement(long_name18, 'L-4')
    l_418.text = 'Torque'
    l_418.attrib = {'L': 'EN'}
    length_exp16 = ET.SubElement(physical_dimension16, 'LENGTH-EXP')
    length_exp16.text = '2'
    mass_exp16 = ET.SubElement(physical_dimension16, 'MASS-EXP')
    mass_exp16.text = '1'
    time_exp16 = ET.SubElement(physical_dimension16, 'TIME-EXP')
    time_exp16.text = '-2'
    current_exp16 = ET.SubElement(physical_dimension16, 'CURRENT-EXP')
    current_exp16.text = '0'
    temperature_exp16 = ET.SubElement(physical_dimension16, 'TEMPERATURE-EXP')
    temperature_exp16.text = '0'
    molar_amount_exp16 = ET.SubElement(physical_dimension16, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp16.text = '0'
    luminous_intensity_exp16 = ET.SubElement(physical_dimension16, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp16.text = '0'
    physical_dimension17 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name23 = ET.SubElement(physical_dimension17, 'SHORT-NAME')
    short_name23.text = 'Len2M1TiNeg2AmntNeg1'
    long_name19 = ET.SubElement(physical_dimension17, 'LONG-NAME')
    l_419 = ET.SubElement(long_name19, 'L-4')
    l_419.text = 'Molar Energy'
    l_419.attrib = {'L': 'EN'}
    length_exp17 = ET.SubElement(physical_dimension17, 'LENGTH-EXP')
    length_exp17.text = '2'
    mass_exp17 = ET.SubElement(physical_dimension17, 'MASS-EXP')
    mass_exp17.text = '1'
    time_exp17 = ET.SubElement(physical_dimension17, 'TIME-EXP')
    time_exp17.text = '-2'
    current_exp17 = ET.SubElement(physical_dimension17, 'CURRENT-EXP')
    current_exp17.text = '0'
    temperature_exp17 = ET.SubElement(physical_dimension17, 'TEMPERATURE-EXP')
    temperature_exp17.text = '0'
    molar_amount_exp17 = ET.SubElement(physical_dimension17, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp17.text = '-1'
    luminous_intensity_exp17 = ET.SubElement(physical_dimension17, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp17.text = '0'
    physical_dimension18 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name24 = ET.SubElement(physical_dimension18, 'SHORT-NAME')
    short_name24.text = 'Len2M1TiNeg2INeg1'
    long_name20 = ET.SubElement(physical_dimension18, 'LONG-NAME')
    l_420 = ET.SubElement(long_name20, 'L-4')
    l_420.text = 'Magnetic Flux'
    l_420.attrib = {'L': 'EN'}
    length_exp18 = ET.SubElement(physical_dimension18, 'LENGTH-EXP')
    length_exp18.text = '2'
    mass_exp18 = ET.SubElement(physical_dimension18, 'MASS-EXP')
    mass_exp18.text = '1'
    time_exp18 = ET.SubElement(physical_dimension18, 'TIME-EXP')
    time_exp18.text = '-2'
    current_exp18 = ET.SubElement(physical_dimension18, 'CURRENT-EXP')
    current_exp18.text = '-1'
    temperature_exp18 = ET.SubElement(physical_dimension18, 'TEMPERATURE-EXP')
    temperature_exp18.text = '0'
    molar_amount_exp18 = ET.SubElement(physical_dimension18, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp18.text = '0'
    luminous_intensity_exp18 = ET.SubElement(physical_dimension18, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp18.text = '0'
    physical_dimension19 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name25 = ET.SubElement(physical_dimension19, 'SHORT-NAME')
    short_name25.text = 'Len2M1TiNeg2INeg2'
    long_name21 = ET.SubElement(physical_dimension19, 'LONG-NAME')
    l_421 = ET.SubElement(long_name21, 'L-4')
    l_421.text = 'Inductance'
    l_421.attrib = {'L': 'EN'}
    length_exp19 = ET.SubElement(physical_dimension19, 'LENGTH-EXP')
    length_exp19.text = '2'
    mass_exp19 = ET.SubElement(physical_dimension19, 'MASS-EXP')
    mass_exp19.text = '1'
    time_exp19 = ET.SubElement(physical_dimension19, 'TIME-EXP')
    time_exp19.text = '-2'
    current_exp19 = ET.SubElement(physical_dimension19, 'CURRENT-EXP')
    current_exp19.text = '-2'
    temperature_exp19 = ET.SubElement(physical_dimension19, 'TEMPERATURE-EXP')
    temperature_exp19.text = '0'
    molar_amount_exp19 = ET.SubElement(physical_dimension19, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp19.text = '0'
    luminous_intensity_exp19 = ET.SubElement(physical_dimension19, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp19.text = '0'
    physical_dimension20 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name26 = ET.SubElement(physical_dimension20, 'SHORT-NAME')
    short_name26.text = 'Len2M1TiNeg2TNeg1'
    long_name22 = ET.SubElement(physical_dimension20, 'LONG-NAME')
    l_422 = ET.SubElement(long_name22, 'L-4')
    l_422.text = 'Heat Capacity'
    l_422.attrib = {'L': 'EN'}
    length_exp20 = ET.SubElement(physical_dimension20, 'LENGTH-EXP')
    length_exp20.text = '2'
    mass_exp20 = ET.SubElement(physical_dimension20, 'MASS-EXP')
    mass_exp20.text = '1'
    time_exp20 = ET.SubElement(physical_dimension20, 'TIME-EXP')
    time_exp20.text = '-2'
    current_exp20 = ET.SubElement(physical_dimension20, 'CURRENT-EXP')
    current_exp20.text = '0'
    temperature_exp20 = ET.SubElement(physical_dimension20, 'TEMPERATURE-EXP')
    temperature_exp20.text = '-1'
    molar_amount_exp20 = ET.SubElement(physical_dimension20, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp20.text = '0'
    luminous_intensity_exp20 = ET.SubElement(physical_dimension20, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp20.text = '0'
    physical_dimension21 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name27 = ET.SubElement(physical_dimension21, 'SHORT-NAME')
    short_name27.text = 'Len2M1TiNeg2TNeg1AmntNeg1'
    long_name23 = ET.SubElement(physical_dimension21, 'LONG-NAME')
    l_423 = ET.SubElement(long_name23, 'L-4')
    l_423.text = 'Molar Heat Capacity'
    l_423.attrib = {'L': 'EN'}
    length_exp21 = ET.SubElement(physical_dimension21, 'LENGTH-EXP')
    length_exp21.text = '2'
    mass_exp21 = ET.SubElement(physical_dimension21, 'MASS-EXP')
    mass_exp21.text = '1'
    time_exp21 = ET.SubElement(physical_dimension21, 'TIME-EXP')
    time_exp21.text = '-2'
    current_exp21 = ET.SubElement(physical_dimension21, 'CURRENT-EXP')
    current_exp21.text = '0'
    temperature_exp21 = ET.SubElement(physical_dimension21, 'TEMPERATURE-EXP')
    temperature_exp21.text = '-1'
    molar_amount_exp21 = ET.SubElement(physical_dimension21, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp21.text = '-1'
    luminous_intensity_exp21 = ET.SubElement(physical_dimension21, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp21.text = '0'
    physical_dimension22 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name28 = ET.SubElement(physical_dimension22, 'SHORT-NAME')
    short_name28.text = 'Len2M1TiNeg2_1'
    long_name24 = ET.SubElement(physical_dimension22, 'LONG-NAME')
    l_424 = ET.SubElement(long_name24, 'L-4')
    l_424.text = 'Energy'
    l_424.attrib = {'L': 'EN'}
    length_exp22 = ET.SubElement(physical_dimension22, 'LENGTH-EXP')
    length_exp22.text = '2'
    mass_exp22 = ET.SubElement(physical_dimension22, 'MASS-EXP')
    mass_exp22.text = '1'
    time_exp22 = ET.SubElement(physical_dimension22, 'TIME-EXP')
    time_exp22.text = '-2'
    current_exp22 = ET.SubElement(physical_dimension22, 'CURRENT-EXP')
    current_exp22.text = '0'
    temperature_exp22 = ET.SubElement(physical_dimension22, 'TEMPERATURE-EXP')
    temperature_exp22.text = '0'
    molar_amount_exp22 = ET.SubElement(physical_dimension22, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp22.text = '0'
    luminous_intensity_exp22 = ET.SubElement(physical_dimension22, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp22.text = '0'
    physical_dimension23 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name29 = ET.SubElement(physical_dimension23, 'SHORT-NAME')
    short_name29.text = 'Len2M1TiNeg3'
    long_name25 = ET.SubElement(physical_dimension23, 'LONG-NAME')
    l_425 = ET.SubElement(long_name25, 'L-4')
    l_425.text = 'Torque Time Gradient'
    l_425.attrib = {'L': 'EN'}
    length_exp23 = ET.SubElement(physical_dimension23, 'LENGTH-EXP')
    length_exp23.text = '2'
    mass_exp23 = ET.SubElement(physical_dimension23, 'MASS-EXP')
    mass_exp23.text = '1'
    time_exp23 = ET.SubElement(physical_dimension23, 'TIME-EXP')
    time_exp23.text = '-3'
    current_exp23 = ET.SubElement(physical_dimension23, 'CURRENT-EXP')
    current_exp23.text = '0'
    temperature_exp23 = ET.SubElement(physical_dimension23, 'TEMPERATURE-EXP')
    temperature_exp23.text = '0'
    molar_amount_exp23 = ET.SubElement(physical_dimension23, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp23.text = '0'
    luminous_intensity_exp23 = ET.SubElement(physical_dimension23, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp23.text = '0'
    physical_dimension24 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name30 = ET.SubElement(physical_dimension24, 'SHORT-NAME')
    short_name30.text = 'Len2M1TiNeg3INeg1'
    long_name26 = ET.SubElement(physical_dimension24, 'LONG-NAME')
    l_426 = ET.SubElement(long_name26, 'L-4')
    l_426.text = 'Voltage'
    l_426.attrib = {'L': 'EN'}
    length_exp24 = ET.SubElement(physical_dimension24, 'LENGTH-EXP')
    length_exp24.text = '2'
    mass_exp24 = ET.SubElement(physical_dimension24, 'MASS-EXP')
    mass_exp24.text = '1'
    time_exp24 = ET.SubElement(physical_dimension24, 'TIME-EXP')
    time_exp24.text = '-3'
    current_exp24 = ET.SubElement(physical_dimension24, 'CURRENT-EXP')
    current_exp24.text = '-1'
    temperature_exp24 = ET.SubElement(physical_dimension24, 'TEMPERATURE-EXP')
    temperature_exp24.text = '0'
    molar_amount_exp24 = ET.SubElement(physical_dimension24, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp24.text = '0'
    luminous_intensity_exp24 = ET.SubElement(physical_dimension24, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp24.text = '0'
    physical_dimension25 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name31 = ET.SubElement(physical_dimension25, 'SHORT-NAME')
    short_name31.text = 'Len2M1TiNeg3INeg2'
    long_name27 = ET.SubElement(physical_dimension25, 'LONG-NAME')
    l_427 = ET.SubElement(long_name27, 'L-4')
    l_427.text = 'Electric Resistance'
    l_427.attrib = {'L': 'EN'}
    length_exp25 = ET.SubElement(physical_dimension25, 'LENGTH-EXP')
    length_exp25.text = '2'
    mass_exp25 = ET.SubElement(physical_dimension25, 'MASS-EXP')
    mass_exp25.text = '1'
    time_exp25 = ET.SubElement(physical_dimension25, 'TIME-EXP')
    time_exp25.text = '-3'
    current_exp25 = ET.SubElement(physical_dimension25, 'CURRENT-EXP')
    current_exp25.text = '-2'
    temperature_exp25 = ET.SubElement(physical_dimension25, 'TEMPERATURE-EXP')
    temperature_exp25.text = '0'
    molar_amount_exp25 = ET.SubElement(physical_dimension25, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp25.text = '0'
    luminous_intensity_exp25 = ET.SubElement(physical_dimension25, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp25.text = '0'
    physical_dimension26 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name32 = ET.SubElement(physical_dimension26, 'SHORT-NAME')
    short_name32.text = 'Len2M1TiNeg3_1'
    long_name28 = ET.SubElement(physical_dimension26, 'LONG-NAME')
    l_428 = ET.SubElement(long_name28, 'L-4')
    l_428.text = 'Power'
    l_428.attrib = {'L': 'EN'}
    length_exp26 = ET.SubElement(physical_dimension26, 'LENGTH-EXP')
    length_exp26.text = '2'
    mass_exp26 = ET.SubElement(physical_dimension26, 'MASS-EXP')
    mass_exp26.text = '1'
    time_exp26 = ET.SubElement(physical_dimension26, 'TIME-EXP')
    time_exp26.text = '-3'
    current_exp26 = ET.SubElement(physical_dimension26, 'CURRENT-EXP')
    current_exp26.text = '0'
    temperature_exp26 = ET.SubElement(physical_dimension26, 'TEMPERATURE-EXP')
    temperature_exp26.text = '0'
    molar_amount_exp26 = ET.SubElement(physical_dimension26, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp26.text = '0'
    luminous_intensity_exp26 = ET.SubElement(physical_dimension26, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp26.text = '0'
    physical_dimension27 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name33 = ET.SubElement(physical_dimension27, 'SHORT-NAME')
    short_name33.text = 'Len2M1TiNeg4'
    long_name29 = ET.SubElement(physical_dimension27, 'LONG-NAME')
    l_429 = ET.SubElement(long_name29, 'L-4')
    l_429.text = 'Power Time Gradient'
    l_429.attrib = {'L': 'EN'}
    length_exp27 = ET.SubElement(physical_dimension27, 'LENGTH-EXP')
    length_exp27.text = '2'
    mass_exp27 = ET.SubElement(physical_dimension27, 'MASS-EXP')
    mass_exp27.text = '1'
    time_exp27 = ET.SubElement(physical_dimension27, 'TIME-EXP')
    time_exp27.text = '-4'
    current_exp27 = ET.SubElement(physical_dimension27, 'CURRENT-EXP')
    current_exp27.text = '0'
    temperature_exp27 = ET.SubElement(physical_dimension27, 'TEMPERATURE-EXP')
    temperature_exp27.text = '0'
    molar_amount_exp27 = ET.SubElement(physical_dimension27, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp27.text = '0'
    luminous_intensity_exp27 = ET.SubElement(physical_dimension27, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp27.text = '0'
    physical_dimension28 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name34 = ET.SubElement(physical_dimension28, 'SHORT-NAME')
    short_name34.text = 'Len2M1TiNeg4INeg1'
    long_name30 = ET.SubElement(physical_dimension28, 'LONG-NAME')
    l_430 = ET.SubElement(long_name30, 'L-4')
    l_430.text = 'Voltage Time Gradient'
    l_430.attrib = {'L': 'EN'}
    length_exp28 = ET.SubElement(physical_dimension28, 'LENGTH-EXP')
    length_exp28.text = '2'
    mass_exp28 = ET.SubElement(physical_dimension28, 'MASS-EXP')
    mass_exp28.text = '1'
    time_exp28 = ET.SubElement(physical_dimension28, 'TIME-EXP')
    time_exp28.text = '-4'
    current_exp28 = ET.SubElement(physical_dimension28, 'CURRENT-EXP')
    current_exp28.text = '-1'
    temperature_exp28 = ET.SubElement(physical_dimension28, 'TEMPERATURE-EXP')
    temperature_exp28.text = '0'
    molar_amount_exp28 = ET.SubElement(physical_dimension28, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp28.text = '0'
    luminous_intensity_exp28 = ET.SubElement(physical_dimension28, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp28.text = '0'
    physical_dimension29 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name35 = ET.SubElement(physical_dimension29, 'SHORT-NAME')
    short_name35.text = 'Len2Ti1'
    long_name31 = ET.SubElement(physical_dimension29, 'LONG-NAME')
    l_431 = ET.SubElement(long_name31, 'L-4')
    l_431.text = 'Kinematic Viscosity'
    l_431.attrib = {'L': 'EN'}
    length_exp29 = ET.SubElement(physical_dimension29, 'LENGTH-EXP')
    length_exp29.text = '2'
    mass_exp29 = ET.SubElement(physical_dimension29, 'MASS-EXP')
    mass_exp29.text = '0'
    time_exp29 = ET.SubElement(physical_dimension29, 'TIME-EXP')
    time_exp29.text = '-1'
    current_exp29 = ET.SubElement(physical_dimension29, 'CURRENT-EXP')
    current_exp29.text = '0'
    temperature_exp29 = ET.SubElement(physical_dimension29, 'TEMPERATURE-EXP')
    temperature_exp29.text = '0'
    molar_amount_exp29 = ET.SubElement(physical_dimension29, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp29.text = '0'
    luminous_intensity_exp29 = ET.SubElement(physical_dimension29, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp29.text = '0'
    physical_dimension30 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name36 = ET.SubElement(physical_dimension30, 'SHORT-NAME')
    short_name36.text = 'Len2TiNeg2'
    long_name32 = ET.SubElement(physical_dimension30, 'LONG-NAME')
    l_432 = ET.SubElement(long_name32, 'L-4')
    l_432.text = 'Specific Heat'
    l_432.attrib = {'L': 'EN'}
    length_exp30 = ET.SubElement(physical_dimension30, 'LENGTH-EXP')
    length_exp30.text = '2'
    mass_exp30 = ET.SubElement(physical_dimension30, 'MASS-EXP')
    mass_exp30.text = '0'
    time_exp30 = ET.SubElement(physical_dimension30, 'TIME-EXP')
    time_exp30.text = '-2'
    current_exp30 = ET.SubElement(physical_dimension30, 'CURRENT-EXP')
    current_exp30.text = '0'
    temperature_exp30 = ET.SubElement(physical_dimension30, 'TEMPERATURE-EXP')
    temperature_exp30.text = '0'
    molar_amount_exp30 = ET.SubElement(physical_dimension30, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp30.text = '0'
    luminous_intensity_exp30 = ET.SubElement(physical_dimension30, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp30.text = '0'
    physical_dimension31 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name37 = ET.SubElement(physical_dimension31, 'SHORT-NAME')
    short_name37.text = 'Len2TiNeg2TNeg1'
    long_name33 = ET.SubElement(physical_dimension31, 'LONG-NAME')
    l_433 = ET.SubElement(long_name33, 'L-4')
    l_433.text = 'Specific Heat Capacity'
    l_433.attrib = {'L': 'EN'}
    length_exp31 = ET.SubElement(physical_dimension31, 'LENGTH-EXP')
    length_exp31.text = '2'
    mass_exp31 = ET.SubElement(physical_dimension31, 'MASS-EXP')
    mass_exp31.text = '0'
    time_exp31 = ET.SubElement(physical_dimension31, 'TIME-EXP')
    time_exp31.text = '-2'
    current_exp31 = ET.SubElement(physical_dimension31, 'CURRENT-EXP')
    current_exp31.text = '0'
    temperature_exp31 = ET.SubElement(physical_dimension31, 'TEMPERATURE-EXP')
    temperature_exp31.text = '-1'
    molar_amount_exp31 = ET.SubElement(physical_dimension31, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp31.text = '0'
    luminous_intensity_exp31 = ET.SubElement(physical_dimension31, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp31.text = '0'
    physical_dimension32 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name38 = ET.SubElement(physical_dimension32, 'SHORT-NAME')
    short_name38.text = 'Len2_1'
    long_name34 = ET.SubElement(physical_dimension32, 'LONG-NAME')
    l_434 = ET.SubElement(long_name34, 'L-4')
    l_434.text = 'Volume Per Distance / Fuel Consumption'
    l_434.attrib = {'L': 'EN'}
    length_exp32 = ET.SubElement(physical_dimension32, 'LENGTH-EXP')
    length_exp32.text = '2'
    mass_exp32 = ET.SubElement(physical_dimension32, 'MASS-EXP')
    mass_exp32.text = '0'
    time_exp32 = ET.SubElement(physical_dimension32, 'TIME-EXP')
    time_exp32.text = '0'
    current_exp32 = ET.SubElement(physical_dimension32, 'CURRENT-EXP')
    current_exp32.text = '0'
    temperature_exp32 = ET.SubElement(physical_dimension32, 'TEMPERATURE-EXP')
    temperature_exp32.text = '0'
    molar_amount_exp32 = ET.SubElement(physical_dimension32, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp32.text = '0'
    luminous_intensity_exp32 = ET.SubElement(physical_dimension32, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp32.text = '0'
    physical_dimension33 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name39 = ET.SubElement(physical_dimension33, 'SHORT-NAME')
    short_name39.text = 'Len3'
    long_name35 = ET.SubElement(physical_dimension33, 'LONG-NAME')
    l_435 = ET.SubElement(long_name35, 'L-4')
    l_435.text = 'Volume'
    l_435.attrib = {'L': 'EN'}
    length_exp33 = ET.SubElement(physical_dimension33, 'LENGTH-EXP')
    length_exp33.text = '3'
    mass_exp33 = ET.SubElement(physical_dimension33, 'MASS-EXP')
    mass_exp33.text = '0'
    time_exp33 = ET.SubElement(physical_dimension33, 'TIME-EXP')
    time_exp33.text = '0'
    current_exp33 = ET.SubElement(physical_dimension33, 'CURRENT-EXP')
    current_exp33.text = '0'
    temperature_exp33 = ET.SubElement(physical_dimension33, 'TEMPERATURE-EXP')
    temperature_exp33.text = '0'
    molar_amount_exp33 = ET.SubElement(physical_dimension33, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp33.text = '0'
    luminous_intensity_exp33 = ET.SubElement(physical_dimension33, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp33.text = '0'
    physical_dimension34 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name40 = ET.SubElement(physical_dimension34, 'SHORT-NAME')
    short_name40.text = 'Len3MNeg1'
    long_name36 = ET.SubElement(physical_dimension34, 'LONG-NAME')
    l_436 = ET.SubElement(long_name36, 'L-4')
    l_436.text = 'Specific Volume'
    l_436.attrib = {'L': 'EN'}
    length_exp34 = ET.SubElement(physical_dimension34, 'LENGTH-EXP')
    length_exp34.text = '3'
    mass_exp34 = ET.SubElement(physical_dimension34, 'MASS-EXP')
    mass_exp34.text = '-1'
    time_exp34 = ET.SubElement(physical_dimension34, 'TIME-EXP')
    time_exp34.text = '0'
    current_exp34 = ET.SubElement(physical_dimension34, 'CURRENT-EXP')
    current_exp34.text = '0'
    temperature_exp34 = ET.SubElement(physical_dimension34, 'TEMPERATURE-EXP')
    temperature_exp34.text = '0'
    molar_amount_exp34 = ET.SubElement(physical_dimension34, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp34.text = '0'
    luminous_intensity_exp34 = ET.SubElement(physical_dimension34, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp34.text = '0'
    physical_dimension35 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name41 = ET.SubElement(physical_dimension35, 'SHORT-NAME')
    short_name41.text = 'Len3TiNeg1'
    long_name37 = ET.SubElement(physical_dimension35, 'LONG-NAME')
    l_437 = ET.SubElement(long_name37, 'L-4')
    l_437.text = 'Volumetric Flow'
    l_437.attrib = {'L': 'EN'}
    length_exp35 = ET.SubElement(physical_dimension35, 'LENGTH-EXP')
    length_exp35.text = '3'
    mass_exp35 = ET.SubElement(physical_dimension35, 'MASS-EXP')
    mass_exp35.text = '0'
    time_exp35 = ET.SubElement(physical_dimension35, 'TIME-EXP')
    time_exp35.text = '-1'
    current_exp35 = ET.SubElement(physical_dimension35, 'CURRENT-EXP')
    current_exp35.text = '0'
    temperature_exp35 = ET.SubElement(physical_dimension35, 'TEMPERATURE-EXP')
    temperature_exp35.text = '0'
    molar_amount_exp35 = ET.SubElement(physical_dimension35, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp35.text = '0'
    luminous_intensity_exp35 = ET.SubElement(physical_dimension35, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp35.text = '0'
    physical_dimension36 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name42 = ET.SubElement(physical_dimension36, 'SHORT-NAME')
    short_name42.text = 'Len3TiNeg2'
    long_name38 = ET.SubElement(physical_dimension36, 'LONG-NAME')
    l_438 = ET.SubElement(long_name38, 'L-4')
    l_438.text = 'Volumetric Flow Gradient'
    l_438.attrib = {'L': 'EN'}
    length_exp36 = ET.SubElement(physical_dimension36, 'LENGTH-EXP')
    length_exp36.text = '3'
    mass_exp36 = ET.SubElement(physical_dimension36, 'MASS-EXP')
    mass_exp36.text = '0'
    time_exp36 = ET.SubElement(physical_dimension36, 'TIME-EXP')
    time_exp36.text = '-2'
    current_exp36 = ET.SubElement(physical_dimension36, 'CURRENT-EXP')
    current_exp36.text = '0'
    temperature_exp36 = ET.SubElement(physical_dimension36, 'TEMPERATURE-EXP')
    temperature_exp36.text = '0'
    molar_amount_exp36 = ET.SubElement(physical_dimension36, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp36.text = '0'
    luminous_intensity_exp36 = ET.SubElement(physical_dimension36, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp36.text = '0'
    physical_dimension37 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name43 = ET.SubElement(physical_dimension37, 'SHORT-NAME')
    short_name43.text = 'LenNeg1'
    long_name39 = ET.SubElement(physical_dimension37, 'LONG-NAME')
    l_439 = ET.SubElement(long_name39, 'L-4')
    l_439.text = 'Inverse Length'
    l_439.attrib = {'L': 'EN'}
    length_exp37 = ET.SubElement(physical_dimension37, 'LENGTH-EXP')
    length_exp37.text = '-1'
    mass_exp37 = ET.SubElement(physical_dimension37, 'MASS-EXP')
    mass_exp37.text = '0'
    time_exp37 = ET.SubElement(physical_dimension37, 'TIME-EXP')
    time_exp37.text = '0'
    current_exp37 = ET.SubElement(physical_dimension37, 'CURRENT-EXP')
    current_exp37.text = '0'
    temperature_exp37 = ET.SubElement(physical_dimension37, 'TEMPERATURE-EXP')
    temperature_exp37.text = '0'
    molar_amount_exp37 = ET.SubElement(physical_dimension37, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp37.text = '0'
    luminous_intensity_exp37 = ET.SubElement(physical_dimension37, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp37.text = '0'
    physical_dimension38 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name44 = ET.SubElement(physical_dimension38, 'SHORT-NAME')
    short_name44.text = 'LenNeg1M1TiNeg1'
    long_name40 = ET.SubElement(physical_dimension38, 'LONG-NAME')
    l_440 = ET.SubElement(long_name40, 'L-4')
    l_440.text = 'Dynamic Viscosity'
    l_440.attrib = {'L': 'EN'}
    length_exp38 = ET.SubElement(physical_dimension38, 'LENGTH-EXP')
    length_exp38.text = '-1'
    mass_exp38 = ET.SubElement(physical_dimension38, 'MASS-EXP')
    mass_exp38.text = '1'
    time_exp38 = ET.SubElement(physical_dimension38, 'TIME-EXP')
    time_exp38.text = '-1'
    current_exp38 = ET.SubElement(physical_dimension38, 'CURRENT-EXP')
    current_exp38.text = '0'
    temperature_exp38 = ET.SubElement(physical_dimension38, 'TEMPERATURE-EXP')
    temperature_exp38.text = '0'
    molar_amount_exp38 = ET.SubElement(physical_dimension38, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp38.text = '0'
    luminous_intensity_exp38 = ET.SubElement(physical_dimension38, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp38.text = '0'
    physical_dimension39 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name45 = ET.SubElement(physical_dimension39, 'SHORT-NAME')
    short_name45.text = 'LenNeg1M1TiNeg2'
    long_name41 = ET.SubElement(physical_dimension39, 'LONG-NAME')
    l_441 = ET.SubElement(long_name41, 'L-4')
    l_441.text = 'Pressure'
    l_441.attrib = {'L': 'EN'}
    length_exp39 = ET.SubElement(physical_dimension39, 'LENGTH-EXP')
    length_exp39.text = '-1'
    mass_exp39 = ET.SubElement(physical_dimension39, 'MASS-EXP')
    mass_exp39.text = '1'
    time_exp39 = ET.SubElement(physical_dimension39, 'TIME-EXP')
    time_exp39.text = '-2'
    current_exp39 = ET.SubElement(physical_dimension39, 'CURRENT-EXP')
    current_exp39.text = '0'
    temperature_exp39 = ET.SubElement(physical_dimension39, 'TEMPERATURE-EXP')
    temperature_exp39.text = '0'
    molar_amount_exp39 = ET.SubElement(physical_dimension39, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp39.text = '0'
    luminous_intensity_exp39 = ET.SubElement(physical_dimension39, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp39.text = '0'
    physical_dimension40 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name46 = ET.SubElement(physical_dimension40, 'SHORT-NAME')
    short_name46.text = 'LenNeg1M1TiNeg2_1'
    long_name42 = ET.SubElement(physical_dimension40, 'LONG-NAME')
    l_442 = ET.SubElement(long_name42, 'L-4')
    l_442.text = 'Pressure by Angle'
    l_442.attrib = {'L': 'EN'}
    length_exp40 = ET.SubElement(physical_dimension40, 'LENGTH-EXP')
    length_exp40.text = '-1'
    mass_exp40 = ET.SubElement(physical_dimension40, 'MASS-EXP')
    mass_exp40.text = '1'
    time_exp40 = ET.SubElement(physical_dimension40, 'TIME-EXP')
    time_exp40.text = '-2'
    current_exp40 = ET.SubElement(physical_dimension40, 'CURRENT-EXP')
    current_exp40.text = '0'
    temperature_exp40 = ET.SubElement(physical_dimension40, 'TEMPERATURE-EXP')
    temperature_exp40.text = '0'
    molar_amount_exp40 = ET.SubElement(physical_dimension40, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp40.text = '0'
    luminous_intensity_exp40 = ET.SubElement(physical_dimension40, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp40.text = '0'
    physical_dimension41 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name47 = ET.SubElement(physical_dimension41, 'SHORT-NAME')
    short_name47.text = 'LenNeg1M1TiNeg3'
    long_name43 = ET.SubElement(physical_dimension41, 'LONG-NAME')
    l_443 = ET.SubElement(long_name43, 'L-4')
    l_443.text = 'Pressure Gradient'
    l_443.attrib = {'L': 'EN'}
    length_exp41 = ET.SubElement(physical_dimension41, 'LENGTH-EXP')
    length_exp41.text = '-1'
    mass_exp41 = ET.SubElement(physical_dimension41, 'MASS-EXP')
    mass_exp41.text = '1'
    time_exp41 = ET.SubElement(physical_dimension41, 'TIME-EXP')
    time_exp41.text = '-3'
    current_exp41 = ET.SubElement(physical_dimension41, 'CURRENT-EXP')
    current_exp41.text = '0'
    temperature_exp41 = ET.SubElement(physical_dimension41, 'TEMPERATURE-EXP')
    temperature_exp41.text = '0'
    molar_amount_exp41 = ET.SubElement(physical_dimension41, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp41.text = '0'
    luminous_intensity_exp41 = ET.SubElement(physical_dimension41, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp41.text = '0'
    physical_dimension42 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name48 = ET.SubElement(physical_dimension42, 'SHORT-NAME')
    short_name48.text = 'LenNeg2Illmn1'
    long_name44 = ET.SubElement(physical_dimension42, 'LONG-NAME')
    l_444 = ET.SubElement(long_name44, 'L-4')
    l_444.text = 'Illuminance'
    l_444.attrib = {'L': 'EN'}
    length_exp42 = ET.SubElement(physical_dimension42, 'LENGTH-EXP')
    length_exp42.text = '-2'
    mass_exp42 = ET.SubElement(physical_dimension42, 'MASS-EXP')
    mass_exp42.text = '0'
    time_exp42 = ET.SubElement(physical_dimension42, 'TIME-EXP')
    time_exp42.text = '0'
    current_exp42 = ET.SubElement(physical_dimension42, 'CURRENT-EXP')
    current_exp42.text = '0'
    temperature_exp42 = ET.SubElement(physical_dimension42, 'TEMPERATURE-EXP')
    temperature_exp42.text = '0'
    molar_amount_exp42 = ET.SubElement(physical_dimension42, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp42.text = '0'
    luminous_intensity_exp42 = ET.SubElement(physical_dimension42, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp42.text = '1'
    physical_dimension43 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name49 = ET.SubElement(physical_dimension43, 'SHORT-NAME')
    short_name49.text = 'LenNeg2MNeg1Ti3I2'
    long_name45 = ET.SubElement(physical_dimension43, 'LONG-NAME')
    l_445 = ET.SubElement(long_name45, 'L-4')
    l_445.text = 'Electrical Conductance'
    l_445.attrib = {'L': 'EN'}
    length_exp43 = ET.SubElement(physical_dimension43, 'LENGTH-EXP')
    length_exp43.text = '-2'
    mass_exp43 = ET.SubElement(physical_dimension43, 'MASS-EXP')
    mass_exp43.text = '-1'
    time_exp43 = ET.SubElement(physical_dimension43, 'TIME-EXP')
    time_exp43.text = '3'
    current_exp43 = ET.SubElement(physical_dimension43, 'CURRENT-EXP')
    current_exp43.text = '2'
    temperature_exp43 = ET.SubElement(physical_dimension43, 'TEMPERATURE-EXP')
    temperature_exp43.text = '0'
    molar_amount_exp43 = ET.SubElement(physical_dimension43, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp43.text = '0'
    luminous_intensity_exp43 = ET.SubElement(physical_dimension43, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp43.text = '0'
    physical_dimension44 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name50 = ET.SubElement(physical_dimension44, 'SHORT-NAME')
    short_name50.text = 'LenNeg2MNeg1Ti4I2'
    long_name46 = ET.SubElement(physical_dimension44, 'LONG-NAME')
    l_446 = ET.SubElement(long_name46, 'L-4')
    l_446.text = 'Capacitance'
    l_446.attrib = {'L': 'EN'}
    length_exp44 = ET.SubElement(physical_dimension44, 'LENGTH-EXP')
    length_exp44.text = '-2'
    mass_exp44 = ET.SubElement(physical_dimension44, 'MASS-EXP')
    mass_exp44.text = '-1'
    time_exp44 = ET.SubElement(physical_dimension44, 'TIME-EXP')
    time_exp44.text = '4'
    current_exp44 = ET.SubElement(physical_dimension44, 'CURRENT-EXP')
    current_exp44.text = '2'
    temperature_exp44 = ET.SubElement(physical_dimension44, 'TEMPERATURE-EXP')
    temperature_exp44.text = '0'
    molar_amount_exp44 = ET.SubElement(physical_dimension44, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp44.text = '0'
    luminous_intensity_exp44 = ET.SubElement(physical_dimension44, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp44.text = '0'
    physical_dimension45 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name51 = ET.SubElement(physical_dimension45, 'SHORT-NAME')
    short_name51.text = 'LenNeg3Amnt1'
    long_name47 = ET.SubElement(physical_dimension45, 'LONG-NAME')
    l_447 = ET.SubElement(long_name47, 'L-4')
    l_447.text = 'Concentration'
    l_447.attrib = {'L': 'EN'}
    length_exp45 = ET.SubElement(physical_dimension45, 'LENGTH-EXP')
    length_exp45.text = '-3'
    mass_exp45 = ET.SubElement(physical_dimension45, 'MASS-EXP')
    mass_exp45.text = '0'
    time_exp45 = ET.SubElement(physical_dimension45, 'TIME-EXP')
    time_exp45.text = '0'
    current_exp45 = ET.SubElement(physical_dimension45, 'CURRENT-EXP')
    current_exp45.text = '0'
    temperature_exp45 = ET.SubElement(physical_dimension45, 'TEMPERATURE-EXP')
    temperature_exp45.text = '0'
    molar_amount_exp45 = ET.SubElement(physical_dimension45, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp45.text = '1'
    luminous_intensity_exp45 = ET.SubElement(physical_dimension45, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp45.text = '0'
    physical_dimension46 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name52 = ET.SubElement(physical_dimension46, 'SHORT-NAME')
    short_name52.text = 'LenNeg3M1'
    long_name48 = ET.SubElement(physical_dimension46, 'LONG-NAME')
    l_448 = ET.SubElement(long_name48, 'L-4')
    l_448.text = 'Mass Density'
    l_448.attrib = {'L': 'EN'}
    length_exp46 = ET.SubElement(physical_dimension46, 'LENGTH-EXP')
    length_exp46.text = '-3'
    mass_exp46 = ET.SubElement(physical_dimension46, 'MASS-EXP')
    mass_exp46.text = '1'
    time_exp46 = ET.SubElement(physical_dimension46, 'TIME-EXP')
    time_exp46.text = '0'
    current_exp46 = ET.SubElement(physical_dimension46, 'CURRENT-EXP')
    current_exp46.text = '0'
    temperature_exp46 = ET.SubElement(physical_dimension46, 'TEMPERATURE-EXP')
    temperature_exp46.text = '0'
    molar_amount_exp46 = ET.SubElement(physical_dimension46, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp46.text = '0'
    luminous_intensity_exp46 = ET.SubElement(physical_dimension46, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp46.text = '0'
    physical_dimension47 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name53 = ET.SubElement(physical_dimension47, 'SHORT-NAME')
    short_name53.text = 'LenNeg3MNeg1Ti2I2'
    long_name49 = ET.SubElement(physical_dimension47, 'LONG-NAME')
    l_449 = ET.SubElement(long_name49, 'L-4')
    l_449.text = 'Electrical Conductivity Gradient'
    l_449.attrib = {'L': 'EN'}
    length_exp47 = ET.SubElement(physical_dimension47, 'LENGTH-EXP')
    length_exp47.text = '-3'
    mass_exp47 = ET.SubElement(physical_dimension47, 'MASS-EXP')
    mass_exp47.text = '-1'
    time_exp47 = ET.SubElement(physical_dimension47, 'TIME-EXP')
    time_exp47.text = '2'
    current_exp47 = ET.SubElement(physical_dimension47, 'CURRENT-EXP')
    current_exp47.text = '2'
    temperature_exp47 = ET.SubElement(physical_dimension47, 'TEMPERATURE-EXP')
    temperature_exp47.text = '0'
    molar_amount_exp47 = ET.SubElement(physical_dimension47, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp47.text = '0'
    luminous_intensity_exp47 = ET.SubElement(physical_dimension47, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp47.text = '0'
    physical_dimension48 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name54 = ET.SubElement(physical_dimension48, 'SHORT-NAME')
    short_name54.text = 'LenNeg3MNeg1Ti3I2'
    long_name50 = ET.SubElement(physical_dimension48, 'LONG-NAME')
    l_450 = ET.SubElement(long_name50, 'L-4')
    l_450.text = 'Electrical Conductivity'
    l_450.attrib = {'L': 'EN'}
    length_exp48 = ET.SubElement(physical_dimension48, 'LENGTH-EXP')
    length_exp48.text = '-3'
    mass_exp48 = ET.SubElement(physical_dimension48, 'MASS-EXP')
    mass_exp48.text = '-1'
    time_exp48 = ET.SubElement(physical_dimension48, 'TIME-EXP')
    time_exp48.text = '3'
    current_exp48 = ET.SubElement(physical_dimension48, 'CURRENT-EXP')
    current_exp48.text = '2'
    temperature_exp48 = ET.SubElement(physical_dimension48, 'TEMPERATURE-EXP')
    temperature_exp48.text = '0'
    molar_amount_exp48 = ET.SubElement(physical_dimension48, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp48.text = '0'
    luminous_intensity_exp48 = ET.SubElement(physical_dimension48, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp48.text = '0'
    physical_dimension49 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name55 = ET.SubElement(physical_dimension49, 'SHORT-NAME')
    short_name55.text = 'LenNeg3Ti1I1'
    long_name51 = ET.SubElement(physical_dimension49, 'LONG-NAME')
    l_451 = ET.SubElement(long_name51, 'L-4')
    l_451.text = 'Electric Charge Density'
    l_451.attrib = {'L': 'EN'}
    length_exp49 = ET.SubElement(physical_dimension49, 'LENGTH-EXP')
    length_exp49.text = '-3'
    mass_exp49 = ET.SubElement(physical_dimension49, 'MASS-EXP')
    mass_exp49.text = '0'
    time_exp49 = ET.SubElement(physical_dimension49, 'TIME-EXP')
    time_exp49.text = '1'
    current_exp49 = ET.SubElement(physical_dimension49, 'CURRENT-EXP')
    current_exp49.text = '1'
    temperature_exp49 = ET.SubElement(physical_dimension49, 'TEMPERATURE-EXP')
    temperature_exp49.text = '0'
    molar_amount_exp49 = ET.SubElement(physical_dimension49, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp49.text = '0'
    luminous_intensity_exp49 = ET.SubElement(physical_dimension49, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp49.text = '0'
    physical_dimension50 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name56 = ET.SubElement(physical_dimension50, 'SHORT-NAME')
    short_name56.text = 'LenNeg3Ti1I1_1'
    long_name52 = ET.SubElement(physical_dimension50, 'LONG-NAME')
    l_452 = ET.SubElement(long_name52, 'L-4')
    l_452.text = 'Pressure per Voltage'
    l_452.attrib = {'L': 'EN'}
    length_exp50 = ET.SubElement(physical_dimension50, 'LENGTH-EXP')
    length_exp50.text = '-3'
    mass_exp50 = ET.SubElement(physical_dimension50, 'MASS-EXP')
    mass_exp50.text = '0'
    time_exp50 = ET.SubElement(physical_dimension50, 'TIME-EXP')
    time_exp50.text = '1'
    current_exp50 = ET.SubElement(physical_dimension50, 'CURRENT-EXP')
    current_exp50.text = '1'
    temperature_exp50 = ET.SubElement(physical_dimension50, 'TEMPERATURE-EXP')
    temperature_exp50.text = '0'
    molar_amount_exp50 = ET.SubElement(physical_dimension50, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp50.text = '0'
    luminous_intensity_exp50 = ET.SubElement(physical_dimension50, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp50.text = '0'
    physical_dimension51 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name57 = ET.SubElement(physical_dimension51, 'SHORT-NAME')
    short_name57.text = 'LenNeg3TiNeg1Amnt1'
    long_name53 = ET.SubElement(physical_dimension51, 'LONG-NAME')
    l_453 = ET.SubElement(long_name53, 'L-4')
    l_453.text = 'Reaction Rate'
    l_453.attrib = {'L': 'EN'}
    length_exp51 = ET.SubElement(physical_dimension51, 'LENGTH-EXP')
    length_exp51.text = '-3'
    mass_exp51 = ET.SubElement(physical_dimension51, 'MASS-EXP')
    mass_exp51.text = '0'
    time_exp51 = ET.SubElement(physical_dimension51, 'TIME-EXP')
    time_exp51.text = '-1'
    current_exp51 = ET.SubElement(physical_dimension51, 'CURRENT-EXP')
    current_exp51.text = '0'
    temperature_exp51 = ET.SubElement(physical_dimension51, 'TEMPERATURE-EXP')
    temperature_exp51.text = '0'
    molar_amount_exp51 = ET.SubElement(physical_dimension51, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp51.text = '1'
    luminous_intensity_exp51 = ET.SubElement(physical_dimension51, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp51.text = '0'
    physical_dimension52 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name58 = ET.SubElement(physical_dimension52, 'SHORT-NAME')
    short_name58.text = 'LenNeg4M1TiNeg1'
    long_name54 = ET.SubElement(physical_dimension52, 'LONG-NAME')
    l_454 = ET.SubElement(long_name54, 'L-4')
    l_454.text = 'Pressure per Volumetric Flow / Flow Resistance'
    l_454.attrib = {'L': 'EN'}
    length_exp52 = ET.SubElement(physical_dimension52, 'LENGTH-EXP')
    length_exp52.text = '-4'
    mass_exp52 = ET.SubElement(physical_dimension52, 'MASS-EXP')
    mass_exp52.text = '1'
    time_exp52 = ET.SubElement(physical_dimension52, 'TIME-EXP')
    time_exp52.text = '-1'
    current_exp52 = ET.SubElement(physical_dimension52, 'CURRENT-EXP')
    current_exp52.text = '0'
    temperature_exp52 = ET.SubElement(physical_dimension52, 'TEMPERATURE-EXP')
    temperature_exp52.text = '0'
    molar_amount_exp52 = ET.SubElement(physical_dimension52, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp52.text = '0'
    luminous_intensity_exp52 = ET.SubElement(physical_dimension52, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp52.text = '0'
    physical_dimension53 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name59 = ET.SubElement(physical_dimension53, 'SHORT-NAME')
    short_name59.text = 'M1'
    long_name55 = ET.SubElement(physical_dimension53, 'LONG-NAME')
    l_455 = ET.SubElement(long_name55, 'L-4')
    l_455.text = 'Mass'
    l_455.attrib = {'L': 'EN'}
    length_exp53 = ET.SubElement(physical_dimension53, 'LENGTH-EXP')
    length_exp53.text = '0'
    mass_exp53 = ET.SubElement(physical_dimension53, 'MASS-EXP')
    mass_exp53.text = '1'
    time_exp53 = ET.SubElement(physical_dimension53, 'TIME-EXP')
    time_exp53.text = '0'
    current_exp53 = ET.SubElement(physical_dimension53, 'CURRENT-EXP')
    current_exp53.text = '0'
    temperature_exp53 = ET.SubElement(physical_dimension53, 'TEMPERATURE-EXP')
    temperature_exp53.text = '0'
    molar_amount_exp53 = ET.SubElement(physical_dimension53, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp53.text = '0'
    luminous_intensity_exp53 = ET.SubElement(physical_dimension53, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp53.text = '0'
    physical_dimension54 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name60 = ET.SubElement(physical_dimension54, 'SHORT-NAME')
    short_name60.text = 'M1AmntNeg1'
    long_name56 = ET.SubElement(physical_dimension54, 'LONG-NAME')
    l_456 = ET.SubElement(long_name56, 'L-4')
    l_456.text = 'Molar Mass'
    l_456.attrib = {'L': 'EN'}
    length_exp54 = ET.SubElement(physical_dimension54, 'LENGTH-EXP')
    length_exp54.text = '0'
    mass_exp54 = ET.SubElement(physical_dimension54, 'MASS-EXP')
    mass_exp54.text = '1'
    time_exp54 = ET.SubElement(physical_dimension54, 'TIME-EXP')
    time_exp54.text = '0'
    current_exp54 = ET.SubElement(physical_dimension54, 'CURRENT-EXP')
    current_exp54.text = '0'
    temperature_exp54 = ET.SubElement(physical_dimension54, 'TEMPERATURE-EXP')
    temperature_exp54.text = '0'
    molar_amount_exp54 = ET.SubElement(physical_dimension54, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp54.text = '-1'
    luminous_intensity_exp54 = ET.SubElement(physical_dimension54, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp54.text = '0'
    physical_dimension55 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name61 = ET.SubElement(physical_dimension55, 'SHORT-NAME')
    short_name61.text = 'M1TiNeg1'
    long_name57 = ET.SubElement(physical_dimension55, 'LONG-NAME')
    l_457 = ET.SubElement(long_name57, 'L-4')
    l_457.text = 'Mass Flow'
    l_457.attrib = {'L': 'EN'}
    length_exp55 = ET.SubElement(physical_dimension55, 'LENGTH-EXP')
    length_exp55.text = '0'
    mass_exp55 = ET.SubElement(physical_dimension55, 'MASS-EXP')
    mass_exp55.text = '1'
    time_exp55 = ET.SubElement(physical_dimension55, 'TIME-EXP')
    time_exp55.text = '-1'
    current_exp55 = ET.SubElement(physical_dimension55, 'CURRENT-EXP')
    current_exp55.text = '0'
    temperature_exp55 = ET.SubElement(physical_dimension55, 'TEMPERATURE-EXP')
    temperature_exp55.text = '0'
    molar_amount_exp55 = ET.SubElement(physical_dimension55, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp55.text = '0'
    luminous_intensity_exp55 = ET.SubElement(physical_dimension55, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp55.text = '0'
    physical_dimension56 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name62 = ET.SubElement(physical_dimension56, 'SHORT-NAME')
    short_name62.text = 'M1TiNeg1_1'
    long_name58 = ET.SubElement(physical_dimension56, 'LONG-NAME')
    l_458 = ET.SubElement(long_name58, 'L-4')
    l_458.text = 'Translational Dumping'
    l_458.attrib = {'L': 'EN'}
    length_exp56 = ET.SubElement(physical_dimension56, 'LENGTH-EXP')
    length_exp56.text = '0'
    mass_exp56 = ET.SubElement(physical_dimension56, 'MASS-EXP')
    mass_exp56.text = '1'
    time_exp56 = ET.SubElement(physical_dimension56, 'TIME-EXP')
    time_exp56.text = '-1'
    current_exp56 = ET.SubElement(physical_dimension56, 'CURRENT-EXP')
    current_exp56.text = '0'
    temperature_exp56 = ET.SubElement(physical_dimension56, 'TEMPERATURE-EXP')
    temperature_exp56.text = '0'
    molar_amount_exp56 = ET.SubElement(physical_dimension56, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp56.text = '0'
    luminous_intensity_exp56 = ET.SubElement(physical_dimension56, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp56.text = '0'
    physical_dimension57 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name63 = ET.SubElement(physical_dimension57, 'SHORT-NAME')
    short_name63.text = 'M1TiNeg2'
    long_name59 = ET.SubElement(physical_dimension57, 'LONG-NAME')
    l_459 = ET.SubElement(long_name59, 'L-4')
    l_459.text = 'Surface Tension'
    l_459.attrib = {'L': 'EN'}
    length_exp57 = ET.SubElement(physical_dimension57, 'LENGTH-EXP')
    length_exp57.text = '0'
    mass_exp57 = ET.SubElement(physical_dimension57, 'MASS-EXP')
    mass_exp57.text = '1'
    time_exp57 = ET.SubElement(physical_dimension57, 'TIME-EXP')
    time_exp57.text = '-2'
    current_exp57 = ET.SubElement(physical_dimension57, 'CURRENT-EXP')
    current_exp57.text = '0'
    temperature_exp57 = ET.SubElement(physical_dimension57, 'TEMPERATURE-EXP')
    temperature_exp57.text = '0'
    molar_amount_exp57 = ET.SubElement(physical_dimension57, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp57.text = '0'
    luminous_intensity_exp57 = ET.SubElement(physical_dimension57, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp57.text = '0'
    physical_dimension58 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name64 = ET.SubElement(physical_dimension58, 'SHORT-NAME')
    short_name64.text = 'M1TiNeg2INeg1'
    long_name60 = ET.SubElement(physical_dimension58, 'LONG-NAME')
    l_460 = ET.SubElement(long_name60, 'L-4')
    l_460.text = 'Magnetic Flux Density, Magnetic Induction'
    l_460.attrib = {'L': 'EN'}
    length_exp58 = ET.SubElement(physical_dimension58, 'LENGTH-EXP')
    length_exp58.text = '0'
    mass_exp58 = ET.SubElement(physical_dimension58, 'MASS-EXP')
    mass_exp58.text = '1'
    time_exp58 = ET.SubElement(physical_dimension58, 'TIME-EXP')
    time_exp58.text = '-2'
    current_exp58 = ET.SubElement(physical_dimension58, 'CURRENT-EXP')
    current_exp58.text = '-1'
    temperature_exp58 = ET.SubElement(physical_dimension58, 'TEMPERATURE-EXP')
    temperature_exp58.text = '0'
    molar_amount_exp58 = ET.SubElement(physical_dimension58, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp58.text = '0'
    luminous_intensity_exp58 = ET.SubElement(physical_dimension58, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp58.text = '0'
    physical_dimension59 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name65 = ET.SubElement(physical_dimension59, 'SHORT-NAME')
    short_name65.text = 'M1TiNeg3TNeg1'
    long_name61 = ET.SubElement(physical_dimension59, 'LONG-NAME')
    l_461 = ET.SubElement(long_name61, 'L-4')
    l_461.text = 'Heat Transfer Coefficient'
    l_461.attrib = {'L': 'EN'}
    length_exp59 = ET.SubElement(physical_dimension59, 'LENGTH-EXP')
    length_exp59.text = '0'
    mass_exp59 = ET.SubElement(physical_dimension59, 'MASS-EXP')
    mass_exp59.text = '1'
    time_exp59 = ET.SubElement(physical_dimension59, 'TIME-EXP')
    time_exp59.text = '-3'
    current_exp59 = ET.SubElement(physical_dimension59, 'CURRENT-EXP')
    current_exp59.text = '0'
    temperature_exp59 = ET.SubElement(physical_dimension59, 'TEMPERATURE-EXP')
    temperature_exp59.text = '-1'
    molar_amount_exp59 = ET.SubElement(physical_dimension59, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp59.text = '0'
    luminous_intensity_exp59 = ET.SubElement(physical_dimension59, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp59.text = '0'
    physical_dimension60 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name66 = ET.SubElement(physical_dimension60, 'SHORT-NAME')
    short_name66.text = 'NoDimension'
    long_name62 = ET.SubElement(physical_dimension60, 'LONG-NAME')
    l_462 = ET.SubElement(long_name62, 'L-4')
    l_462.text = 'Dimensionless'
    l_462.attrib = {'L': 'EN'}
    length_exp60 = ET.SubElement(physical_dimension60, 'LENGTH-EXP')
    length_exp60.text = '0'
    mass_exp60 = ET.SubElement(physical_dimension60, 'MASS-EXP')
    mass_exp60.text = '0'
    time_exp60 = ET.SubElement(physical_dimension60, 'TIME-EXP')
    time_exp60.text = '0'
    current_exp60 = ET.SubElement(physical_dimension60, 'CURRENT-EXP')
    current_exp60.text = '0'
    temperature_exp60 = ET.SubElement(physical_dimension60, 'TEMPERATURE-EXP')
    temperature_exp60.text = '0'
    molar_amount_exp60 = ET.SubElement(physical_dimension60, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp60.text = '0'
    luminous_intensity_exp60 = ET.SubElement(physical_dimension60, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp60.text = '0'
    physical_dimension61 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name67 = ET.SubElement(physical_dimension61, 'SHORT-NAME')
    short_name67.text = 'NoDimension_1'
    long_name63 = ET.SubElement(physical_dimension61, 'LONG-NAME')
    l_463 = ET.SubElement(long_name63, 'L-4')
    l_463.text = 'Ratio'
    l_463.attrib = {'L': 'EN'}
    length_exp61 = ET.SubElement(physical_dimension61, 'LENGTH-EXP')
    length_exp61.text = '0'
    mass_exp61 = ET.SubElement(physical_dimension61, 'MASS-EXP')
    mass_exp61.text = '0'
    time_exp61 = ET.SubElement(physical_dimension61, 'TIME-EXP')
    time_exp61.text = '0'
    current_exp61 = ET.SubElement(physical_dimension61, 'CURRENT-EXP')
    current_exp61.text = '0'
    temperature_exp61 = ET.SubElement(physical_dimension61, 'TEMPERATURE-EXP')
    temperature_exp61.text = '0'
    molar_amount_exp61 = ET.SubElement(physical_dimension61, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp61.text = '0'
    luminous_intensity_exp61 = ET.SubElement(physical_dimension61, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp61.text = '0'
    physical_dimension62 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name68 = ET.SubElement(physical_dimension62, 'SHORT-NAME')
    short_name68.text = 'NoDimension_2'
    long_name64 = ET.SubElement(physical_dimension62, 'LONG-NAME')
    l_464 = ET.SubElement(long_name64, 'L-4')
    l_464.text = 'Angle'
    l_464.attrib = {'L': 'EN'}
    length_exp62 = ET.SubElement(physical_dimension62, 'LENGTH-EXP')
    length_exp62.text = '0'
    mass_exp62 = ET.SubElement(physical_dimension62, 'MASS-EXP')
    mass_exp62.text = '0'
    time_exp62 = ET.SubElement(physical_dimension62, 'TIME-EXP')
    time_exp62.text = '0'
    current_exp62 = ET.SubElement(physical_dimension62, 'CURRENT-EXP')
    current_exp62.text = '0'
    temperature_exp62 = ET.SubElement(physical_dimension62, 'TEMPERATURE-EXP')
    temperature_exp62.text = '0'
    molar_amount_exp62 = ET.SubElement(physical_dimension62, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp62.text = '0'
    luminous_intensity_exp62 = ET.SubElement(physical_dimension62, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp62.text = '0'
    physical_dimension63 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name69 = ET.SubElement(physical_dimension63, 'SHORT-NAME')
    short_name69.text = 'NoDimension_5'
    long_name65 = ET.SubElement(physical_dimension63, 'LONG-NAME')
    l_465 = ET.SubElement(long_name65, 'L-4')
    l_465.text = 'Logarithmic Ratio'
    l_465.attrib = {'L': 'EN'}
    length_exp63 = ET.SubElement(physical_dimension63, 'LENGTH-EXP')
    length_exp63.text = '0'
    mass_exp63 = ET.SubElement(physical_dimension63, 'MASS-EXP')
    mass_exp63.text = '0'
    time_exp63 = ET.SubElement(physical_dimension63, 'TIME-EXP')
    time_exp63.text = '0'
    current_exp63 = ET.SubElement(physical_dimension63, 'CURRENT-EXP')
    current_exp63.text = '0'
    temperature_exp63 = ET.SubElement(physical_dimension63, 'TEMPERATURE-EXP')
    temperature_exp63.text = '0'
    molar_amount_exp63 = ET.SubElement(physical_dimension63, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp63.text = '0'
    luminous_intensity_exp63 = ET.SubElement(physical_dimension63, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp63.text = '0'
    physical_dimension64 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name70 = ET.SubElement(physical_dimension64, 'SHORT-NAME')
    short_name70.text = 'NoDimension_6'
    long_name66 = ET.SubElement(physical_dimension64, 'LONG-NAME')
    l_466 = ET.SubElement(long_name66, 'L-4')
    l_466.text = 'Amount of Data'
    l_466.attrib = {'L': 'EN'}
    length_exp64 = ET.SubElement(physical_dimension64, 'LENGTH-EXP')
    length_exp64.text = '0'
    mass_exp64 = ET.SubElement(physical_dimension64, 'MASS-EXP')
    mass_exp64.text = '0'
    time_exp64 = ET.SubElement(physical_dimension64, 'TIME-EXP')
    time_exp64.text = '0'
    current_exp64 = ET.SubElement(physical_dimension64, 'CURRENT-EXP')
    current_exp64.text = '0'
    temperature_exp64 = ET.SubElement(physical_dimension64, 'TEMPERATURE-EXP')
    temperature_exp64.text = '0'
    molar_amount_exp64 = ET.SubElement(physical_dimension64, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp64.text = '0'
    luminous_intensity_exp64 = ET.SubElement(physical_dimension64, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp64.text = '0'
    physical_dimension65 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name71 = ET.SubElement(physical_dimension65, 'SHORT-NAME')
    short_name71.text = 'T1'
    long_name67 = ET.SubElement(physical_dimension65, 'LONG-NAME')
    l_467 = ET.SubElement(long_name67, 'L-4')
    l_467.text = 'Absolute Temperature'
    l_467.attrib = {'L': 'EN'}
    length_exp65 = ET.SubElement(physical_dimension65, 'LENGTH-EXP')
    length_exp65.text = '0'
    mass_exp65 = ET.SubElement(physical_dimension65, 'MASS-EXP')
    mass_exp65.text = '0'
    time_exp65 = ET.SubElement(physical_dimension65, 'TIME-EXP')
    time_exp65.text = '0'
    current_exp65 = ET.SubElement(physical_dimension65, 'CURRENT-EXP')
    current_exp65.text = '0'
    temperature_exp65 = ET.SubElement(physical_dimension65, 'TEMPERATURE-EXP')
    temperature_exp65.text = '1'
    molar_amount_exp65 = ET.SubElement(physical_dimension65, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp65.text = '0'
    luminous_intensity_exp65 = ET.SubElement(physical_dimension65, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp65.text = '0'
    physical_dimension66 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name72 = ET.SubElement(physical_dimension66, 'SHORT-NAME')
    short_name72.text = 'T1I1'
    long_name68 = ET.SubElement(physical_dimension66, 'LONG-NAME')
    l_468 = ET.SubElement(long_name68, 'L-4')
    l_468.text = 'Electric Charge'
    l_468.attrib = {'L': 'EN'}
    length_exp66 = ET.SubElement(physical_dimension66, 'LENGTH-EXP')
    length_exp66.text = '0'
    mass_exp66 = ET.SubElement(physical_dimension66, 'MASS-EXP')
    mass_exp66.text = '0'
    time_exp66 = ET.SubElement(physical_dimension66, 'TIME-EXP')
    time_exp66.text = '1'
    current_exp66 = ET.SubElement(physical_dimension66, 'CURRENT-EXP')
    current_exp66.text = '1'
    temperature_exp66 = ET.SubElement(physical_dimension66, 'TEMPERATURE-EXP')
    temperature_exp66.text = '0'
    molar_amount_exp66 = ET.SubElement(physical_dimension66, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp66.text = '0'
    luminous_intensity_exp66 = ET.SubElement(physical_dimension66, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp66.text = '0'
    physical_dimension67 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name73 = ET.SubElement(physical_dimension67, 'SHORT-NAME')
    short_name73.text = 'T1_1'
    long_name69 = ET.SubElement(physical_dimension67, 'LONG-NAME')
    l_469 = ET.SubElement(long_name69, 'L-4')
    l_469.text = 'Relative Temperature, Temperature Difference'
    l_469.attrib = {'L': 'EN'}
    length_exp67 = ET.SubElement(physical_dimension67, 'LENGTH-EXP')
    length_exp67.text = '0'
    mass_exp67 = ET.SubElement(physical_dimension67, 'MASS-EXP')
    mass_exp67.text = '0'
    time_exp67 = ET.SubElement(physical_dimension67, 'TIME-EXP')
    time_exp67.text = '0'
    current_exp67 = ET.SubElement(physical_dimension67, 'CURRENT-EXP')
    current_exp67.text = '0'
    temperature_exp67 = ET.SubElement(physical_dimension67, 'TEMPERATURE-EXP')
    temperature_exp67.text = '1'
    molar_amount_exp67 = ET.SubElement(physical_dimension67, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp67.text = '0'
    luminous_intensity_exp67 = ET.SubElement(physical_dimension67, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp67.text = '0'
    physical_dimension68 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name74 = ET.SubElement(physical_dimension68, 'SHORT-NAME')
    short_name74.text = 'Ti1'
    long_name70 = ET.SubElement(physical_dimension68, 'LONG-NAME')
    l_470 = ET.SubElement(long_name70, 'L-4')
    l_470.text = 'Time'
    l_470.attrib = {'L': 'EN'}
    length_exp68 = ET.SubElement(physical_dimension68, 'LENGTH-EXP')
    length_exp68.text = '0'
    mass_exp68 = ET.SubElement(physical_dimension68, 'MASS-EXP')
    mass_exp68.text = '0'
    time_exp68 = ET.SubElement(physical_dimension68, 'TIME-EXP')
    time_exp68.text = '1'
    current_exp68 = ET.SubElement(physical_dimension68, 'CURRENT-EXP')
    current_exp68.text = '0'
    temperature_exp68 = ET.SubElement(physical_dimension68, 'TEMPERATURE-EXP')
    temperature_exp68.text = '0'
    molar_amount_exp68 = ET.SubElement(physical_dimension68, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp68.text = '0'
    luminous_intensity_exp68 = ET.SubElement(physical_dimension68, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp68.text = '0'
    physical_dimension69 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name75 = ET.SubElement(physical_dimension69, 'SHORT-NAME')
    short_name75.text = 'TiNeg1'
    long_name71 = ET.SubElement(physical_dimension69, 'LONG-NAME')
    l_471 = ET.SubElement(long_name71, 'L-4')
    l_471.text = 'Frequency'
    l_471.attrib = {'L': 'EN'}
    length_exp69 = ET.SubElement(physical_dimension69, 'LENGTH-EXP')
    length_exp69.text = '0'
    mass_exp69 = ET.SubElement(physical_dimension69, 'MASS-EXP')
    mass_exp69.text = '0'
    time_exp69 = ET.SubElement(physical_dimension69, 'TIME-EXP')
    time_exp69.text = '-1'
    current_exp69 = ET.SubElement(physical_dimension69, 'CURRENT-EXP')
    current_exp69.text = '0'
    temperature_exp69 = ET.SubElement(physical_dimension69, 'TEMPERATURE-EXP')
    temperature_exp69.text = '0'
    molar_amount_exp69 = ET.SubElement(physical_dimension69, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp69.text = '0'
    luminous_intensity_exp69 = ET.SubElement(physical_dimension69, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp69.text = '0'
    physical_dimension70 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name76 = ET.SubElement(physical_dimension70, 'SHORT-NAME')
    short_name76.text = 'TiNeg1Amnt1'
    long_name72 = ET.SubElement(physical_dimension70, 'LONG-NAME')
    l_472 = ET.SubElement(long_name72, 'L-4')
    l_472.text = 'Catalytic Activity'
    l_472.attrib = {'L': 'EN'}
    length_exp70 = ET.SubElement(physical_dimension70, 'LENGTH-EXP')
    length_exp70.text = '0'
    mass_exp70 = ET.SubElement(physical_dimension70, 'MASS-EXP')
    mass_exp70.text = '0'
    time_exp70 = ET.SubElement(physical_dimension70, 'TIME-EXP')
    time_exp70.text = '-1'
    current_exp70 = ET.SubElement(physical_dimension70, 'CURRENT-EXP')
    current_exp70.text = '0'
    temperature_exp70 = ET.SubElement(physical_dimension70, 'TEMPERATURE-EXP')
    temperature_exp70.text = '0'
    molar_amount_exp70 = ET.SubElement(physical_dimension70, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp70.text = '1'
    luminous_intensity_exp70 = ET.SubElement(physical_dimension70, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp70.text = '0'
    physical_dimension71 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name77 = ET.SubElement(physical_dimension71, 'SHORT-NAME')
    short_name77.text = 'TiNeg1I1'
    long_name73 = ET.SubElement(physical_dimension71, 'LONG-NAME')
    l_473 = ET.SubElement(long_name73, 'L-4')
    l_473.text = 'Electric Current Gradient'
    l_473.attrib = {'L': 'EN'}
    length_exp71 = ET.SubElement(physical_dimension71, 'LENGTH-EXP')
    length_exp71.text = '0'
    mass_exp71 = ET.SubElement(physical_dimension71, 'MASS-EXP')
    mass_exp71.text = '0'
    time_exp71 = ET.SubElement(physical_dimension71, 'TIME-EXP')
    time_exp71.text = '-1'
    current_exp71 = ET.SubElement(physical_dimension71, 'CURRENT-EXP')
    current_exp71.text = '1'
    temperature_exp71 = ET.SubElement(physical_dimension71, 'TEMPERATURE-EXP')
    temperature_exp71.text = '0'
    molar_amount_exp71 = ET.SubElement(physical_dimension71, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp71.text = '0'
    luminous_intensity_exp71 = ET.SubElement(physical_dimension71, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp71.text = '0'
    physical_dimension72 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name78 = ET.SubElement(physical_dimension72, 'SHORT-NAME')
    short_name78.text = 'TiNeg1T1'
    long_name74 = ET.SubElement(physical_dimension72, 'LONG-NAME')
    l_474 = ET.SubElement(long_name74, 'L-4')
    l_474.text = 'Temperature Gradient'
    l_474.attrib = {'L': 'EN'}
    length_exp72 = ET.SubElement(physical_dimension72, 'LENGTH-EXP')
    length_exp72.text = '0'
    mass_exp72 = ET.SubElement(physical_dimension72, 'MASS-EXP')
    mass_exp72.text = '0'
    time_exp72 = ET.SubElement(physical_dimension72, 'TIME-EXP')
    time_exp72.text = '-1'
    current_exp72 = ET.SubElement(physical_dimension72, 'CURRENT-EXP')
    current_exp72.text = '0'
    temperature_exp72 = ET.SubElement(physical_dimension72, 'TEMPERATURE-EXP')
    temperature_exp72.text = '1'
    molar_amount_exp72 = ET.SubElement(physical_dimension72, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp72.text = '0'
    luminous_intensity_exp72 = ET.SubElement(physical_dimension72, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp72.text = '0'
    physical_dimension73 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name79 = ET.SubElement(physical_dimension73, 'SHORT-NAME')
    short_name79.text = 'TiNeg1_1'
    long_name75 = ET.SubElement(physical_dimension73, 'LONG-NAME')
    l_475 = ET.SubElement(long_name75, 'L-4')
    l_475.text = 'Ratio Gradient'
    l_475.attrib = {'L': 'EN'}
    length_exp73 = ET.SubElement(physical_dimension73, 'LENGTH-EXP')
    length_exp73.text = '0'
    mass_exp73 = ET.SubElement(physical_dimension73, 'MASS-EXP')
    mass_exp73.text = '0'
    time_exp73 = ET.SubElement(physical_dimension73, 'TIME-EXP')
    time_exp73.text = '-1'
    current_exp73 = ET.SubElement(physical_dimension73, 'CURRENT-EXP')
    current_exp73.text = '0'
    temperature_exp73 = ET.SubElement(physical_dimension73, 'TEMPERATURE-EXP')
    temperature_exp73.text = '0'
    molar_amount_exp73 = ET.SubElement(physical_dimension73, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp73.text = '0'
    luminous_intensity_exp73 = ET.SubElement(physical_dimension73, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp73.text = '0'
    physical_dimension74 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name80 = ET.SubElement(physical_dimension74, 'SHORT-NAME')
    short_name80.text = 'TiNeg1_2'
    long_name76 = ET.SubElement(physical_dimension74, 'LONG-NAME')
    l_476 = ET.SubElement(long_name76, 'L-4')
    l_476.text = 'Rotational Speed'
    l_476.attrib = {'L': 'EN'}
    length_exp74 = ET.SubElement(physical_dimension74, 'LENGTH-EXP')
    length_exp74.text = '0'
    mass_exp74 = ET.SubElement(physical_dimension74, 'MASS-EXP')
    mass_exp74.text = '0'
    time_exp74 = ET.SubElement(physical_dimension74, 'TIME-EXP')
    time_exp74.text = '-1'
    current_exp74 = ET.SubElement(physical_dimension74, 'CURRENT-EXP')
    current_exp74.text = '0'
    temperature_exp74 = ET.SubElement(physical_dimension74, 'TEMPERATURE-EXP')
    temperature_exp74.text = '0'
    molar_amount_exp74 = ET.SubElement(physical_dimension74, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp74.text = '0'
    luminous_intensity_exp74 = ET.SubElement(physical_dimension74, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp74.text = '0'
    physical_dimension75 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name81 = ET.SubElement(physical_dimension75, 'SHORT-NAME')
    short_name81.text = 'TiNeg1_3'
    long_name77 = ET.SubElement(physical_dimension75, 'LONG-NAME')
    l_477 = ET.SubElement(long_name77, 'L-4')
    l_477.text = 'Transfer Rate'
    l_477.attrib = {'L': 'EN'}
    length_exp75 = ET.SubElement(physical_dimension75, 'LENGTH-EXP')
    length_exp75.text = '0'
    mass_exp75 = ET.SubElement(physical_dimension75, 'MASS-EXP')
    mass_exp75.text = '0'
    time_exp75 = ET.SubElement(physical_dimension75, 'TIME-EXP')
    time_exp75.text = '-1'
    current_exp75 = ET.SubElement(physical_dimension75, 'CURRENT-EXP')
    current_exp75.text = '0'
    temperature_exp75 = ET.SubElement(physical_dimension75, 'TEMPERATURE-EXP')
    temperature_exp75.text = '0'
    molar_amount_exp75 = ET.SubElement(physical_dimension75, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp75.text = '0'
    luminous_intensity_exp75 = ET.SubElement(physical_dimension75, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp75.text = '0'
    physical_dimension76 = ET.SubElement(elements2, 'PHYSICAL-DIMENSION')
    short_name82 = ET.SubElement(physical_dimension76, 'SHORT-NAME')
    short_name82.text = 'TiNeg2'
    long_name78 = ET.SubElement(physical_dimension76, 'LONG-NAME')
    l_478 = ET.SubElement(long_name78, 'L-4')
    l_478.text = 'Rotational Speed Gradient'
    l_478.attrib = {'L': 'EN'}
    length_exp76 = ET.SubElement(physical_dimension76, 'LENGTH-EXP')
    length_exp76.text = '0'
    mass_exp76 = ET.SubElement(physical_dimension76, 'MASS-EXP')
    mass_exp76.text = '0'
    time_exp76 = ET.SubElement(physical_dimension76, 'TIME-EXP')
    time_exp76.text = '-2'
    current_exp76 = ET.SubElement(physical_dimension76, 'CURRENT-EXP')
    current_exp76.text = '0'
    temperature_exp76 = ET.SubElement(physical_dimension76, 'TEMPERATURE-EXP')
    temperature_exp76.text = '0'
    molar_amount_exp76 = ET.SubElement(physical_dimension76, 'MOLAR-AMOUNT-EXP')
    molar_amount_exp76.text = '0'
    luminous_intensity_exp76 = ET.SubElement(physical_dimension76, 'LUMINOUS-INTENSITY-EXP')
    luminous_intensity_exp76.text = '0'
    ar_package6 = ET.SubElement(ar_packages4, 'AR-PACKAGE')
    short_name83 = ET.SubElement(ar_package6, 'SHORT-NAME')
    short_name83.text = 'Units'
    category4 = ET.SubElement(ar_package6, 'CATEGORY')
    category4.text = 'STANDARD'
    reference_bases1 = ET.SubElement(ar_package6, 'REFERENCE-BASES')
    reference_base1 = ET.SubElement(reference_bases1, 'REFERENCE-BASE')
    short_label1 = ET.SubElement(reference_base1, 'SHORT-LABEL')
    short_label1.text = 'PhysicalDimensions'
    is_default1 = ET.SubElement(reference_base1, 'IS-DEFAULT')
    is_default1.text = 'false'
    package_ref1 = ET.SubElement(reference_base1, 'PACKAGE-REF')
    package_ref1.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/PhysicalDimensions'
    package_ref1.attrib = {'DEST': 'AR-PACKAGE'}
    elements3 = ET.SubElement(ar_package6, 'ELEMENTS')
    unit1 = ET.SubElement(elements3, 'UNIT')
    short_name84 = ET.SubElement(unit1, 'SHORT-NAME')
    short_name84.text = 'Ampr'
    long_name79 = ET.SubElement(unit1, 'LONG-NAME')
    l_479 = ET.SubElement(long_name79, 'L-4')
    l_479.text = 'Ampere'
    l_479.attrib = {'L': 'EN'}
    display_name1 = ET.SubElement(unit1, 'DISPLAY-NAME')
    display_name1.text = 'A'
    factor_si_to_unit1 = ET.SubElement(unit1, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit1.text = '1'
    offset_si_to_unit1 = ET.SubElement(unit1, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit1.text = '0'
    physical_dimension_ref1 = ET.SubElement(unit1, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref1.text = 'I1'
    physical_dimension_ref1.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit2 = ET.SubElement(elements3, 'UNIT')
    short_name85 = ET.SubElement(unit2, 'SHORT-NAME')
    short_name85.text = 'AmprPerSec'
    long_name80 = ET.SubElement(unit2, 'LONG-NAME')
    l_480 = ET.SubElement(long_name80, 'L-4')
    l_480.text = 'Ampere Per Second'
    l_480.attrib = {'L': 'EN'}
    display_name2 = ET.SubElement(unit2, 'DISPLAY-NAME')
    display_name2.text = 'A/s'
    factor_si_to_unit2 = ET.SubElement(unit2, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit2.text = '1'
    offset_si_to_unit2 = ET.SubElement(unit2, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit2.text = '0'
    physical_dimension_ref2 = ET.SubElement(unit2, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref2.text = 'TiNeg1I1'
    physical_dimension_ref2.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit3 = ET.SubElement(elements3, 'UNIT')
    short_name86 = ET.SubElement(unit3, 'SHORT-NAME')
    short_name86.text = 'AmprSec'
    long_name81 = ET.SubElement(unit3, 'LONG-NAME')
    l_481 = ET.SubElement(long_name81, 'L-4')
    l_481.text = 'Amperesecond'
    l_481.attrib = {'L': 'EN'}
    display_name3 = ET.SubElement(unit3, 'DISPLAY-NAME')
    display_name3.text = 'As'
    factor_si_to_unit3 = ET.SubElement(unit3, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit3.text = '1'
    offset_si_to_unit3 = ET.SubElement(unit3, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit3.text = '0'
    physical_dimension_ref3 = ET.SubElement(unit3, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref3.text = 'T1I1'
    physical_dimension_ref3.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit4 = ET.SubElement(elements3, 'UNIT')
    short_name87 = ET.SubElement(unit4, 'SHORT-NAME')
    short_name87.text = 'Bar'
    long_name82 = ET.SubElement(unit4, 'LONG-NAME')
    l_482 = ET.SubElement(long_name82, 'L-4')
    l_482.text = 'Bar'
    l_482.attrib = {'L': 'EN'}
    display_name4 = ET.SubElement(unit4, 'DISPLAY-NAME')
    display_name4.text = 'bar'
    factor_si_to_unit4 = ET.SubElement(unit4, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit4.text = '1E-05'
    offset_si_to_unit4 = ET.SubElement(unit4, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit4.text = '0'
    physical_dimension_ref4 = ET.SubElement(unit4, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref4.text = 'LenNeg1M1TiNeg2'
    physical_dimension_ref4.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit5 = ET.SubElement(elements3, 'UNIT')
    short_name88 = ET.SubElement(unit5, 'SHORT-NAME')
    short_name88.text = 'BarPerSec'
    long_name83 = ET.SubElement(unit5, 'LONG-NAME')
    l_483 = ET.SubElement(long_name83, 'L-4')
    l_483.text = 'Bar Per Second'
    l_483.attrib = {'L': 'EN'}
    display_name5 = ET.SubElement(unit5, 'DISPLAY-NAME')
    display_name5.text = 'bar/s'
    factor_si_to_unit5 = ET.SubElement(unit5, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit5.text = '1E-05'
    offset_si_to_unit5 = ET.SubElement(unit5, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit5.text = '0'
    physical_dimension_ref5 = ET.SubElement(unit5, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref5.text = 'LenNeg1M1TiNeg3'
    physical_dimension_ref5.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit6 = ET.SubElement(elements3, 'UNIT')
    short_name89 = ET.SubElement(unit6, 'SHORT-NAME')
    short_name89.text = 'Bel'
    long_name84 = ET.SubElement(unit6, 'LONG-NAME')
    l_484 = ET.SubElement(long_name84, 'L-4')
    l_484.text = 'Bel'
    l_484.attrib = {'L': 'EN'}
    display_name6 = ET.SubElement(unit6, 'DISPLAY-NAME')
    display_name6.text = 'B'
    factor_si_to_unit6 = ET.SubElement(unit6, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit6.text = '1'
    offset_si_to_unit6 = ET.SubElement(unit6, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit6.text = '0'
    physical_dimension_ref6 = ET.SubElement(unit6, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref6.text = 'NoDimension_5'
    physical_dimension_ref6.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit7 = ET.SubElement(elements3, 'UNIT')
    short_name90 = ET.SubElement(unit7, 'SHORT-NAME')
    short_name90.text = 'Bit'
    long_name85 = ET.SubElement(unit7, 'LONG-NAME')
    l_485 = ET.SubElement(long_name85, 'L-4')
    l_485.text = 'Bit'
    l_485.attrib = {'L': 'EN'}
    display_name7 = ET.SubElement(unit7, 'DISPLAY-NAME')
    display_name7.text = 'bit'
    factor_si_to_unit7 = ET.SubElement(unit7, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit7.text = '1'
    offset_si_to_unit7 = ET.SubElement(unit7, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit7.text = '0'
    physical_dimension_ref7 = ET.SubElement(unit7, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref7.text = 'NoDimension_6'
    physical_dimension_ref7.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit8 = ET.SubElement(elements3, 'UNIT')
    short_name91 = ET.SubElement(unit8, 'SHORT-NAME')
    short_name91.text = 'BitPerSec'
    long_name86 = ET.SubElement(unit8, 'LONG-NAME')
    l_486 = ET.SubElement(long_name86, 'L-4')
    l_486.text = 'Bit Per Second'
    l_486.attrib = {'L': 'EN'}
    display_name8 = ET.SubElement(unit8, 'DISPLAY-NAME')
    display_name8.text = 'bit/s'
    factor_si_to_unit8 = ET.SubElement(unit8, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit8.text = '1'
    offset_si_to_unit8 = ET.SubElement(unit8, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit8.text = '0'
    physical_dimension_ref8 = ET.SubElement(unit8, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref8.text = 'TiNeg1_3'
    physical_dimension_ref8.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit9 = ET.SubElement(elements3, 'UNIT')
    short_name92 = ET.SubElement(unit9, 'SHORT-NAME')
    short_name92.text = 'BytPerSec'
    long_name87 = ET.SubElement(unit9, 'LONG-NAME')
    l_487 = ET.SubElement(long_name87, 'L-4')
    l_487.text = 'Byte Per Second'
    l_487.attrib = {'L': 'EN'}
    display_name9 = ET.SubElement(unit9, 'DISPLAY-NAME')
    display_name9.text = 'Byte/s'
    factor_si_to_unit9 = ET.SubElement(unit9, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit9.text = '0.125'
    offset_si_to_unit9 = ET.SubElement(unit9, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit9.text = '0'
    physical_dimension_ref9 = ET.SubElement(unit9, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref9.text = 'TiNeg1_3'
    physical_dimension_ref9.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit10 = ET.SubElement(elements3, 'UNIT')
    short_name93 = ET.SubElement(unit10, 'SHORT-NAME')
    short_name93.text = 'Byte'
    long_name88 = ET.SubElement(unit10, 'LONG-NAME')
    l_488 = ET.SubElement(long_name88, 'L-4')
    l_488.text = 'Byte'
    l_488.attrib = {'L': 'EN'}
    display_name10 = ET.SubElement(unit10, 'DISPLAY-NAME')
    display_name10.text = 'Byte'
    factor_si_to_unit10 = ET.SubElement(unit10, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit10.text = '0.125'
    offset_si_to_unit10 = ET.SubElement(unit10, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit10.text = '0'
    physical_dimension_ref10 = ET.SubElement(unit10, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref10.text = 'NoDimension_6'
    physical_dimension_ref10.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit11 = ET.SubElement(elements3, 'UNIT')
    short_name94 = ET.SubElement(unit11, 'SHORT-NAME')
    short_name94.text = 'Cd'
    long_name89 = ET.SubElement(unit11, 'LONG-NAME')
    l_489 = ET.SubElement(long_name89, 'L-4')
    l_489.text = 'Candela'
    l_489.attrib = {'L': 'EN'}
    display_name11 = ET.SubElement(unit11, 'DISPLAY-NAME')
    display_name11.text = 'cd'
    factor_si_to_unit11 = ET.SubElement(unit11, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit11.text = '1'
    offset_si_to_unit11 = ET.SubElement(unit11, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit11.text = '0'
    physical_dimension_ref11 = ET.SubElement(unit11, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref11.text = 'Illmn1'
    physical_dimension_ref11.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit12 = ET.SubElement(elements3, 'UNIT')
    short_name95 = ET.SubElement(unit12, 'SHORT-NAME')
    short_name95.text = 'CentiMtr'
    long_name90 = ET.SubElement(unit12, 'LONG-NAME')
    l_490 = ET.SubElement(long_name90, 'L-4')
    l_490.text = 'Centimeter'
    l_490.attrib = {'L': 'EN'}
    display_name12 = ET.SubElement(unit12, 'DISPLAY-NAME')
    display_name12.text = 'cm'
    factor_si_to_unit12 = ET.SubElement(unit12, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit12.text = '100'
    offset_si_to_unit12 = ET.SubElement(unit12, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit12.text = '0'
    physical_dimension_ref12 = ET.SubElement(unit12, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref12.text = 'Len1'
    physical_dimension_ref12.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit13 = ET.SubElement(elements3, 'UNIT')
    short_name96 = ET.SubElement(unit13, 'SHORT-NAME')
    short_name96.text = 'CentiMtrSqd'
    long_name91 = ET.SubElement(unit13, 'LONG-NAME')
    l_491 = ET.SubElement(long_name91, 'L-4')
    l_491.text = 'Square Centimeter'
    l_491.attrib = {'L': 'EN'}
    display_name13 = ET.SubElement(unit13, 'DISPLAY-NAME')
    display_name13.text = 'cm^2'
    factor_si_to_unit13 = ET.SubElement(unit13, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit13.text = '10000'
    offset_si_to_unit13 = ET.SubElement(unit13, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit13.text = '0'
    physical_dimension_ref13 = ET.SubElement(unit13, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref13.text = 'Len2'
    physical_dimension_ref13.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit14 = ET.SubElement(elements3, 'UNIT')
    short_name97 = ET.SubElement(unit14, 'SHORT-NAME')
    short_name97.text = 'Coulomb'
    long_name92 = ET.SubElement(unit14, 'LONG-NAME')
    l_492 = ET.SubElement(long_name92, 'L-4')
    l_492.text = 'Coulomb'
    l_492.attrib = {'L': 'EN'}
    display_name14 = ET.SubElement(unit14, 'DISPLAY-NAME')
    display_name14.text = 'C'
    factor_si_to_unit14 = ET.SubElement(unit14, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit14.text = '1'
    offset_si_to_unit14 = ET.SubElement(unit14, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit14.text = '0'
    physical_dimension_ref14 = ET.SubElement(unit14, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref14.text = 'T1I1'
    physical_dimension_ref14.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit15 = ET.SubElement(elements3, 'UNIT')
    short_name98 = ET.SubElement(unit15, 'SHORT-NAME')
    short_name98.text = 'Day'
    long_name93 = ET.SubElement(unit15, 'LONG-NAME')
    l_493 = ET.SubElement(long_name93, 'L-4')
    l_493.text = 'Day'
    l_493.attrib = {'L': 'EN'}
    display_name15 = ET.SubElement(unit15, 'DISPLAY-NAME')
    display_name15.text = 'd'
    factor_si_to_unit15 = ET.SubElement(unit15, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit15.text = '1.15740740740741E-05'
    offset_si_to_unit15 = ET.SubElement(unit15, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit15.text = '0'
    physical_dimension_ref15 = ET.SubElement(unit15, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref15.text = 'Ti1'
    physical_dimension_ref15.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit16 = ET.SubElement(elements3, 'UNIT')
    short_name99 = ET.SubElement(unit16, 'SHORT-NAME')
    short_name99.text = 'DeciBel'
    long_name94 = ET.SubElement(unit16, 'LONG-NAME')
    l_494 = ET.SubElement(long_name94, 'L-4')
    l_494.text = 'Decibel'
    l_494.attrib = {'L': 'EN'}
    display_name16 = ET.SubElement(unit16, 'DISPLAY-NAME')
    display_name16.text = 'dB'
    factor_si_to_unit16 = ET.SubElement(unit16, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit16.text = '10'
    offset_si_to_unit16 = ET.SubElement(unit16, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit16.text = '0'
    physical_dimension_ref16 = ET.SubElement(unit16, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref16.text = 'NoDimension_5'
    physical_dimension_ref16.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit17 = ET.SubElement(elements3, 'UNIT')
    short_name100 = ET.SubElement(unit17, 'SHORT-NAME')
    short_name100.text = 'Deg'
    long_name95 = ET.SubElement(unit17, 'LONG-NAME')
    l_495 = ET.SubElement(long_name95, 'L-4')
    l_495.text = 'Degree'
    l_495.attrib = {'L': 'EN'}
    display_name17 = ET.SubElement(unit17, 'DISPLAY-NAME')
    display_name17.text = '°'
    factor_si_to_unit17 = ET.SubElement(unit17, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit17.text = '360'
    offset_si_to_unit17 = ET.SubElement(unit17, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit17.text = '0'
    physical_dimension_ref17 = ET.SubElement(unit17, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref17.text = 'NoDimension_2'
    physical_dimension_ref17.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit18 = ET.SubElement(elements3, 'UNIT')
    short_name101 = ET.SubElement(unit18, 'SHORT-NAME')
    short_name101.text = 'DegCgrd'
    long_name96 = ET.SubElement(unit18, 'LONG-NAME')
    l_496 = ET.SubElement(long_name96, 'L-4')
    l_496.text = 'Degree Celsius (Absolute Temperature)'
    l_496.attrib = {'L': 'EN'}
    display_name18 = ET.SubElement(unit18, 'DISPLAY-NAME')
    display_name18.text = '°C'
    factor_si_to_unit18 = ET.SubElement(unit18, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit18.text = '1'
    offset_si_to_unit18 = ET.SubElement(unit18, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit18.text = '-273.15'
    physical_dimension_ref18 = ET.SubElement(unit18, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref18.text = 'T1'
    physical_dimension_ref18.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit19 = ET.SubElement(elements3, 'UNIT')
    short_name102 = ET.SubElement(unit19, 'SHORT-NAME')
    short_name102.text = 'DegPerSec'
    long_name97 = ET.SubElement(unit19, 'LONG-NAME')
    l_497 = ET.SubElement(long_name97, 'L-4')
    l_497.text = 'Degree Per Sec'
    l_497.attrib = {'L': 'EN'}
    display_name19 = ET.SubElement(unit19, 'DISPLAY-NAME')
    display_name19.text = '°/s'
    factor_si_to_unit19 = ET.SubElement(unit19, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit19.text = '360'
    offset_si_to_unit19 = ET.SubElement(unit19, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit19.text = '0'
    physical_dimension_ref19 = ET.SubElement(unit19, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref19.text = 'TiNeg1_2'
    physical_dimension_ref19.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit20 = ET.SubElement(elements3, 'UNIT')
    short_name103 = ET.SubElement(unit20, 'SHORT-NAME')
    short_name103.text = 'Frd'
    long_name98 = ET.SubElement(unit20, 'LONG-NAME')
    l_498 = ET.SubElement(long_name98, 'L-4')
    l_498.text = 'Farad'
    l_498.attrib = {'L': 'EN'}
    display_name20 = ET.SubElement(unit20, 'DISPLAY-NAME')
    display_name20.text = 'F'
    factor_si_to_unit20 = ET.SubElement(unit20, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit20.text = '1'
    offset_si_to_unit20 = ET.SubElement(unit20, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit20.text = '0'
    physical_dimension_ref20 = ET.SubElement(unit20, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref20.text = 'LenNeg2MNeg1Ti4I2'
    physical_dimension_ref20.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit21 = ET.SubElement(elements3, 'UNIT')
    short_name104 = ET.SubElement(unit21, 'SHORT-NAME')
    short_name104.text = 'Gr'
    long_name99 = ET.SubElement(unit21, 'LONG-NAME')
    l_499 = ET.SubElement(long_name99, 'L-4')
    l_499.text = 'Gram'
    l_499.attrib = {'L': 'EN'}
    display_name21 = ET.SubElement(unit21, 'DISPLAY-NAME')
    display_name21.text = 'g'
    factor_si_to_unit21 = ET.SubElement(unit21, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit21.text = '1000'
    offset_si_to_unit21 = ET.SubElement(unit21, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit21.text = '0'
    physical_dimension_ref21 = ET.SubElement(unit21, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref21.text = 'M1'
    physical_dimension_ref21.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit22 = ET.SubElement(elements3, 'UNIT')
    short_name105 = ET.SubElement(unit22, 'SHORT-NAME')
    short_name105.text = 'GrPerLtr'
    long_name100 = ET.SubElement(unit22, 'LONG-NAME')
    l_4100 = ET.SubElement(long_name100, 'L-4')
    l_4100.text = 'Gram Per Liter'
    l_4100.attrib = {'L': 'EN'}
    display_name22 = ET.SubElement(unit22, 'DISPLAY-NAME')
    display_name22.text = 'g/l'
    factor_si_to_unit22 = ET.SubElement(unit22, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit22.text = '1'
    offset_si_to_unit22 = ET.SubElement(unit22, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit22.text = '0'
    physical_dimension_ref22 = ET.SubElement(unit22, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref22.text = 'LenNeg3M1'
    physical_dimension_ref22.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit23 = ET.SubElement(elements3, 'UNIT')
    short_name106 = ET.SubElement(unit23, 'SHORT-NAME')
    short_name106.text = 'GrPerMol'
    long_name101 = ET.SubElement(unit23, 'LONG-NAME')
    l_4101 = ET.SubElement(long_name101, 'L-4')
    l_4101.text = 'Gram Per Mole'
    l_4101.attrib = {'L': 'EN'}
    display_name23 = ET.SubElement(unit23, 'DISPLAY-NAME')
    display_name23.text = 'g/mol'
    factor_si_to_unit23 = ET.SubElement(unit23, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit23.text = '1000'
    offset_si_to_unit23 = ET.SubElement(unit23, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit23.text = '0'
    physical_dimension_ref23 = ET.SubElement(unit23, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref23.text = 'M1AmntNeg1'
    physical_dimension_ref23.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit24 = ET.SubElement(elements3, 'UNIT')
    short_name107 = ET.SubElement(unit24, 'SHORT-NAME')
    short_name107.text = 'GrPerSec'
    long_name102 = ET.SubElement(unit24, 'LONG-NAME')
    l_4102 = ET.SubElement(long_name102, 'L-4')
    l_4102.text = 'Gram Per Second'
    l_4102.attrib = {'L': 'EN'}
    display_name24 = ET.SubElement(unit24, 'DISPLAY-NAME')
    display_name24.text = 'g/s'
    factor_si_to_unit24 = ET.SubElement(unit24, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit24.text = '1000'
    offset_si_to_unit24 = ET.SubElement(unit24, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit24.text = '0'
    physical_dimension_ref24 = ET.SubElement(unit24, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref24.text = 'M1TiNeg1'
    physical_dimension_ref24.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit25 = ET.SubElement(elements3, 'UNIT')
    short_name108 = ET.SubElement(unit25, 'SHORT-NAME')
    short_name108.text = 'HectoPa'
    long_name103 = ET.SubElement(unit25, 'LONG-NAME')
    l_4103 = ET.SubElement(long_name103, 'L-4')
    l_4103.text = 'Hectopascal'
    l_4103.attrib = {'L': 'EN'}
    display_name25 = ET.SubElement(unit25, 'DISPLAY-NAME')
    display_name25.text = 'hPa'
    factor_si_to_unit25 = ET.SubElement(unit25, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit25.text = '0.01'
    offset_si_to_unit25 = ET.SubElement(unit25, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit25.text = '0'
    physical_dimension_ref25 = ET.SubElement(unit25, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref25.text = 'LenNeg1M1TiNeg2'
    physical_dimension_ref25.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit26 = ET.SubElement(elements3, 'UNIT')
    short_name109 = ET.SubElement(unit26, 'SHORT-NAME')
    short_name109.text = 'HectoPaPerSec'
    long_name104 = ET.SubElement(unit26, 'LONG-NAME')
    l_4104 = ET.SubElement(long_name104, 'L-4')
    l_4104.text = 'Hectopascal Per Second'
    l_4104.attrib = {'L': 'EN'}
    display_name26 = ET.SubElement(unit26, 'DISPLAY-NAME')
    display_name26.text = 'hPa/s'
    factor_si_to_unit26 = ET.SubElement(unit26, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit26.text = '0.01'
    offset_si_to_unit26 = ET.SubElement(unit26, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit26.text = '0'
    physical_dimension_ref26 = ET.SubElement(unit26, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref26.text = 'LenNeg1M1TiNeg3'
    physical_dimension_ref26.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit27 = ET.SubElement(elements3, 'UNIT')
    short_name110 = ET.SubElement(unit27, 'SHORT-NAME')
    short_name110.text = 'HectoPaPerVolt'
    long_name105 = ET.SubElement(unit27, 'LONG-NAME')
    l_4105 = ET.SubElement(long_name105, 'L-4')
    l_4105.text = 'Hectopascal Per Volt'
    l_4105.attrib = {'L': 'EN'}
    display_name27 = ET.SubElement(unit27, 'DISPLAY-NAME')
    display_name27.text = 'hPa/V'
    factor_si_to_unit27 = ET.SubElement(unit27, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit27.text = '0.01'
    offset_si_to_unit27 = ET.SubElement(unit27, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit27.text = '0'
    physical_dimension_ref27 = ET.SubElement(unit27, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref27.text = 'LenNeg3Ti1I1_1'
    physical_dimension_ref27.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit28 = ET.SubElement(elements3, 'UNIT')
    short_name111 = ET.SubElement(unit28, 'SHORT-NAME')
    short_name111.text = 'HectoPaSecPerMtrCubd'
    long_name106 = ET.SubElement(unit28, 'LONG-NAME')
    l_4106 = ET.SubElement(long_name106, 'L-4')
    l_4106.text = 'Hectopascal Per Cubic Meter Per Second'
    l_4106.attrib = {'L': 'EN'}
    display_name28 = ET.SubElement(unit28, 'DISPLAY-NAME')
    display_name28.text = 'hPa/((m^3)/s)'
    factor_si_to_unit28 = ET.SubElement(unit28, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit28.text = '0.01'
    offset_si_to_unit28 = ET.SubElement(unit28, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit28.text = '0'
    physical_dimension_ref28 = ET.SubElement(unit28, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref28.text = 'LenNeg4M1TiNeg1'
    physical_dimension_ref28.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit29 = ET.SubElement(elements3, 'UNIT')
    short_name112 = ET.SubElement(unit29, 'SHORT-NAME')
    short_name112.text = 'Henry'
    long_name107 = ET.SubElement(unit29, 'LONG-NAME')
    l_4107 = ET.SubElement(long_name107, 'L-4')
    l_4107.text = 'Henry'
    l_4107.attrib = {'L': 'EN'}
    display_name29 = ET.SubElement(unit29, 'DISPLAY-NAME')
    display_name29.text = 'H'
    factor_si_to_unit29 = ET.SubElement(unit29, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit29.text = '1'
    offset_si_to_unit29 = ET.SubElement(unit29, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit29.text = '0'
    physical_dimension_ref29 = ET.SubElement(unit29, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref29.text = 'Len2M1TiNeg2INeg2'
    physical_dimension_ref29.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit30 = ET.SubElement(elements3, 'UNIT')
    short_name113 = ET.SubElement(unit30, 'SHORT-NAME')
    short_name113.text = 'HenryPerMtr'
    long_name108 = ET.SubElement(unit30, 'LONG-NAME')
    l_4108 = ET.SubElement(long_name108, 'L-4')
    l_4108.text = 'Henry Per Meter'
    l_4108.attrib = {'L': 'EN'}
    display_name30 = ET.SubElement(unit30, 'DISPLAY-NAME')
    display_name30.text = 'H/m'
    factor_si_to_unit30 = ET.SubElement(unit30, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit30.text = '1'
    offset_si_to_unit30 = ET.SubElement(unit30, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit30.text = '0'
    physical_dimension_ref30 = ET.SubElement(unit30, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref30.text = 'Len1M1TiNeg2INeg2'
    physical_dimension_ref30.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit31 = ET.SubElement(elements3, 'UNIT')
    short_name114 = ET.SubElement(unit31, 'SHORT-NAME')
    short_name114.text = 'Hr'
    long_name109 = ET.SubElement(unit31, 'LONG-NAME')
    l_4109 = ET.SubElement(long_name109, 'L-4')
    l_4109.text = 'Hour'
    l_4109.attrib = {'L': 'EN'}
    display_name31 = ET.SubElement(unit31, 'DISPLAY-NAME')
    display_name31.text = 'h'
    factor_si_to_unit31 = ET.SubElement(unit31, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit31.text = '0.000277777777777778'
    offset_si_to_unit31 = ET.SubElement(unit31, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit31.text = '0'
    physical_dimension_ref31 = ET.SubElement(unit31, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref31.text = 'Ti1'
    physical_dimension_ref31.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit32 = ET.SubElement(elements3, 'UNIT')
    short_name115 = ET.SubElement(unit32, 'SHORT-NAME')
    short_name115.text = 'Hz'
    long_name110 = ET.SubElement(unit32, 'LONG-NAME')
    l_4110 = ET.SubElement(long_name110, 'L-4')
    l_4110.text = 'Hertz'
    l_4110.attrib = {'L': 'EN'}
    display_name32 = ET.SubElement(unit32, 'DISPLAY-NAME')
    display_name32.text = 'Hz'
    factor_si_to_unit32 = ET.SubElement(unit32, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit32.text = '1'
    offset_si_to_unit32 = ET.SubElement(unit32, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit32.text = '0'
    physical_dimension_ref32 = ET.SubElement(unit32, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref32.text = 'TiNeg1'
    physical_dimension_ref32.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit33 = ET.SubElement(elements3, 'UNIT')
    short_name116 = ET.SubElement(unit33, 'SHORT-NAME')
    short_name116.text = 'Jou'
    long_name111 = ET.SubElement(unit33, 'LONG-NAME')
    l_4111 = ET.SubElement(long_name111, 'L-4')
    l_4111.text = 'Joule'
    l_4111.attrib = {'L': 'EN'}
    display_name33 = ET.SubElement(unit33, 'DISPLAY-NAME')
    display_name33.text = 'J'
    factor_si_to_unit33 = ET.SubElement(unit33, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit33.text = '1'
    offset_si_to_unit33 = ET.SubElement(unit33, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit33.text = '0'
    physical_dimension_ref33 = ET.SubElement(unit33, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref33.text = 'Len2M1TiNeg2_1'
    physical_dimension_ref33.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit34 = ET.SubElement(elements3, 'UNIT')
    short_name117 = ET.SubElement(unit34, 'SHORT-NAME')
    short_name117.text = 'JouPerKelvin'
    long_name112 = ET.SubElement(unit34, 'LONG-NAME')
    l_4112 = ET.SubElement(long_name112, 'L-4')
    l_4112.text = 'Joule Per Kelvin'
    l_4112.attrib = {'L': 'EN'}
    display_name34 = ET.SubElement(unit34, 'DISPLAY-NAME')
    display_name34.text = 'J/K'
    factor_si_to_unit34 = ET.SubElement(unit34, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit34.text = '1'
    offset_si_to_unit34 = ET.SubElement(unit34, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit34.text = '0'
    physical_dimension_ref34 = ET.SubElement(unit34, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref34.text = 'Len2M1TiNeg2TNeg1'
    physical_dimension_ref34.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit35 = ET.SubElement(elements3, 'UNIT')
    short_name118 = ET.SubElement(unit35, 'SHORT-NAME')
    short_name118.text = 'JouPerKiloGr'
    long_name113 = ET.SubElement(unit35, 'LONG-NAME')
    l_4113 = ET.SubElement(long_name113, 'L-4')
    l_4113.text = 'Joule Per Kilogram'
    l_4113.attrib = {'L': 'EN'}
    display_name35 = ET.SubElement(unit35, 'DISPLAY-NAME')
    display_name35.text = 'J/kg'
    factor_si_to_unit35 = ET.SubElement(unit35, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit35.text = '1'
    offset_si_to_unit35 = ET.SubElement(unit35, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit35.text = '0'
    physical_dimension_ref35 = ET.SubElement(unit35, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref35.text = 'Len2TiNeg2'
    physical_dimension_ref35.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit36 = ET.SubElement(elements3, 'UNIT')
    short_name119 = ET.SubElement(unit36, 'SHORT-NAME')
    short_name119.text = 'JouPerKiloGrPerKelvin'
    long_name114 = ET.SubElement(unit36, 'LONG-NAME')
    l_4114 = ET.SubElement(long_name114, 'L-4')
    l_4114.text = 'Joule Per Kilogram Per Kelvin'
    l_4114.attrib = {'L': 'EN'}
    display_name36 = ET.SubElement(unit36, 'DISPLAY-NAME')
    display_name36.text = 'J/(kg*K)'
    factor_si_to_unit36 = ET.SubElement(unit36, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit36.text = '1'
    offset_si_to_unit36 = ET.SubElement(unit36, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit36.text = '0'
    physical_dimension_ref36 = ET.SubElement(unit36, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref36.text = 'Len2TiNeg2TNeg1'
    physical_dimension_ref36.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit37 = ET.SubElement(elements3, 'UNIT')
    short_name120 = ET.SubElement(unit37, 'SHORT-NAME')
    short_name120.text = 'JouPerMol'
    long_name115 = ET.SubElement(unit37, 'LONG-NAME')
    l_4115 = ET.SubElement(long_name115, 'L-4')
    l_4115.text = 'Joule Per Mole'
    l_4115.attrib = {'L': 'EN'}
    display_name37 = ET.SubElement(unit37, 'DISPLAY-NAME')
    display_name37.text = 'J/mol'
    factor_si_to_unit37 = ET.SubElement(unit37, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit37.text = '1'
    offset_si_to_unit37 = ET.SubElement(unit37, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit37.text = '0'
    physical_dimension_ref37 = ET.SubElement(unit37, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref37.text = 'Len2M1TiNeg2AmntNeg1'
    physical_dimension_ref37.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit38 = ET.SubElement(elements3, 'UNIT')
    short_name121 = ET.SubElement(unit38, 'SHORT-NAME')
    short_name121.text = 'JouPerMolPerKelvin'
    long_name116 = ET.SubElement(unit38, 'LONG-NAME')
    l_4116 = ET.SubElement(long_name116, 'L-4')
    l_4116.text = 'Joule Per Mole Per Kelvin'
    l_4116.attrib = {'L': 'EN'}
    display_name38 = ET.SubElement(unit38, 'DISPLAY-NAME')
    display_name38.text = 'J/(mol*K)'
    factor_si_to_unit38 = ET.SubElement(unit38, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit38.text = '1'
    offset_si_to_unit38 = ET.SubElement(unit38, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit38.text = '0'
    physical_dimension_ref38 = ET.SubElement(unit38, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref38.text = 'Len2M1TiNeg2TNeg1AmntNeg1'
    physical_dimension_ref38.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit39 = ET.SubElement(elements3, 'UNIT')
    short_name122 = ET.SubElement(unit39, 'SHORT-NAME')
    short_name122.text = 'Kat'
    long_name117 = ET.SubElement(unit39, 'LONG-NAME')
    l_4117 = ET.SubElement(long_name117, 'L-4')
    l_4117.text = 'Katal'
    l_4117.attrib = {'L': 'EN'}
    display_name39 = ET.SubElement(unit39, 'DISPLAY-NAME')
    display_name39.text = 'kat'
    factor_si_to_unit39 = ET.SubElement(unit39, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit39.text = '1'
    offset_si_to_unit39 = ET.SubElement(unit39, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit39.text = '0'
    physical_dimension_ref39 = ET.SubElement(unit39, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref39.text = 'TiNeg1Amnt1'
    physical_dimension_ref39.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit40 = ET.SubElement(elements3, 'UNIT')
    short_name123 = ET.SubElement(unit40, 'SHORT-NAME')
    short_name123.text = 'KelvinAbslt'
    long_name118 = ET.SubElement(unit40, 'LONG-NAME')
    l_4118 = ET.SubElement(long_name118, 'L-4')
    l_4118.text = 'Kelvin (Absolute Temperature)'
    l_4118.attrib = {'L': 'EN'}
    display_name40 = ET.SubElement(unit40, 'DISPLAY-NAME')
    display_name40.text = 'K'
    factor_si_to_unit40 = ET.SubElement(unit40, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit40.text = '1'
    offset_si_to_unit40 = ET.SubElement(unit40, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit40.text = '0'
    physical_dimension_ref40 = ET.SubElement(unit40, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref40.text = 'T1'
    physical_dimension_ref40.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit41 = ET.SubElement(elements3, 'UNIT')
    short_name124 = ET.SubElement(unit41, 'SHORT-NAME')
    short_name124.text = 'KelvinPerSec'
    long_name119 = ET.SubElement(unit41, 'LONG-NAME')
    l_4119 = ET.SubElement(long_name119, 'L-4')
    l_4119.text = 'Kelvin Per Second'
    l_4119.attrib = {'L': 'EN'}
    display_name41 = ET.SubElement(unit41, 'DISPLAY-NAME')
    display_name41.text = 'K/s'
    factor_si_to_unit41 = ET.SubElement(unit41, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit41.text = '1'
    offset_si_to_unit41 = ET.SubElement(unit41, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit41.text = '0'
    physical_dimension_ref41 = ET.SubElement(unit41, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref41.text = 'TiNeg1T1'
    physical_dimension_ref41.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit42 = ET.SubElement(elements3, 'UNIT')
    short_name125 = ET.SubElement(unit42, 'SHORT-NAME')
    short_name125.text = 'KelvinRel'
    long_name120 = ET.SubElement(unit42, 'LONG-NAME')
    l_4120 = ET.SubElement(long_name120, 'L-4')
    l_4120.text = 'Kelvin (Relative Temperature, Temperature Difference)'
    l_4120.attrib = {'L': 'EN'}
    display_name42 = ET.SubElement(unit42, 'DISPLAY-NAME')
    display_name42.text = 'K'
    factor_si_to_unit42 = ET.SubElement(unit42, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit42.text = '1'
    offset_si_to_unit42 = ET.SubElement(unit42, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit42.text = '0'
    physical_dimension_ref42 = ET.SubElement(unit42, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref42.text = 'T1_1'
    physical_dimension_ref42.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit43 = ET.SubElement(elements3, 'UNIT')
    short_name126 = ET.SubElement(unit43, 'SHORT-NAME')
    short_name126.text = 'KiloBitPerSec'
    long_name121 = ET.SubElement(unit43, 'LONG-NAME')
    l_4121 = ET.SubElement(long_name121, 'L-4')
    l_4121.text = 'Kilobit Per Second'
    l_4121.attrib = {'L': 'EN'}
    display_name43 = ET.SubElement(unit43, 'DISPLAY-NAME')
    display_name43.text = 'kbit/s'
    factor_si_to_unit43 = ET.SubElement(unit43, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit43.text = '0.001'
    offset_si_to_unit43 = ET.SubElement(unit43, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit43.text = '0'
    physical_dimension_ref43 = ET.SubElement(unit43, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref43.text = 'TiNeg1_3'
    physical_dimension_ref43.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit44 = ET.SubElement(elements3, 'UNIT')
    short_name127 = ET.SubElement(unit44, 'SHORT-NAME')
    short_name127.text = 'KiloGr'
    long_name122 = ET.SubElement(unit44, 'LONG-NAME')
    l_4122 = ET.SubElement(long_name122, 'L-4')
    l_4122.text = 'Kilogram'
    l_4122.attrib = {'L': 'EN'}
    display_name44 = ET.SubElement(unit44, 'DISPLAY-NAME')
    display_name44.text = 'kg'
    factor_si_to_unit44 = ET.SubElement(unit44, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit44.text = '1'
    offset_si_to_unit44 = ET.SubElement(unit44, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit44.text = '0'
    physical_dimension_ref44 = ET.SubElement(unit44, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref44.text = 'M1'
    physical_dimension_ref44.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit45 = ET.SubElement(elements3, 'UNIT')
    short_name128 = ET.SubElement(unit45, 'SHORT-NAME')
    short_name128.text = 'KiloGrPerHr'
    long_name123 = ET.SubElement(unit45, 'LONG-NAME')
    l_4123 = ET.SubElement(long_name123, 'L-4')
    l_4123.text = 'Kilogram Per Hour'
    l_4123.attrib = {'L': 'EN'}
    display_name45 = ET.SubElement(unit45, 'DISPLAY-NAME')
    display_name45.text = 'kg/h'
    factor_si_to_unit45 = ET.SubElement(unit45, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit45.text = '3600'
    offset_si_to_unit45 = ET.SubElement(unit45, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit45.text = '0'
    physical_dimension_ref45 = ET.SubElement(unit45, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref45.text = 'M1TiNeg1'
    physical_dimension_ref45.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit46 = ET.SubElement(elements3, 'UNIT')
    short_name129 = ET.SubElement(unit46, 'SHORT-NAME')
    short_name129.text = 'KiloGrPerMtrCubd'
    long_name124 = ET.SubElement(unit46, 'LONG-NAME')
    l_4124 = ET.SubElement(long_name124, 'L-4')
    l_4124.text = 'Kilogram Per Cubic Meter'
    l_4124.attrib = {'L': 'EN'}
    display_name46 = ET.SubElement(unit46, 'DISPLAY-NAME')
    display_name46.text = 'kg/(m^3)'
    factor_si_to_unit46 = ET.SubElement(unit46, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit46.text = '1'
    offset_si_to_unit46 = ET.SubElement(unit46, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit46.text = '0'
    physical_dimension_ref46 = ET.SubElement(unit46, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref46.text = 'LenNeg3M1'
    physical_dimension_ref46.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit47 = ET.SubElement(elements3, 'UNIT')
    short_name130 = ET.SubElement(unit47, 'SHORT-NAME')
    short_name130.text = 'KiloGrPerSec'
    long_name125 = ET.SubElement(unit47, 'LONG-NAME')
    l_4125 = ET.SubElement(long_name125, 'L-4')
    l_4125.text = 'Kilogram Per Second'
    l_4125.attrib = {'L': 'EN'}
    display_name47 = ET.SubElement(unit47, 'DISPLAY-NAME')
    display_name47.text = 'kg/s'
    factor_si_to_unit47 = ET.SubElement(unit47, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit47.text = '1'
    offset_si_to_unit47 = ET.SubElement(unit47, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit47.text = '0'
    physical_dimension_ref47 = ET.SubElement(unit47, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref47.text = 'M1TiNeg1'
    physical_dimension_ref47.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit48 = ET.SubElement(elements3, 'UNIT')
    short_name131 = ET.SubElement(unit48, 'SHORT-NAME')
    short_name131.text = 'KiloGrSqrMtr'
    long_name126 = ET.SubElement(unit48, 'LONG-NAME')
    l_4126 = ET.SubElement(long_name126, 'L-4')
    l_4126.text = 'Kilogram Square Meter'
    l_4126.attrib = {'L': 'EN'}
    display_name48 = ET.SubElement(unit48, 'DISPLAY-NAME')
    display_name48.text = 'kg*(m^2)'
    factor_si_to_unit48 = ET.SubElement(unit48, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit48.text = '1'
    offset_si_to_unit48 = ET.SubElement(unit48, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit48.text = '0'
    physical_dimension_ref48 = ET.SubElement(unit48, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref48.text = 'Len2M1'
    physical_dimension_ref48.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit49 = ET.SubElement(elements3, 'UNIT')
    short_name132 = ET.SubElement(unit49, 'SHORT-NAME')
    short_name132.text = 'KiloHz'
    long_name127 = ET.SubElement(unit49, 'LONG-NAME')
    l_4127 = ET.SubElement(long_name127, 'L-4')
    l_4127.text = 'Kilohertz'
    l_4127.attrib = {'L': 'EN'}
    display_name49 = ET.SubElement(unit49, 'DISPLAY-NAME')
    display_name49.text = 'kHz'
    factor_si_to_unit49 = ET.SubElement(unit49, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit49.text = '0.001'
    offset_si_to_unit49 = ET.SubElement(unit49, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit49.text = '0'
    physical_dimension_ref49 = ET.SubElement(unit49, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref49.text = 'TiNeg1'
    physical_dimension_ref49.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit50 = ET.SubElement(elements3, 'UNIT')
    short_name133 = ET.SubElement(unit50, 'SHORT-NAME')
    short_name133.text = 'KiloJou'
    long_name128 = ET.SubElement(unit50, 'LONG-NAME')
    l_4128 = ET.SubElement(long_name128, 'L-4')
    l_4128.text = 'Kilojoule'
    l_4128.attrib = {'L': 'EN'}
    display_name50 = ET.SubElement(unit50, 'DISPLAY-NAME')
    display_name50.text = 'kJ'
    factor_si_to_unit50 = ET.SubElement(unit50, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit50.text = '0.001'
    offset_si_to_unit50 = ET.SubElement(unit50, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit50.text = '0'
    physical_dimension_ref50 = ET.SubElement(unit50, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref50.text = 'Len2M1TiNeg2_1'
    physical_dimension_ref50.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit51 = ET.SubElement(elements3, 'UNIT')
    short_name134 = ET.SubElement(unit51, 'SHORT-NAME')
    short_name134.text = 'KiloMtr'
    long_name129 = ET.SubElement(unit51, 'LONG-NAME')
    l_4129 = ET.SubElement(long_name129, 'L-4')
    l_4129.text = 'Kilometer'
    l_4129.attrib = {'L': 'EN'}
    display_name51 = ET.SubElement(unit51, 'DISPLAY-NAME')
    display_name51.text = 'km'
    factor_si_to_unit51 = ET.SubElement(unit51, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit51.text = '0.001'
    offset_si_to_unit51 = ET.SubElement(unit51, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit51.text = '0'
    physical_dimension_ref51 = ET.SubElement(unit51, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref51.text = 'Len1'
    physical_dimension_ref51.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit52 = ET.SubElement(elements3, 'UNIT')
    short_name135 = ET.SubElement(unit52, 'SHORT-NAME')
    short_name135.text = 'KiloMtrPerHr'
    long_name130 = ET.SubElement(unit52, 'LONG-NAME')
    l_4130 = ET.SubElement(long_name130, 'L-4')
    l_4130.text = 'Kilometer Per Hour'
    l_4130.attrib = {'L': 'EN'}
    display_name52 = ET.SubElement(unit52, 'DISPLAY-NAME')
    display_name52.text = 'km/h'
    factor_si_to_unit52 = ET.SubElement(unit52, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit52.text = '3.6'
    offset_si_to_unit52 = ET.SubElement(unit52, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit52.text = '0'
    physical_dimension_ref52 = ET.SubElement(unit52, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref52.text = 'Len1TiNeg1'
    physical_dimension_ref52.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit53 = ET.SubElement(elements3, 'UNIT')
    short_name136 = ET.SubElement(unit53, 'SHORT-NAME')
    short_name136.text = 'KiloMtrPerHrPerSec'
    long_name131 = ET.SubElement(unit53, 'LONG-NAME')
    l_4131 = ET.SubElement(long_name131, 'L-4')
    l_4131.text = 'Kilometer Per Hour Per Second'
    l_4131.attrib = {'L': 'EN'}
    display_name53 = ET.SubElement(unit53, 'DISPLAY-NAME')
    display_name53.text = '(km/h)/s'
    factor_si_to_unit53 = ET.SubElement(unit53, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit53.text = '3.6'
    offset_si_to_unit53 = ET.SubElement(unit53, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit53.text = '0'
    physical_dimension_ref53 = ET.SubElement(unit53, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref53.text = 'Len1TiNeg2'
    physical_dimension_ref53.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit54 = ET.SubElement(elements3, 'UNIT')
    short_name137 = ET.SubElement(unit54, 'SHORT-NAME')
    short_name137.text = 'KiloNwt'
    long_name132 = ET.SubElement(unit54, 'LONG-NAME')
    l_4132 = ET.SubElement(long_name132, 'L-4')
    l_4132.text = 'Kilonewton'
    l_4132.attrib = {'L': 'EN'}
    display_name54 = ET.SubElement(unit54, 'DISPLAY-NAME')
    display_name54.text = 'kN'
    factor_si_to_unit54 = ET.SubElement(unit54, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit54.text = '0.001'
    offset_si_to_unit54 = ET.SubElement(unit54, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit54.text = '0'
    physical_dimension_ref54 = ET.SubElement(unit54, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref54.text = 'Len1M1TiNeg2'
    physical_dimension_ref54.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit55 = ET.SubElement(elements3, 'UNIT')
    short_name138 = ET.SubElement(unit55, 'SHORT-NAME')
    short_name138.text = 'KiloNwtMtrPerSec'
    long_name133 = ET.SubElement(unit55, 'LONG-NAME')
    l_4133 = ET.SubElement(long_name133, 'L-4')
    l_4133.text = 'Kilonewtonmeter Per Second'
    l_4133.attrib = {'L': 'EN'}
    display_name55 = ET.SubElement(unit55, 'DISPLAY-NAME')
    display_name55.text = '(kN*m)/s'
    factor_si_to_unit55 = ET.SubElement(unit55, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit55.text = '0.001'
    offset_si_to_unit55 = ET.SubElement(unit55, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit55.text = '0'
    physical_dimension_ref55 = ET.SubElement(unit55, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref55.text = 'Len2M1TiNeg3'
    physical_dimension_ref55.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit56 = ET.SubElement(elements3, 'UNIT')
    short_name139 = ET.SubElement(unit56, 'SHORT-NAME')
    short_name139.text = 'KiloOhm'
    long_name134 = ET.SubElement(unit56, 'LONG-NAME')
    l_4134 = ET.SubElement(long_name134, 'L-4')
    l_4134.text = 'Kiloohm'
    l_4134.attrib = {'L': 'EN'}
    display_name56 = ET.SubElement(unit56, 'DISPLAY-NAME')
    display_name56.text = 'kΩ'
    factor_si_to_unit56 = ET.SubElement(unit56, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit56.text = '0.001'
    offset_si_to_unit56 = ET.SubElement(unit56, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit56.text = '0'
    physical_dimension_ref56 = ET.SubElement(unit56, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref56.text = 'Len2M1TiNeg3INeg2'
    physical_dimension_ref56.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit57 = ET.SubElement(elements3, 'UNIT')
    short_name140 = ET.SubElement(unit57, 'SHORT-NAME')
    short_name140.text = 'KiloVolt'
    long_name135 = ET.SubElement(unit57, 'LONG-NAME')
    l_4135 = ET.SubElement(long_name135, 'L-4')
    l_4135.text = 'Kilovolt'
    l_4135.attrib = {'L': 'EN'}
    display_name57 = ET.SubElement(unit57, 'DISPLAY-NAME')
    display_name57.text = 'kV'
    factor_si_to_unit57 = ET.SubElement(unit57, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit57.text = '0.001'
    offset_si_to_unit57 = ET.SubElement(unit57, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit57.text = '0'
    physical_dimension_ref57 = ET.SubElement(unit57, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref57.text = 'Len2M1TiNeg3INeg1'
    physical_dimension_ref57.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit58 = ET.SubElement(elements3, 'UNIT')
    short_name141 = ET.SubElement(unit58, 'SHORT-NAME')
    short_name141.text = 'KiloWatt'
    long_name136 = ET.SubElement(unit58, 'LONG-NAME')
    l_4136 = ET.SubElement(long_name136, 'L-4')
    l_4136.text = 'Kilowatt'
    l_4136.attrib = {'L': 'EN'}
    display_name58 = ET.SubElement(unit58, 'DISPLAY-NAME')
    display_name58.text = 'kW'
    factor_si_to_unit58 = ET.SubElement(unit58, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit58.text = '0.001'
    offset_si_to_unit58 = ET.SubElement(unit58, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit58.text = '0'
    physical_dimension_ref58 = ET.SubElement(unit58, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref58.text = 'Len2M1TiNeg3_1'
    physical_dimension_ref58.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit59 = ET.SubElement(elements3, 'UNIT')
    short_name142 = ET.SubElement(unit59, 'SHORT-NAME')
    short_name142.text = 'KiloWattHr'
    long_name137 = ET.SubElement(unit59, 'LONG-NAME')
    l_4137 = ET.SubElement(long_name137, 'L-4')
    l_4137.text = 'Kilowatthour'
    l_4137.attrib = {'L': 'EN'}
    display_name59 = ET.SubElement(unit59, 'DISPLAY-NAME')
    display_name59.text = 'kWh'
    factor_si_to_unit59 = ET.SubElement(unit59, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit59.text = '2.77777777777778E-07'
    offset_si_to_unit59 = ET.SubElement(unit59, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit59.text = '0'
    physical_dimension_ref59 = ET.SubElement(unit59, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref59.text = 'Len2M1TiNeg2_1'
    physical_dimension_ref59.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit60 = ET.SubElement(elements3, 'UNIT')
    short_name143 = ET.SubElement(unit60, 'SHORT-NAME')
    short_name143.text = 'KiloWattHrPer100KiloMtr'
    long_name138 = ET.SubElement(unit60, 'LONG-NAME')
    l_4138 = ET.SubElement(long_name138, 'L-4')
    l_4138.text = 'Kilowatthour Per 100 Kilometer'
    l_4138.attrib = {'L': 'EN'}
    display_name60 = ET.SubElement(unit60, 'DISPLAY-NAME')
    display_name60.text = 'kWh/(100*km)'
    factor_si_to_unit60 = ET.SubElement(unit60, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit60.text = '0.0277777777777778'
    offset_si_to_unit60 = ET.SubElement(unit60, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit60.text = '0'
    physical_dimension_ref60 = ET.SubElement(unit60, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref60.text = 'Len1M1TiNeg2_1'
    physical_dimension_ref60.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit61 = ET.SubElement(elements3, 'UNIT')
    short_name144 = ET.SubElement(unit61, 'SHORT-NAME')
    short_name144.text = 'Ltr'
    long_name139 = ET.SubElement(unit61, 'LONG-NAME')
    l_4139 = ET.SubElement(long_name139, 'L-4')
    l_4139.text = 'Liter'
    l_4139.attrib = {'L': 'EN'}
    display_name61 = ET.SubElement(unit61, 'DISPLAY-NAME')
    display_name61.text = 'l'
    factor_si_to_unit61 = ET.SubElement(unit61, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit61.text = '1000'
    offset_si_to_unit61 = ET.SubElement(unit61, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit61.text = '0'
    physical_dimension_ref61 = ET.SubElement(unit61, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref61.text = 'Len3'
    physical_dimension_ref61.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit62 = ET.SubElement(elements3, 'UNIT')
    short_name145 = ET.SubElement(unit62, 'SHORT-NAME')
    short_name145.text = 'LtrPer100KiloMtr'
    long_name140 = ET.SubElement(unit62, 'LONG-NAME')
    l_4140 = ET.SubElement(long_name140, 'L-4')
    l_4140.text = 'Liter Per 100 Kilometer'
    l_4140.attrib = {'L': 'EN'}
    display_name62 = ET.SubElement(unit62, 'DISPLAY-NAME')
    display_name62.text = 'l/(100km)'
    factor_si_to_unit62 = ET.SubElement(unit62, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit62.text = '100000000'
    offset_si_to_unit62 = ET.SubElement(unit62, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit62.text = '0'
    physical_dimension_ref62 = ET.SubElement(unit62, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref62.text = 'Len2_1'
    physical_dimension_ref62.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit63 = ET.SubElement(elements3, 'UNIT')
    short_name146 = ET.SubElement(unit63, 'SHORT-NAME')
    short_name146.text = 'LtrPerHr'
    long_name141 = ET.SubElement(unit63, 'LONG-NAME')
    l_4141 = ET.SubElement(long_name141, 'L-4')
    l_4141.text = 'Liter Per Hour'
    l_4141.attrib = {'L': 'EN'}
    display_name63 = ET.SubElement(unit63, 'DISPLAY-NAME')
    display_name63.text = 'l/h'
    factor_si_to_unit63 = ET.SubElement(unit63, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit63.text = '3600000'
    offset_si_to_unit63 = ET.SubElement(unit63, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit63.text = '0'
    physical_dimension_ref63 = ET.SubElement(unit63, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref63.text = 'Len3TiNeg1'
    physical_dimension_ref63.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit64 = ET.SubElement(elements3, 'UNIT')
    short_name147 = ET.SubElement(unit64, 'SHORT-NAME')
    short_name147.text = 'LtrPerKiloMtr'
    long_name142 = ET.SubElement(unit64, 'LONG-NAME')
    l_4142 = ET.SubElement(long_name142, 'L-4')
    l_4142.text = 'Liter Per Kilometer'
    l_4142.attrib = {'L': 'EN'}
    display_name64 = ET.SubElement(unit64, 'DISPLAY-NAME')
    display_name64.text = 'l/km'
    factor_si_to_unit64 = ET.SubElement(unit64, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit64.text = '1000000'
    offset_si_to_unit64 = ET.SubElement(unit64, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit64.text = '0'
    physical_dimension_ref64 = ET.SubElement(unit64, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref64.text = 'Len2_1'
    physical_dimension_ref64.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit65 = ET.SubElement(elements3, 'UNIT')
    short_name148 = ET.SubElement(unit65, 'SHORT-NAME')
    short_name148.text = 'MegaBitPerSec'
    long_name143 = ET.SubElement(unit65, 'LONG-NAME')
    l_4143 = ET.SubElement(long_name143, 'L-4')
    l_4143.text = 'Megabit Per Second'
    l_4143.attrib = {'L': 'EN'}
    display_name65 = ET.SubElement(unit65, 'DISPLAY-NAME')
    display_name65.text = 'Mbit/s'
    factor_si_to_unit65 = ET.SubElement(unit65, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit65.text = '1E-06'
    offset_si_to_unit65 = ET.SubElement(unit65, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit65.text = '0'
    physical_dimension_ref65 = ET.SubElement(unit65, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref65.text = 'TiNeg1_3'
    physical_dimension_ref65.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit66 = ET.SubElement(elements3, 'UNIT')
    short_name149 = ET.SubElement(unit66, 'SHORT-NAME')
    short_name149.text = 'MegaHz'
    long_name144 = ET.SubElement(unit66, 'LONG-NAME')
    l_4144 = ET.SubElement(long_name144, 'L-4')
    l_4144.text = 'Megahertz'
    l_4144.attrib = {'L': 'EN'}
    display_name66 = ET.SubElement(unit66, 'DISPLAY-NAME')
    display_name66.text = 'MHz'
    factor_si_to_unit66 = ET.SubElement(unit66, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit66.text = '1E-06'
    offset_si_to_unit66 = ET.SubElement(unit66, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit66.text = '0'
    physical_dimension_ref66 = ET.SubElement(unit66, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref66.text = 'TiNeg1'
    physical_dimension_ref66.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit67 = ET.SubElement(elements3, 'UNIT')
    short_name150 = ET.SubElement(unit67, 'SHORT-NAME')
    short_name150.text = 'MegaJou'
    long_name145 = ET.SubElement(unit67, 'LONG-NAME')
    l_4145 = ET.SubElement(long_name145, 'L-4')
    l_4145.text = 'Megajoule'
    l_4145.attrib = {'L': 'EN'}
    display_name67 = ET.SubElement(unit67, 'DISPLAY-NAME')
    display_name67.text = 'MJ'
    factor_si_to_unit67 = ET.SubElement(unit67, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit67.text = '1E-06'
    offset_si_to_unit67 = ET.SubElement(unit67, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit67.text = '0'
    physical_dimension_ref67 = ET.SubElement(unit67, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref67.text = 'Len2M1TiNeg2_1'
    physical_dimension_ref67.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit68 = ET.SubElement(elements3, 'UNIT')
    short_name151 = ET.SubElement(unit68, 'SHORT-NAME')
    short_name151.text = 'MegaOhm'
    long_name146 = ET.SubElement(unit68, 'LONG-NAME')
    l_4146 = ET.SubElement(long_name146, 'L-4')
    l_4146.text = 'Megaohm'
    l_4146.attrib = {'L': 'EN'}
    display_name68 = ET.SubElement(unit68, 'DISPLAY-NAME')
    display_name68.text = 'MΩ'
    factor_si_to_unit68 = ET.SubElement(unit68, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit68.text = '1E-06'
    offset_si_to_unit68 = ET.SubElement(unit68, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit68.text = '0'
    physical_dimension_ref68 = ET.SubElement(unit68, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref68.text = 'Len2M1TiNeg3INeg2'
    physical_dimension_ref68.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit69 = ET.SubElement(elements3, 'UNIT')
    short_name152 = ET.SubElement(unit69, 'SHORT-NAME')
    short_name152.text = 'MegaPa'
    long_name147 = ET.SubElement(unit69, 'LONG-NAME')
    l_4147 = ET.SubElement(long_name147, 'L-4')
    l_4147.text = 'Megapascal'
    l_4147.attrib = {'L': 'EN'}
    display_name69 = ET.SubElement(unit69, 'DISPLAY-NAME')
    display_name69.text = 'MPa'
    factor_si_to_unit69 = ET.SubElement(unit69, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit69.text = '1E-06'
    offset_si_to_unit69 = ET.SubElement(unit69, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit69.text = '0'
    physical_dimension_ref69 = ET.SubElement(unit69, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref69.text = 'LenNeg1M1TiNeg2'
    physical_dimension_ref69.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit70 = ET.SubElement(elements3, 'UNIT')
    short_name153 = ET.SubElement(unit70, 'SHORT-NAME')
    short_name153.text = 'MegaWatt'
    long_name148 = ET.SubElement(unit70, 'LONG-NAME')
    l_4148 = ET.SubElement(long_name148, 'L-4')
    l_4148.text = 'Megawatt'
    l_4148.attrib = {'L': 'EN'}
    display_name70 = ET.SubElement(unit70, 'DISPLAY-NAME')
    display_name70.text = 'MW'
    factor_si_to_unit70 = ET.SubElement(unit70, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit70.text = '1E-06'
    offset_si_to_unit70 = ET.SubElement(unit70, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit70.text = '0'
    physical_dimension_ref70 = ET.SubElement(unit70, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref70.text = 'Len2M1TiNeg3_1'
    physical_dimension_ref70.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit71 = ET.SubElement(elements3, 'UNIT')
    short_name154 = ET.SubElement(unit71, 'SHORT-NAME')
    short_name154.text = 'MicroAmpr'
    long_name149 = ET.SubElement(unit71, 'LONG-NAME')
    l_4149 = ET.SubElement(long_name149, 'L-4')
    l_4149.text = 'Microampere'
    l_4149.attrib = {'L': 'EN'}
    display_name71 = ET.SubElement(unit71, 'DISPLAY-NAME')
    display_name71.text = 'µA'
    factor_si_to_unit71 = ET.SubElement(unit71, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit71.text = '1000000'
    offset_si_to_unit71 = ET.SubElement(unit71, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit71.text = '0'
    physical_dimension_ref71 = ET.SubElement(unit71, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref71.text = 'I1'
    physical_dimension_ref71.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit72 = ET.SubElement(elements3, 'UNIT')
    short_name155 = ET.SubElement(unit72, 'SHORT-NAME')
    short_name155.text = 'MicroFrd'
    long_name150 = ET.SubElement(unit72, 'LONG-NAME')
    l_4150 = ET.SubElement(long_name150, 'L-4')
    l_4150.text = 'Microfarad'
    l_4150.attrib = {'L': 'EN'}
    display_name72 = ET.SubElement(unit72, 'DISPLAY-NAME')
    display_name72.text = 'µF'
    factor_si_to_unit72 = ET.SubElement(unit72, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit72.text = '1000000'
    offset_si_to_unit72 = ET.SubElement(unit72, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit72.text = '0'
    physical_dimension_ref72 = ET.SubElement(unit72, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref72.text = 'LenNeg2MNeg1Ti4I2'
    physical_dimension_ref72.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit73 = ET.SubElement(elements3, 'UNIT')
    short_name156 = ET.SubElement(unit73, 'SHORT-NAME')
    short_name156.text = 'MicroGr'
    long_name151 = ET.SubElement(unit73, 'LONG-NAME')
    l_4151 = ET.SubElement(long_name151, 'L-4')
    l_4151.text = 'Microgram'
    l_4151.attrib = {'L': 'EN'}
    display_name73 = ET.SubElement(unit73, 'DISPLAY-NAME')
    display_name73.text = 'µg'
    factor_si_to_unit73 = ET.SubElement(unit73, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit73.text = '1000000000'
    offset_si_to_unit73 = ET.SubElement(unit73, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit73.text = '0'
    physical_dimension_ref73 = ET.SubElement(unit73, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref73.text = 'M1'
    physical_dimension_ref73.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit74 = ET.SubElement(elements3, 'UNIT')
    short_name157 = ET.SubElement(unit74, 'SHORT-NAME')
    short_name157.text = 'MicroJou'
    long_name152 = ET.SubElement(unit74, 'LONG-NAME')
    l_4152 = ET.SubElement(long_name152, 'L-4')
    l_4152.text = 'Microjoule'
    l_4152.attrib = {'L': 'EN'}
    display_name74 = ET.SubElement(unit74, 'DISPLAY-NAME')
    display_name74.text = 'µJ'
    factor_si_to_unit74 = ET.SubElement(unit74, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit74.text = '1000000'
    offset_si_to_unit74 = ET.SubElement(unit74, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit74.text = '0'
    physical_dimension_ref74 = ET.SubElement(unit74, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref74.text = 'Len2M1TiNeg2_1'
    physical_dimension_ref74.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit75 = ET.SubElement(elements3, 'UNIT')
    short_name158 = ET.SubElement(unit75, 'SHORT-NAME')
    short_name158.text = 'MicroLtr'
    long_name153 = ET.SubElement(unit75, 'LONG-NAME')
    l_4153 = ET.SubElement(long_name153, 'L-4')
    l_4153.text = 'Microliter'
    l_4153.attrib = {'L': 'EN'}
    display_name75 = ET.SubElement(unit75, 'DISPLAY-NAME')
    display_name75.text = 'µl'
    factor_si_to_unit75 = ET.SubElement(unit75, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit75.text = '1000000000'
    offset_si_to_unit75 = ET.SubElement(unit75, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit75.text = '0'
    physical_dimension_ref75 = ET.SubElement(unit75, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref75.text = 'Len3'
    physical_dimension_ref75.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit76 = ET.SubElement(elements3, 'UNIT')
    short_name159 = ET.SubElement(unit76, 'SHORT-NAME')
    short_name159.text = 'MicroLtrPerSec'
    long_name154 = ET.SubElement(unit76, 'LONG-NAME')
    l_4154 = ET.SubElement(long_name154, 'L-4')
    l_4154.text = 'Microliter Per Second'
    l_4154.attrib = {'L': 'EN'}
    display_name76 = ET.SubElement(unit76, 'DISPLAY-NAME')
    display_name76.text = 'µl/s'
    factor_si_to_unit76 = ET.SubElement(unit76, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit76.text = '1000000000'
    offset_si_to_unit76 = ET.SubElement(unit76, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit76.text = '0'
    physical_dimension_ref76 = ET.SubElement(unit76, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref76.text = 'Len3TiNeg1'
    physical_dimension_ref76.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit77 = ET.SubElement(elements3, 'UNIT')
    short_name160 = ET.SubElement(unit77, 'SHORT-NAME')
    short_name160.text = 'MicroMtr'
    long_name155 = ET.SubElement(unit77, 'LONG-NAME')
    l_4155 = ET.SubElement(long_name155, 'L-4')
    l_4155.text = 'Micrometer'
    l_4155.attrib = {'L': 'EN'}
    display_name77 = ET.SubElement(unit77, 'DISPLAY-NAME')
    display_name77.text = 'µm'
    factor_si_to_unit77 = ET.SubElement(unit77, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit77.text = '1000000'
    offset_si_to_unit77 = ET.SubElement(unit77, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit77.text = '0'
    physical_dimension_ref77 = ET.SubElement(unit77, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref77.text = 'Len1'
    physical_dimension_ref77.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit78 = ET.SubElement(elements3, 'UNIT')
    short_name161 = ET.SubElement(unit78, 'SHORT-NAME')
    short_name161.text = 'MicroSec'
    long_name156 = ET.SubElement(unit78, 'LONG-NAME')
    l_4156 = ET.SubElement(long_name156, 'L-4')
    l_4156.text = 'Microsecond'
    l_4156.attrib = {'L': 'EN'}
    display_name78 = ET.SubElement(unit78, 'DISPLAY-NAME')
    display_name78.text = 'µs'
    factor_si_to_unit78 = ET.SubElement(unit78, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit78.text = '1000000'
    offset_si_to_unit78 = ET.SubElement(unit78, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit78.text = '0'
    physical_dimension_ref78 = ET.SubElement(unit78, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref78.text = 'Ti1'
    physical_dimension_ref78.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit79 = ET.SubElement(elements3, 'UNIT')
    short_name162 = ET.SubElement(unit79, 'SHORT-NAME')
    short_name162.text = 'MicroTesla'
    long_name157 = ET.SubElement(unit79, 'LONG-NAME')
    l_4157 = ET.SubElement(long_name157, 'L-4')
    l_4157.text = 'Microtesla'
    l_4157.attrib = {'L': 'EN'}
    display_name79 = ET.SubElement(unit79, 'DISPLAY-NAME')
    display_name79.text = 'µT'
    factor_si_to_unit79 = ET.SubElement(unit79, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit79.text = '1000000'
    offset_si_to_unit79 = ET.SubElement(unit79, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit79.text = '0'
    physical_dimension_ref79 = ET.SubElement(unit79, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref79.text = 'M1TiNeg2INeg1'
    physical_dimension_ref79.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit80 = ET.SubElement(elements3, 'UNIT')
    short_name163 = ET.SubElement(unit80, 'SHORT-NAME')
    short_name163.text = 'MilliAmpr'
    long_name158 = ET.SubElement(unit80, 'LONG-NAME')
    l_4158 = ET.SubElement(long_name158, 'L-4')
    l_4158.text = 'Milliampere'
    l_4158.attrib = {'L': 'EN'}
    display_name80 = ET.SubElement(unit80, 'DISPLAY-NAME')
    display_name80.text = 'mA/s'
    factor_si_to_unit80 = ET.SubElement(unit80, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit80.text = '1000'
    offset_si_to_unit80 = ET.SubElement(unit80, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit80.text = '0'
    physical_dimension_ref80 = ET.SubElement(unit80, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref80.text = 'I1'
    physical_dimension_ref80.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit81 = ET.SubElement(elements3, 'UNIT')
    short_name164 = ET.SubElement(unit81, 'SHORT-NAME')
    short_name164.text = 'MilliAmprPerSec'
    long_name159 = ET.SubElement(unit81, 'LONG-NAME')
    l_4159 = ET.SubElement(long_name159, 'L-4')
    l_4159.text = 'Milliampere Per Second'
    l_4159.attrib = {'L': 'EN'}
    display_name81 = ET.SubElement(unit81, 'DISPLAY-NAME')
    display_name81.text = 'mA/s'
    factor_si_to_unit81 = ET.SubElement(unit81, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit81.text = '1000'
    offset_si_to_unit81 = ET.SubElement(unit81, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit81.text = '0'
    physical_dimension_ref81 = ET.SubElement(unit81, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref81.text = 'TiNeg1I1'
    physical_dimension_ref81.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit82 = ET.SubElement(elements3, 'UNIT')
    short_name165 = ET.SubElement(unit82, 'SHORT-NAME')
    short_name165.text = 'MilliBar'
    long_name160 = ET.SubElement(unit82, 'LONG-NAME')
    l_4160 = ET.SubElement(long_name160, 'L-4')
    l_4160.text = 'Millibar'
    l_4160.attrib = {'L': 'EN'}
    display_name82 = ET.SubElement(unit82, 'DISPLAY-NAME')
    display_name82.text = 'mbar'
    factor_si_to_unit82 = ET.SubElement(unit82, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit82.text = '0.01'
    offset_si_to_unit82 = ET.SubElement(unit82, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit82.text = '0'
    physical_dimension_ref82 = ET.SubElement(unit82, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref82.text = 'LenNeg1M1TiNeg2'
    physical_dimension_ref82.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit83 = ET.SubElement(elements3, 'UNIT')
    short_name166 = ET.SubElement(unit83, 'SHORT-NAME')
    short_name166.text = 'MilliFrd'
    long_name161 = ET.SubElement(unit83, 'LONG-NAME')
    l_4161 = ET.SubElement(long_name161, 'L-4')
    l_4161.text = 'Millifarad'
    l_4161.attrib = {'L': 'EN'}
    display_name83 = ET.SubElement(unit83, 'DISPLAY-NAME')
    display_name83.text = 'mF'
    factor_si_to_unit83 = ET.SubElement(unit83, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit83.text = '1000'
    offset_si_to_unit83 = ET.SubElement(unit83, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit83.text = '0'
    physical_dimension_ref83 = ET.SubElement(unit83, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref83.text = 'LenNeg2MNeg1Ti4I2'
    physical_dimension_ref83.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit84 = ET.SubElement(elements3, 'UNIT')
    short_name167 = ET.SubElement(unit84, 'SHORT-NAME')
    short_name167.text = 'MilliGr'
    long_name162 = ET.SubElement(unit84, 'LONG-NAME')
    l_4162 = ET.SubElement(long_name162, 'L-4')
    l_4162.text = 'Milligram'
    l_4162.attrib = {'L': 'EN'}
    display_name84 = ET.SubElement(unit84, 'DISPLAY-NAME')
    display_name84.text = 'mg'
    factor_si_to_unit84 = ET.SubElement(unit84, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit84.text = '1000000'
    offset_si_to_unit84 = ET.SubElement(unit84, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit84.text = '0'
    physical_dimension_ref84 = ET.SubElement(unit84, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref84.text = 'M1'
    physical_dimension_ref84.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit85 = ET.SubElement(elements3, 'UNIT')
    short_name168 = ET.SubElement(unit85, 'SHORT-NAME')
    short_name168.text = 'MilliGrPerSec'
    long_name163 = ET.SubElement(unit85, 'LONG-NAME')
    l_4163 = ET.SubElement(long_name163, 'L-4')
    l_4163.text = 'Milligram Per Second'
    l_4163.attrib = {'L': 'EN'}
    display_name85 = ET.SubElement(unit85, 'DISPLAY-NAME')
    display_name85.text = 'mg/s'
    factor_si_to_unit85 = ET.SubElement(unit85, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit85.text = '1000000'
    offset_si_to_unit85 = ET.SubElement(unit85, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit85.text = '0'
    physical_dimension_ref85 = ET.SubElement(unit85, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref85.text = 'M1TiNeg1'
    physical_dimension_ref85.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit86 = ET.SubElement(elements3, 'UNIT')
    short_name169 = ET.SubElement(unit86, 'SHORT-NAME')
    short_name169.text = 'MilliJou'
    long_name164 = ET.SubElement(unit86, 'LONG-NAME')
    l_4164 = ET.SubElement(long_name164, 'L-4')
    l_4164.text = 'Millijoule'
    l_4164.attrib = {'L': 'EN'}
    display_name86 = ET.SubElement(unit86, 'DISPLAY-NAME')
    display_name86.text = 'mJ'
    factor_si_to_unit86 = ET.SubElement(unit86, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit86.text = '1000'
    offset_si_to_unit86 = ET.SubElement(unit86, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit86.text = '0'
    physical_dimension_ref86 = ET.SubElement(unit86, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref86.text = 'Len2M1TiNeg2_1'
    physical_dimension_ref86.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit87 = ET.SubElement(elements3, 'UNIT')
    short_name170 = ET.SubElement(unit87, 'SHORT-NAME')
    short_name170.text = 'MilliLtr'
    long_name165 = ET.SubElement(unit87, 'LONG-NAME')
    l_4165 = ET.SubElement(long_name165, 'L-4')
    l_4165.text = 'Milliliter'
    l_4165.attrib = {'L': 'EN'}
    display_name87 = ET.SubElement(unit87, 'DISPLAY-NAME')
    display_name87.text = 'ml'
    factor_si_to_unit87 = ET.SubElement(unit87, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit87.text = '1000000'
    offset_si_to_unit87 = ET.SubElement(unit87, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit87.text = '0'
    physical_dimension_ref87 = ET.SubElement(unit87, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref87.text = 'Len3'
    physical_dimension_ref87.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit88 = ET.SubElement(elements3, 'UNIT')
    short_name171 = ET.SubElement(unit88, 'SHORT-NAME')
    short_name171.text = 'MilliMtr'
    long_name166 = ET.SubElement(unit88, 'LONG-NAME')
    l_4166 = ET.SubElement(long_name166, 'L-4')
    l_4166.text = 'Millimeter'
    l_4166.attrib = {'L': 'EN'}
    display_name88 = ET.SubElement(unit88, 'DISPLAY-NAME')
    display_name88.text = 'mm'
    factor_si_to_unit88 = ET.SubElement(unit88, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit88.text = '1000'
    offset_si_to_unit88 = ET.SubElement(unit88, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit88.text = '0'
    physical_dimension_ref88 = ET.SubElement(unit88, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref88.text = 'Len1'
    physical_dimension_ref88.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit89 = ET.SubElement(elements3, 'UNIT')
    short_name172 = ET.SubElement(unit89, 'SHORT-NAME')
    short_name172.text = 'MilliMtrCubd'
    long_name167 = ET.SubElement(unit89, 'LONG-NAME')
    l_4167 = ET.SubElement(long_name167, 'L-4')
    l_4167.text = 'Cubic Millimeter'
    l_4167.attrib = {'L': 'EN'}
    display_name89 = ET.SubElement(unit89, 'DISPLAY-NAME')
    display_name89.text = 'mm^3'
    factor_si_to_unit89 = ET.SubElement(unit89, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit89.text = '1000000000'
    offset_si_to_unit89 = ET.SubElement(unit89, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit89.text = '0'
    physical_dimension_ref89 = ET.SubElement(unit89, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref89.text = 'Len3'
    physical_dimension_ref89.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit90 = ET.SubElement(elements3, 'UNIT')
    short_name173 = ET.SubElement(unit90, 'SHORT-NAME')
    short_name173.text = 'MilliMtrCubdPerSec'
    long_name168 = ET.SubElement(unit90, 'LONG-NAME')
    l_4168 = ET.SubElement(long_name168, 'L-4')
    l_4168.text = 'Cubic Millimeter Per Second'
    l_4168.attrib = {'L': 'EN'}
    display_name90 = ET.SubElement(unit90, 'DISPLAY-NAME')
    display_name90.text = '(mm^3)/s'
    factor_si_to_unit90 = ET.SubElement(unit90, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit90.text = '1000000000'
    offset_si_to_unit90 = ET.SubElement(unit90, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit90.text = '0'
    physical_dimension_ref90 = ET.SubElement(unit90, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref90.text = 'Len3TiNeg1'
    physical_dimension_ref90.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit91 = ET.SubElement(elements3, 'UNIT')
    short_name174 = ET.SubElement(unit91, 'SHORT-NAME')
    short_name174.text = 'MilliOhm'
    long_name169 = ET.SubElement(unit91, 'LONG-NAME')
    l_4169 = ET.SubElement(long_name169, 'L-4')
    l_4169.text = 'Milliohm'
    l_4169.attrib = {'L': 'EN'}
    display_name91 = ET.SubElement(unit91, 'DISPLAY-NAME')
    display_name91.text = 'mΩ'
    factor_si_to_unit91 = ET.SubElement(unit91, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit91.text = '1000'
    offset_si_to_unit91 = ET.SubElement(unit91, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit91.text = '0'
    physical_dimension_ref91 = ET.SubElement(unit91, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref91.text = 'Len2M1TiNeg3INeg2'
    physical_dimension_ref91.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit92 = ET.SubElement(elements3, 'UNIT')
    short_name175 = ET.SubElement(unit92, 'SHORT-NAME')
    short_name175.text = 'MilliSec'
    long_name170 = ET.SubElement(unit92, 'LONG-NAME')
    l_4170 = ET.SubElement(long_name170, 'L-4')
    l_4170.text = 'Millisecond'
    l_4170.attrib = {'L': 'EN'}
    display_name92 = ET.SubElement(unit92, 'DISPLAY-NAME')
    display_name92.text = 'ms'
    factor_si_to_unit92 = ET.SubElement(unit92, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit92.text = '1000'
    offset_si_to_unit92 = ET.SubElement(unit92, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit92.text = '0'
    physical_dimension_ref92 = ET.SubElement(unit92, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref92.text = 'Ti1'
    physical_dimension_ref92.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit93 = ET.SubElement(elements3, 'UNIT')
    short_name176 = ET.SubElement(unit93, 'SHORT-NAME')
    short_name176.text = 'MilliTesla'
    long_name171 = ET.SubElement(unit93, 'LONG-NAME')
    l_4171 = ET.SubElement(long_name171, 'L-4')
    l_4171.text = 'Millitesla'
    l_4171.attrib = {'L': 'EN'}
    display_name93 = ET.SubElement(unit93, 'DISPLAY-NAME')
    display_name93.text = 'mT'
    factor_si_to_unit93 = ET.SubElement(unit93, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit93.text = '1000'
    offset_si_to_unit93 = ET.SubElement(unit93, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit93.text = '0'
    physical_dimension_ref93 = ET.SubElement(unit93, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref93.text = 'M1TiNeg2INeg1'
    physical_dimension_ref93.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit94 = ET.SubElement(elements3, 'UNIT')
    short_name177 = ET.SubElement(unit94, 'SHORT-NAME')
    short_name177.text = 'MilliVolt'
    long_name172 = ET.SubElement(unit94, 'LONG-NAME')
    l_4172 = ET.SubElement(long_name172, 'L-4')
    l_4172.text = 'Millivolt'
    l_4172.attrib = {'L': 'EN'}
    display_name94 = ET.SubElement(unit94, 'DISPLAY-NAME')
    display_name94.text = 'mV'
    factor_si_to_unit94 = ET.SubElement(unit94, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit94.text = '1000'
    offset_si_to_unit94 = ET.SubElement(unit94, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit94.text = '0'
    physical_dimension_ref94 = ET.SubElement(unit94, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref94.text = 'Len2M1TiNeg3INeg1'
    physical_dimension_ref94.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit95 = ET.SubElement(elements3, 'UNIT')
    short_name178 = ET.SubElement(unit95, 'SHORT-NAME')
    short_name178.text = 'MilliVoltPerSec'
    long_name173 = ET.SubElement(unit95, 'LONG-NAME')
    l_4173 = ET.SubElement(long_name173, 'L-4')
    l_4173.text = 'Millivolt Per Second'
    l_4173.attrib = {'L': 'EN'}
    display_name95 = ET.SubElement(unit95, 'DISPLAY-NAME')
    display_name95.text = 'mV/s'
    factor_si_to_unit95 = ET.SubElement(unit95, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit95.text = '1000'
    offset_si_to_unit95 = ET.SubElement(unit95, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit95.text = '0'
    physical_dimension_ref95 = ET.SubElement(unit95, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref95.text = 'Len2M1TiNeg4INeg1'
    physical_dimension_ref95.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit96 = ET.SubElement(elements3, 'UNIT')
    short_name179 = ET.SubElement(unit96, 'SHORT-NAME')
    short_name179.text = 'MilliWatt'
    long_name174 = ET.SubElement(unit96, 'LONG-NAME')
    l_4174 = ET.SubElement(long_name174, 'L-4')
    l_4174.text = 'Milliwatt'
    l_4174.attrib = {'L': 'EN'}
    display_name96 = ET.SubElement(unit96, 'DISPLAY-NAME')
    display_name96.text = 'mW'
    factor_si_to_unit96 = ET.SubElement(unit96, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit96.text = '1000'
    offset_si_to_unit96 = ET.SubElement(unit96, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit96.text = '0'
    physical_dimension_ref96 = ET.SubElement(unit96, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref96.text = 'Len2M1TiNeg3_1'
    physical_dimension_ref96.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit97 = ET.SubElement(elements3, 'UNIT')
    short_name180 = ET.SubElement(unit97, 'SHORT-NAME')
    short_name180.text = 'Mins'
    long_name175 = ET.SubElement(unit97, 'LONG-NAME')
    l_4175 = ET.SubElement(long_name175, 'L-4')
    l_4175.text = 'Minute'
    l_4175.attrib = {'L': 'EN'}
    display_name97 = ET.SubElement(unit97, 'DISPLAY-NAME')
    display_name97.text = 'min'
    factor_si_to_unit97 = ET.SubElement(unit97, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit97.text = '0.0166666666666667'
    offset_si_to_unit97 = ET.SubElement(unit97, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit97.text = '0'
    physical_dimension_ref97 = ET.SubElement(unit97, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref97.text = 'Ti1'
    physical_dimension_ref97.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit98 = ET.SubElement(elements3, 'UNIT')
    short_name181 = ET.SubElement(unit98, 'SHORT-NAME')
    short_name181.text = 'Ml'
    long_name176 = ET.SubElement(unit98, 'LONG-NAME')
    l_4176 = ET.SubElement(long_name176, 'L-4')
    l_4176.text = 'Mile'
    l_4176.attrib = {'L': 'EN'}
    display_name98 = ET.SubElement(unit98, 'DISPLAY-NAME')
    display_name98.text = 'mile'
    factor_si_to_unit98 = ET.SubElement(unit98, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit98.text = '0.000621371192237333'
    offset_si_to_unit98 = ET.SubElement(unit98, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit98.text = '0'
    physical_dimension_ref98 = ET.SubElement(unit98, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref98.text = 'Len1'
    physical_dimension_ref98.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit99 = ET.SubElement(elements3, 'UNIT')
    short_name182 = ET.SubElement(unit99, 'SHORT-NAME')
    short_name182.text = 'MlPerHr'
    long_name177 = ET.SubElement(unit99, 'LONG-NAME')
    l_4177 = ET.SubElement(long_name177, 'L-4')
    l_4177.text = 'Miles Per Hour'
    l_4177.attrib = {'L': 'EN'}
    display_name99 = ET.SubElement(unit99, 'DISPLAY-NAME')
    display_name99.text = 'mph'
    factor_si_to_unit99 = ET.SubElement(unit99, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit99.text = '2.2369362920544'
    offset_si_to_unit99 = ET.SubElement(unit99, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit99.text = '0'
    physical_dimension_ref99 = ET.SubElement(unit99, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref99.text = 'Len1TiNeg1'
    physical_dimension_ref99.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit100 = ET.SubElement(elements3, 'UNIT')
    short_name183 = ET.SubElement(unit100, 'SHORT-NAME')
    short_name183.text = 'Mol'
    long_name178 = ET.SubElement(unit100, 'LONG-NAME')
    l_4178 = ET.SubElement(long_name178, 'L-4')
    l_4178.text = 'Mole'
    l_4178.attrib = {'L': 'EN'}
    display_name100 = ET.SubElement(unit100, 'DISPLAY-NAME')
    display_name100.text = 'mol'
    factor_si_to_unit100 = ET.SubElement(unit100, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit100.text = '1'
    offset_si_to_unit100 = ET.SubElement(unit100, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit100.text = '0'
    physical_dimension_ref100 = ET.SubElement(unit100, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref100.text = 'Amnt1'
    physical_dimension_ref100.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit101 = ET.SubElement(elements3, 'UNIT')
    short_name184 = ET.SubElement(unit101, 'SHORT-NAME')
    short_name184.text = 'MolPerLtr'
    long_name179 = ET.SubElement(unit101, 'LONG-NAME')
    l_4179 = ET.SubElement(long_name179, 'L-4')
    l_4179.text = 'Mole Per Liter'
    l_4179.attrib = {'L': 'EN'}
    display_name101 = ET.SubElement(unit101, 'DISPLAY-NAME')
    display_name101.text = 'mol/l'
    factor_si_to_unit101 = ET.SubElement(unit101, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit101.text = '0.001'
    offset_si_to_unit101 = ET.SubElement(unit101, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit101.text = '0'
    physical_dimension_ref101 = ET.SubElement(unit101, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref101.text = 'LenNeg3Amnt1'
    physical_dimension_ref101.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit102 = ET.SubElement(elements3, 'UNIT')
    short_name185 = ET.SubElement(unit102, 'SHORT-NAME')
    short_name185.text = 'MolPerLtrPerSec'
    long_name180 = ET.SubElement(unit102, 'LONG-NAME')
    l_4180 = ET.SubElement(long_name180, 'L-4')
    l_4180.text = 'Mol Per Liter Per Second'
    l_4180.attrib = {'L': 'EN'}
    display_name102 = ET.SubElement(unit102, 'DISPLAY-NAME')
    display_name102.text = '(mol/l)/s'
    factor_si_to_unit102 = ET.SubElement(unit102, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit102.text = '0.001'
    offset_si_to_unit102 = ET.SubElement(unit102, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit102.text = '0'
    physical_dimension_ref102 = ET.SubElement(unit102, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref102.text = 'LenNeg3TiNeg1Amnt1'
    physical_dimension_ref102.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit103 = ET.SubElement(elements3, 'UNIT')
    short_name186 = ET.SubElement(unit103, 'SHORT-NAME')
    short_name186.text = 'MolPerMtrCubd'
    long_name181 = ET.SubElement(unit103, 'LONG-NAME')
    l_4181 = ET.SubElement(long_name181, 'L-4')
    l_4181.text = 'Mole Per Cubic Meter'
    l_4181.attrib = {'L': 'EN'}
    display_name103 = ET.SubElement(unit103, 'DISPLAY-NAME')
    display_name103.text = 'mol/(m^3)'
    factor_si_to_unit103 = ET.SubElement(unit103, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit103.text = '1'
    offset_si_to_unit103 = ET.SubElement(unit103, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit103.text = '0'
    physical_dimension_ref103 = ET.SubElement(unit103, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref103.text = 'LenNeg3Amnt1'
    physical_dimension_ref103.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit104 = ET.SubElement(elements3, 'UNIT')
    short_name187 = ET.SubElement(unit104, 'SHORT-NAME')
    short_name187.text = 'MolPerSec'
    long_name182 = ET.SubElement(unit104, 'LONG-NAME')
    l_4182 = ET.SubElement(long_name182, 'L-4')
    l_4182.text = 'Mole Per Second'
    l_4182.attrib = {'L': 'EN'}
    display_name104 = ET.SubElement(unit104, 'DISPLAY-NAME')
    display_name104.text = 'mol/s'
    factor_si_to_unit104 = ET.SubElement(unit104, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit104.text = '1'
    offset_si_to_unit104 = ET.SubElement(unit104, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit104.text = '0'
    physical_dimension_ref104 = ET.SubElement(unit104, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref104.text = 'TiNeg1Amnt1'
    physical_dimension_ref104.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit105 = ET.SubElement(elements3, 'UNIT')
    short_name188 = ET.SubElement(unit105, 'SHORT-NAME')
    short_name188.text = 'Mtr'
    long_name183 = ET.SubElement(unit105, 'LONG-NAME')
    l_4183 = ET.SubElement(long_name183, 'L-4')
    l_4183.text = 'Meter'
    l_4183.attrib = {'L': 'EN'}
    display_name105 = ET.SubElement(unit105, 'DISPLAY-NAME')
    display_name105.text = 'm'
    factor_si_to_unit105 = ET.SubElement(unit105, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit105.text = '1'
    offset_si_to_unit105 = ET.SubElement(unit105, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit105.text = '0'
    physical_dimension_ref105 = ET.SubElement(unit105, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref105.text = 'Len1'
    physical_dimension_ref105.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit106 = ET.SubElement(elements3, 'UNIT')
    short_name189 = ET.SubElement(unit106, 'SHORT-NAME')
    short_name189.text = 'MtrCubd'
    long_name184 = ET.SubElement(unit106, 'LONG-NAME')
    l_4184 = ET.SubElement(long_name184, 'L-4')
    l_4184.text = 'Cubic Meter'
    l_4184.attrib = {'L': 'EN'}
    display_name106 = ET.SubElement(unit106, 'DISPLAY-NAME')
    display_name106.text = 'm^3'
    factor_si_to_unit106 = ET.SubElement(unit106, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit106.text = '1'
    offset_si_to_unit106 = ET.SubElement(unit106, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit106.text = '0'
    physical_dimension_ref106 = ET.SubElement(unit106, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref106.text = 'Len3'
    physical_dimension_ref106.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit107 = ET.SubElement(elements3, 'UNIT')
    short_name190 = ET.SubElement(unit107, 'SHORT-NAME')
    short_name190.text = 'MtrCubdPerHr'
    long_name185 = ET.SubElement(unit107, 'LONG-NAME')
    l_4185 = ET.SubElement(long_name185, 'L-4')
    l_4185.text = 'Cubic Meter Per Hour'
    l_4185.attrib = {'L': 'EN'}
    display_name107 = ET.SubElement(unit107, 'DISPLAY-NAME')
    display_name107.text = '(m^3)/h'
    factor_si_to_unit107 = ET.SubElement(unit107, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit107.text = '3600'
    offset_si_to_unit107 = ET.SubElement(unit107, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit107.text = '0'
    physical_dimension_ref107 = ET.SubElement(unit107, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref107.text = 'Len3TiNeg1'
    physical_dimension_ref107.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit108 = ET.SubElement(elements3, 'UNIT')
    short_name191 = ET.SubElement(unit108, 'SHORT-NAME')
    short_name191.text = 'MtrCubdPerHrPerSec'
    long_name186 = ET.SubElement(unit108, 'LONG-NAME')
    l_4186 = ET.SubElement(long_name186, 'L-4')
    l_4186.text = 'Cubic Meter Per Hour Per Second'
    l_4186.attrib = {'L': 'EN'}
    display_name108 = ET.SubElement(unit108, 'DISPLAY-NAME')
    display_name108.text = '(m^3)/(h*s)'
    factor_si_to_unit108 = ET.SubElement(unit108, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit108.text = '3600'
    offset_si_to_unit108 = ET.SubElement(unit108, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit108.text = '0'
    physical_dimension_ref108 = ET.SubElement(unit108, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref108.text = 'Len3TiNeg2'
    physical_dimension_ref108.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit109 = ET.SubElement(elements3, 'UNIT')
    short_name192 = ET.SubElement(unit109, 'SHORT-NAME')
    short_name192.text = 'MtrCubdPerKiloGr'
    long_name187 = ET.SubElement(unit109, 'LONG-NAME')
    l_4187 = ET.SubElement(long_name187, 'L-4')
    l_4187.text = 'Cubic Meter Per Kilogram'
    l_4187.attrib = {'L': 'EN'}
    display_name109 = ET.SubElement(unit109, 'DISPLAY-NAME')
    display_name109.text = '(m^3)/kg'
    factor_si_to_unit109 = ET.SubElement(unit109, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit109.text = '1'
    offset_si_to_unit109 = ET.SubElement(unit109, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit109.text = '0'
    physical_dimension_ref109 = ET.SubElement(unit109, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref109.text = 'Len3MNeg1'
    physical_dimension_ref109.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit110 = ET.SubElement(elements3, 'UNIT')
    short_name193 = ET.SubElement(unit110, 'SHORT-NAME')
    short_name193.text = 'MtrPerSec'
    long_name188 = ET.SubElement(unit110, 'LONG-NAME')
    l_4188 = ET.SubElement(long_name188, 'L-4')
    l_4188.text = 'Meter Per Second'
    l_4188.attrib = {'L': 'EN'}
    display_name110 = ET.SubElement(unit110, 'DISPLAY-NAME')
    display_name110.text = 'm/s'
    factor_si_to_unit110 = ET.SubElement(unit110, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit110.text = '1'
    offset_si_to_unit110 = ET.SubElement(unit110, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit110.text = '0'
    physical_dimension_ref110 = ET.SubElement(unit110, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref110.text = 'Len1TiNeg1'
    physical_dimension_ref110.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit111 = ET.SubElement(elements3, 'UNIT')
    short_name194 = ET.SubElement(unit111, 'SHORT-NAME')
    short_name194.text = 'MtrPerSecCubd'
    long_name189 = ET.SubElement(unit111, 'LONG-NAME')
    l_4189 = ET.SubElement(long_name189, 'L-4')
    l_4189.text = 'Meter Per Cubic Second'
    l_4189.attrib = {'L': 'EN'}
    display_name111 = ET.SubElement(unit111, 'DISPLAY-NAME')
    display_name111.text = 'm/(s^3)'
    factor_si_to_unit111 = ET.SubElement(unit111, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit111.text = '1'
    offset_si_to_unit111 = ET.SubElement(unit111, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit111.text = '0'
    physical_dimension_ref111 = ET.SubElement(unit111, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref111.text = 'Len1TiNeg3'
    physical_dimension_ref111.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit112 = ET.SubElement(elements3, 'UNIT')
    short_name195 = ET.SubElement(unit112, 'SHORT-NAME')
    short_name195.text = 'MtrPerSecSqd'
    long_name190 = ET.SubElement(unit112, 'LONG-NAME')
    l_4190 = ET.SubElement(long_name190, 'L-4')
    l_4190.text = 'Meter Per Square Second'
    l_4190.attrib = {'L': 'EN'}
    display_name112 = ET.SubElement(unit112, 'DISPLAY-NAME')
    display_name112.text = 'm/(s^2)'
    factor_si_to_unit112 = ET.SubElement(unit112, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit112.text = '1'
    offset_si_to_unit112 = ET.SubElement(unit112, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit112.text = '0'
    physical_dimension_ref112 = ET.SubElement(unit112, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref112.text = 'Len1TiNeg2'
    physical_dimension_ref112.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit113 = ET.SubElement(elements3, 'UNIT')
    short_name196 = ET.SubElement(unit113, 'SHORT-NAME')
    short_name196.text = 'MtrSqd'
    long_name191 = ET.SubElement(unit113, 'LONG-NAME')
    l_4191 = ET.SubElement(long_name191, 'L-4')
    l_4191.text = 'Square Meter'
    l_4191.attrib = {'L': 'EN'}
    display_name113 = ET.SubElement(unit113, 'DISPLAY-NAME')
    display_name113.text = 'm^2'
    factor_si_to_unit113 = ET.SubElement(unit113, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit113.text = '1'
    offset_si_to_unit113 = ET.SubElement(unit113, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit113.text = '0'
    physical_dimension_ref113 = ET.SubElement(unit113, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref113.text = 'Len2'
    physical_dimension_ref113.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit114 = ET.SubElement(elements3, 'UNIT')
    short_name197 = ET.SubElement(unit114, 'SHORT-NAME')
    short_name197.text = 'MtrSqdPerSec'
    long_name192 = ET.SubElement(unit114, 'LONG-NAME')
    l_4192 = ET.SubElement(long_name192, 'L-4')
    l_4192.text = 'Square Meter Per Second'
    l_4192.attrib = {'L': 'EN'}
    display_name114 = ET.SubElement(unit114, 'DISPLAY-NAME')
    display_name114.text = '(m^2)/s'
    factor_si_to_unit114 = ET.SubElement(unit114, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit114.text = '1'
    offset_si_to_unit114 = ET.SubElement(unit114, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit114.text = '0'
    physical_dimension_ref114 = ET.SubElement(unit114, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref114.text = 'Len2Ti1'
    physical_dimension_ref114.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit115 = ET.SubElement(elements3, 'UNIT')
    short_name198 = ET.SubElement(unit115, 'SHORT-NAME')
    short_name198.text = 'NanoFrd'
    long_name193 = ET.SubElement(unit115, 'LONG-NAME')
    l_4193 = ET.SubElement(long_name193, 'L-4')
    l_4193.text = 'Nanofarad'
    l_4193.attrib = {'L': 'EN'}
    display_name115 = ET.SubElement(unit115, 'DISPLAY-NAME')
    display_name115.text = 'nF'
    factor_si_to_unit115 = ET.SubElement(unit115, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit115.text = '1000000000'
    offset_si_to_unit115 = ET.SubElement(unit115, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit115.text = '0'
    physical_dimension_ref115 = ET.SubElement(unit115, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref115.text = 'LenNeg2MNeg1Ti4I2'
    physical_dimension_ref115.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit116 = ET.SubElement(elements3, 'UNIT')
    short_name199 = ET.SubElement(unit116, 'SHORT-NAME')
    short_name199.text = 'NanoSec'
    long_name194 = ET.SubElement(unit116, 'LONG-NAME')
    l_4194 = ET.SubElement(long_name194, 'L-4')
    l_4194.text = 'Nanosecond'
    l_4194.attrib = {'L': 'EN'}
    display_name116 = ET.SubElement(unit116, 'DISPLAY-NAME')
    display_name116.text = 'ns'
    factor_si_to_unit116 = ET.SubElement(unit116, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit116.text = '1000000000'
    offset_si_to_unit116 = ET.SubElement(unit116, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit116.text = '0'
    physical_dimension_ref116 = ET.SubElement(unit116, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref116.text = 'Ti1'
    physical_dimension_ref116.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit117 = ET.SubElement(elements3, 'UNIT')
    short_name200 = ET.SubElement(unit117, 'SHORT-NAME')
    short_name200.text = 'NoUnit'
    long_name195 = ET.SubElement(unit117, 'LONG-NAME')
    l_4195 = ET.SubElement(long_name195, 'L-4')
    l_4195.text = 'Neither Physical nor Mathematical Unit'
    l_4195.attrib = {'L': 'EN'}
    display_name117 = ET.SubElement(unit117, 'DISPLAY-NAME')
    display_name117.text = '-'
    factor_si_to_unit117 = ET.SubElement(unit117, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit117.text = '1'
    offset_si_to_unit117 = ET.SubElement(unit117, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit117.text = '0'
    physical_dimension_ref117 = ET.SubElement(unit117, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref117.text = 'NoDimension'
    physical_dimension_ref117.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit118 = ET.SubElement(elements3, 'UNIT')
    short_name201 = ET.SubElement(unit118, 'SHORT-NAME')
    short_name201.text = 'Nwt'
    long_name196 = ET.SubElement(unit118, 'LONG-NAME')
    l_4196 = ET.SubElement(long_name196, 'L-4')
    l_4196.text = 'Newton'
    l_4196.attrib = {'L': 'EN'}
    display_name118 = ET.SubElement(unit118, 'DISPLAY-NAME')
    display_name118.text = 'N'
    factor_si_to_unit118 = ET.SubElement(unit118, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit118.text = '1'
    offset_si_to_unit118 = ET.SubElement(unit118, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit118.text = '0'
    physical_dimension_ref118 = ET.SubElement(unit118, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref118.text = 'Len1M1TiNeg2'
    physical_dimension_ref118.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit119 = ET.SubElement(elements3, 'UNIT')
    short_name202 = ET.SubElement(unit119, 'SHORT-NAME')
    short_name202.text = 'NwtMtr'
    long_name197 = ET.SubElement(unit119, 'LONG-NAME')
    l_4197 = ET.SubElement(long_name197, 'L-4')
    l_4197.text = 'Newtonmeter'
    l_4197.attrib = {'L': 'EN'}
    display_name119 = ET.SubElement(unit119, 'DISPLAY-NAME')
    display_name119.text = 'Nm'
    factor_si_to_unit119 = ET.SubElement(unit119, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit119.text = '1'
    offset_si_to_unit119 = ET.SubElement(unit119, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit119.text = '0'
    physical_dimension_ref119 = ET.SubElement(unit119, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref119.text = 'Len2M1TiNeg2'
    physical_dimension_ref119.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit120 = ET.SubElement(elements3, 'UNIT')
    short_name203 = ET.SubElement(unit120, 'SHORT-NAME')
    short_name203.text = 'NwtMtrPerRpm'
    long_name198 = ET.SubElement(unit120, 'LONG-NAME')
    l_4198 = ET.SubElement(long_name198, 'L-4')
    l_4198.text = 'Newtonmeter Per Rpm'
    l_4198.attrib = {'L': 'EN'}
    display_name120 = ET.SubElement(unit120, 'DISPLAY-NAME')
    display_name120.text = 'Nm/rpm'
    factor_si_to_unit120 = ET.SubElement(unit120, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit120.text = '0.0166666666666667'
    offset_si_to_unit120 = ET.SubElement(unit120, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit120.text = '0'
    physical_dimension_ref120 = ET.SubElement(unit120, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref120.text = 'Len2M1TiNeg1'
    physical_dimension_ref120.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit121 = ET.SubElement(elements3, 'UNIT')
    short_name204 = ET.SubElement(unit121, 'SHORT-NAME')
    short_name204.text = 'NwtMtrPerRpmPerSec'
    long_name199 = ET.SubElement(unit121, 'LONG-NAME')
    l_4199 = ET.SubElement(long_name199, 'L-4')
    l_4199.text = 'Newtonmeter Per Rpm Per Second'
    l_4199.attrib = {'L': 'EN'}
    display_name121 = ET.SubElement(unit121, 'DISPLAY-NAME')
    display_name121.text = 'Nm/(rpm/s)'
    factor_si_to_unit121 = ET.SubElement(unit121, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit121.text = '0.0166666666666667'
    offset_si_to_unit121 = ET.SubElement(unit121, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit121.text = '0'
    physical_dimension_ref121 = ET.SubElement(unit121, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref121.text = 'Len2M1'
    physical_dimension_ref121.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit122 = ET.SubElement(elements3, 'UNIT')
    short_name205 = ET.SubElement(unit122, 'SHORT-NAME')
    short_name205.text = 'NwtMtrPerSec'
    long_name200 = ET.SubElement(unit122, 'LONG-NAME')
    l_4200 = ET.SubElement(long_name200, 'L-4')
    l_4200.text = 'Newtonmeter Per Second'
    l_4200.attrib = {'L': 'EN'}
    display_name122 = ET.SubElement(unit122, 'DISPLAY-NAME')
    display_name122.text = '(N*m)/s'
    factor_si_to_unit122 = ET.SubElement(unit122, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit122.text = '1'
    offset_si_to_unit122 = ET.SubElement(unit122, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit122.text = '0'
    physical_dimension_ref122 = ET.SubElement(unit122, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref122.text = 'Len2M1TiNeg3'
    physical_dimension_ref122.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit123 = ET.SubElement(elements3, 'UNIT')
    short_name206 = ET.SubElement(unit123, 'SHORT-NAME')
    short_name206.text = 'NwtMtrSec'
    long_name201 = ET.SubElement(unit123, 'LONG-NAME')
    l_4201 = ET.SubElement(long_name201, 'L-4')
    l_4201.text = 'Newtonmeter Second'
    l_4201.attrib = {'L': 'EN'}
    display_name123 = ET.SubElement(unit123, 'DISPLAY-NAME')
    display_name123.text = 'Nm*s'
    factor_si_to_unit123 = ET.SubElement(unit123, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit123.text = '1'
    offset_si_to_unit123 = ET.SubElement(unit123, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit123.text = '0'
    physical_dimension_ref123 = ET.SubElement(unit123, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref123.text = 'Len2M1TiNeg1'
    physical_dimension_ref123.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit124 = ET.SubElement(elements3, 'UNIT')
    short_name207 = ET.SubElement(unit124, 'SHORT-NAME')
    short_name207.text = 'NwtMtrSqrSec'
    long_name202 = ET.SubElement(unit124, 'LONG-NAME')
    l_4202 = ET.SubElement(long_name202, 'L-4')
    l_4202.text = 'Newtonmeter Square Second'
    l_4202.attrib = {'L': 'EN'}
    display_name124 = ET.SubElement(unit124, 'DISPLAY-NAME')
    display_name124.text = 'Nm*(s^2)'
    factor_si_to_unit124 = ET.SubElement(unit124, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit124.text = '1'
    offset_si_to_unit124 = ET.SubElement(unit124, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit124.text = '0'
    physical_dimension_ref124 = ET.SubElement(unit124, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref124.text = 'Len2M1'
    physical_dimension_ref124.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit125 = ET.SubElement(elements3, 'UNIT')
    short_name208 = ET.SubElement(unit125, 'SHORT-NAME')
    short_name208.text = 'NwtPerMtr'
    long_name203 = ET.SubElement(unit125, 'LONG-NAME')
    l_4203 = ET.SubElement(long_name203, 'L-4')
    l_4203.text = 'Newton Per Meter'
    l_4203.attrib = {'L': 'EN'}
    display_name125 = ET.SubElement(unit125, 'DISPLAY-NAME')
    display_name125.text = 'N/m'
    factor_si_to_unit125 = ET.SubElement(unit125, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit125.text = '1'
    offset_si_to_unit125 = ET.SubElement(unit125, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit125.text = '0'
    physical_dimension_ref125 = ET.SubElement(unit125, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref125.text = 'M1TiNeg2'
    physical_dimension_ref125.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit126 = ET.SubElement(elements3, 'UNIT')
    short_name209 = ET.SubElement(unit126, 'SHORT-NAME')
    short_name209.text = 'NwtSecPerMtr'
    long_name204 = ET.SubElement(unit126, 'LONG-NAME')
    l_4204 = ET.SubElement(long_name204, 'L-4')
    l_4204.text = 'Newtonsecond Per Meter'
    l_4204.attrib = {'L': 'EN'}
    display_name126 = ET.SubElement(unit126, 'DISPLAY-NAME')
    display_name126.text = 'Ns/m'
    factor_si_to_unit126 = ET.SubElement(unit126, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit126.text = '1'
    offset_si_to_unit126 = ET.SubElement(unit126, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit126.text = '0'
    physical_dimension_ref126 = ET.SubElement(unit126, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref126.text = 'M1TiNeg1_1'
    physical_dimension_ref126.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit127 = ET.SubElement(elements3, 'UNIT')
    short_name210 = ET.SubElement(unit127, 'SHORT-NAME')
    short_name210.text = 'Ohm'
    long_name205 = ET.SubElement(unit127, 'LONG-NAME')
    l_4205 = ET.SubElement(long_name205, 'L-4')
    l_4205.text = 'Ohm'
    l_4205.attrib = {'L': 'EN'}
    display_name127 = ET.SubElement(unit127, 'DISPLAY-NAME')
    display_name127.text = 'Ω'
    factor_si_to_unit127 = ET.SubElement(unit127, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit127.text = '1'
    offset_si_to_unit127 = ET.SubElement(unit127, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit127.text = '0'
    physical_dimension_ref127 = ET.SubElement(unit127, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref127.text = 'Len2M1TiNeg3INeg2'
    physical_dimension_ref127.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit128 = ET.SubElement(elements3, 'UNIT')
    short_name211 = ET.SubElement(unit128, 'SHORT-NAME')
    short_name211.text = 'Pa'
    long_name206 = ET.SubElement(unit128, 'LONG-NAME')
    l_4206 = ET.SubElement(long_name206, 'L-4')
    l_4206.text = 'Pascal'
    l_4206.attrib = {'L': 'EN'}
    display_name128 = ET.SubElement(unit128, 'DISPLAY-NAME')
    display_name128.text = 'Pa'
    factor_si_to_unit128 = ET.SubElement(unit128, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit128.text = '1'
    offset_si_to_unit128 = ET.SubElement(unit128, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit128.text = '0'
    physical_dimension_ref128 = ET.SubElement(unit128, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref128.text = 'LenNeg1M1TiNeg2'
    physical_dimension_ref128.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit129 = ET.SubElement(elements3, 'UNIT')
    short_name212 = ET.SubElement(unit129, 'SHORT-NAME')
    short_name212.text = 'PaPerMtrCubdPerSec'
    long_name207 = ET.SubElement(unit129, 'LONG-NAME')
    l_4207 = ET.SubElement(long_name207, 'L-4')
    l_4207.text = 'Pascal Per Cubic Meter Per Second'
    l_4207.attrib = {'L': 'EN'}
    display_name129 = ET.SubElement(unit129, 'DISPLAY-NAME')
    display_name129.text = 'Pa/((m^3)/s)'
    factor_si_to_unit129 = ET.SubElement(unit129, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit129.text = '1'
    offset_si_to_unit129 = ET.SubElement(unit129, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit129.text = '0'
    physical_dimension_ref129 = ET.SubElement(unit129, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref129.text = 'LenNeg4M1TiNeg1'
    physical_dimension_ref129.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit130 = ET.SubElement(elements3, 'UNIT')
    short_name213 = ET.SubElement(unit130, 'SHORT-NAME')
    short_name213.text = 'PaPerSec'
    long_name208 = ET.SubElement(unit130, 'LONG-NAME')
    l_4208 = ET.SubElement(long_name208, 'L-4')
    l_4208.text = 'Pascal Per Second'
    l_4208.attrib = {'L': 'EN'}
    display_name130 = ET.SubElement(unit130, 'DISPLAY-NAME')
    display_name130.text = 'Pa/s'
    factor_si_to_unit130 = ET.SubElement(unit130, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit130.text = '1'
    offset_si_to_unit130 = ET.SubElement(unit130, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit130.text = '0'
    physical_dimension_ref130 = ET.SubElement(unit130, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref130.text = 'LenNeg1M1TiNeg3'
    physical_dimension_ref130.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit131 = ET.SubElement(elements3, 'UNIT')
    short_name214 = ET.SubElement(unit131, 'SHORT-NAME')
    short_name214.text = 'PaSec'
    long_name209 = ET.SubElement(unit131, 'LONG-NAME')
    l_4209 = ET.SubElement(long_name209, 'L-4')
    l_4209.text = 'Pascal Second'
    l_4209.attrib = {'L': 'EN'}
    display_name131 = ET.SubElement(unit131, 'DISPLAY-NAME')
    display_name131.text = 'Pa*s'
    factor_si_to_unit131 = ET.SubElement(unit131, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit131.text = '1'
    offset_si_to_unit131 = ET.SubElement(unit131, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit131.text = '0'
    physical_dimension_ref131 = ET.SubElement(unit131, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref131.text = 'LenNeg1M1TiNeg1'
    physical_dimension_ref131.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit132 = ET.SubElement(elements3, 'UNIT')
    short_name215 = ET.SubElement(unit132, 'SHORT-NAME')
    short_name215.text = 'PerMille'
    long_name210 = ET.SubElement(unit132, 'LONG-NAME')
    l_4210 = ET.SubElement(long_name210, 'L-4')
    l_4210.text = 'Permille'
    l_4210.attrib = {'L': 'EN'}
    display_name132 = ET.SubElement(unit132, 'DISPLAY-NAME')
    display_name132.text = '‰'
    factor_si_to_unit132 = ET.SubElement(unit132, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit132.text = '1000'
    offset_si_to_unit132 = ET.SubElement(unit132, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit132.text = '0'
    physical_dimension_ref132 = ET.SubElement(unit132, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref132.text = 'NoDimension_1'
    physical_dimension_ref132.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit133 = ET.SubElement(elements3, 'UNIT')
    short_name216 = ET.SubElement(unit133, 'SHORT-NAME')
    short_name216.text = 'PerMin'
    long_name211 = ET.SubElement(unit133, 'LONG-NAME')
    l_4211 = ET.SubElement(long_name211, 'L-4')
    l_4211.text = 'Per Minute'
    l_4211.attrib = {'L': 'EN'}
    display_name133 = ET.SubElement(unit133, 'DISPLAY-NAME')
    display_name133.text = '1/min'
    factor_si_to_unit133 = ET.SubElement(unit133, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit133.text = '60'
    offset_si_to_unit133 = ET.SubElement(unit133, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit133.text = '0'
    physical_dimension_ref133 = ET.SubElement(unit133, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref133.text = 'TiNeg1_2'
    physical_dimension_ref133.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit134 = ET.SubElement(elements3, 'UNIT')
    short_name217 = ET.SubElement(unit134, 'SHORT-NAME')
    short_name217.text = 'PerMtr'
    long_name212 = ET.SubElement(unit134, 'LONG-NAME')
    l_4212 = ET.SubElement(long_name212, 'L-4')
    l_4212.text = 'Per Meter'
    l_4212.attrib = {'L': 'EN'}
    display_name134 = ET.SubElement(unit134, 'DISPLAY-NAME')
    display_name134.text = '1/m'
    factor_si_to_unit134 = ET.SubElement(unit134, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit134.text = '1'
    offset_si_to_unit134 = ET.SubElement(unit134, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit134.text = '0'
    physical_dimension_ref134 = ET.SubElement(unit134, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref134.text = 'LenNeg1'
    physical_dimension_ref134.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit135 = ET.SubElement(elements3, 'UNIT')
    short_name218 = ET.SubElement(unit135, 'SHORT-NAME')
    short_name218.text = 'PerSec'
    long_name213 = ET.SubElement(unit135, 'LONG-NAME')
    l_4213 = ET.SubElement(long_name213, 'L-4')
    l_4213.text = 'Per Second'
    l_4213.attrib = {'L': 'EN'}
    display_name135 = ET.SubElement(unit135, 'DISPLAY-NAME')
    display_name135.text = '1/s'
    factor_si_to_unit135 = ET.SubElement(unit135, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit135.text = '1'
    offset_si_to_unit135 = ET.SubElement(unit135, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit135.text = '0'
    physical_dimension_ref135 = ET.SubElement(unit135, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref135.text = 'TiNeg1_2'
    physical_dimension_ref135.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit136 = ET.SubElement(elements3, 'UNIT')
    short_name219 = ET.SubElement(unit136, 'SHORT-NAME')
    short_name219.text = 'PerSecSqd'
    long_name214 = ET.SubElement(unit136, 'LONG-NAME')
    l_4214 = ET.SubElement(long_name214, 'L-4')
    l_4214.text = 'Per Square Second'
    l_4214.attrib = {'L': 'EN'}
    display_name136 = ET.SubElement(unit136, 'DISPLAY-NAME')
    display_name136.text = '1/(s^2)'
    factor_si_to_unit136 = ET.SubElement(unit136, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit136.text = '1'
    offset_si_to_unit136 = ET.SubElement(unit136, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit136.text = '0'
    physical_dimension_ref136 = ET.SubElement(unit136, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref136.text = 'TiNeg2'
    physical_dimension_ref136.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit137 = ET.SubElement(elements3, 'UNIT')
    short_name220 = ET.SubElement(unit137, 'SHORT-NAME')
    short_name220.text = 'Perc'
    long_name215 = ET.SubElement(unit137, 'LONG-NAME')
    l_4215 = ET.SubElement(long_name215, 'L-4')
    l_4215.text = 'Percent'
    l_4215.attrib = {'L': 'EN'}
    display_name137 = ET.SubElement(unit137, 'DISPLAY-NAME')
    display_name137.text = '%'
    factor_si_to_unit137 = ET.SubElement(unit137, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit137.text = '100'
    offset_si_to_unit137 = ET.SubElement(unit137, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit137.text = '0'
    physical_dimension_ref137 = ET.SubElement(unit137, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref137.text = 'NoDimension_1'
    physical_dimension_ref137.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit138 = ET.SubElement(elements3, 'UNIT')
    short_name221 = ET.SubElement(unit138, 'SHORT-NAME')
    short_name221.text = 'PercPerMilliSec'
    long_name216 = ET.SubElement(unit138, 'LONG-NAME')
    l_4216 = ET.SubElement(long_name216, 'L-4')
    l_4216.text = 'Percent Per Millisecond'
    l_4216.attrib = {'L': 'EN'}
    display_name138 = ET.SubElement(unit138, 'DISPLAY-NAME')
    display_name138.text = '%/ms'
    factor_si_to_unit138 = ET.SubElement(unit138, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit138.text = '0.1'
    offset_si_to_unit138 = ET.SubElement(unit138, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit138.text = '0'
    physical_dimension_ref138 = ET.SubElement(unit138, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref138.text = 'TiNeg1_1'
    physical_dimension_ref138.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit139 = ET.SubElement(elements3, 'UNIT')
    short_name222 = ET.SubElement(unit139, 'SHORT-NAME')
    short_name222.text = 'PercPerSec'
    long_name217 = ET.SubElement(unit139, 'LONG-NAME')
    l_4217 = ET.SubElement(long_name217, 'L-4')
    l_4217.text = 'Percent Per Second'
    l_4217.attrib = {'L': 'EN'}
    display_name139 = ET.SubElement(unit139, 'DISPLAY-NAME')
    display_name139.text = '%/s'
    factor_si_to_unit139 = ET.SubElement(unit139, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit139.text = '100'
    offset_si_to_unit139 = ET.SubElement(unit139, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit139.text = '0'
    physical_dimension_ref139 = ET.SubElement(unit139, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref139.text = 'TiNeg1_1'
    physical_dimension_ref139.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit140 = ET.SubElement(elements3, 'UNIT')
    short_name223 = ET.SubElement(unit140, 'SHORT-NAME')
    short_name223.text = 'PicoFrd'
    long_name218 = ET.SubElement(unit140, 'LONG-NAME')
    l_4218 = ET.SubElement(long_name218, 'L-4')
    l_4218.text = 'Picofarad'
    l_4218.attrib = {'L': 'EN'}
    display_name140 = ET.SubElement(unit140, 'DISPLAY-NAME')
    display_name140.text = 'pF'
    factor_si_to_unit140 = ET.SubElement(unit140, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit140.text = '1000000000000'
    offset_si_to_unit140 = ET.SubElement(unit140, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit140.text = '0'
    physical_dimension_ref140 = ET.SubElement(unit140, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref140.text = 'LenNeg2MNeg1Ti4I2'
    physical_dimension_ref140.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit141 = ET.SubElement(elements3, 'UNIT')
    short_name224 = ET.SubElement(unit141, 'SHORT-NAME')
    short_name224.text = 'PicoSec'
    long_name219 = ET.SubElement(unit141, 'LONG-NAME')
    l_4219 = ET.SubElement(long_name219, 'L-4')
    l_4219.text = 'Picosecond'
    l_4219.attrib = {'L': 'EN'}
    display_name141 = ET.SubElement(unit141, 'DISPLAY-NAME')
    display_name141.text = 'ps'
    factor_si_to_unit141 = ET.SubElement(unit141, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit141.text = '1000000000000'
    offset_si_to_unit141 = ET.SubElement(unit141, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit141.text = '0'
    physical_dimension_ref141 = ET.SubElement(unit141, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref141.text = 'Ti1'
    physical_dimension_ref141.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit142 = ET.SubElement(elements3, 'UNIT')
    short_name225 = ET.SubElement(unit142, 'SHORT-NAME')
    short_name225.text = 'Ppm'
    long_name220 = ET.SubElement(unit142, 'LONG-NAME')
    l_4220 = ET.SubElement(long_name220, 'L-4')
    l_4220.text = 'Parts Per Million'
    l_4220.attrib = {'L': 'EN'}
    display_name142 = ET.SubElement(unit142, 'DISPLAY-NAME')
    display_name142.text = 'ppm'
    factor_si_to_unit142 = ET.SubElement(unit142, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit142.text = '1000000'
    offset_si_to_unit142 = ET.SubElement(unit142, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit142.text = '0'
    physical_dimension_ref142 = ET.SubElement(unit142, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref142.text = 'NoDimension_1'
    physical_dimension_ref142.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit143 = ET.SubElement(elements3, 'UNIT')
    short_name226 = ET.SubElement(unit143, 'SHORT-NAME')
    short_name226.text = 'Rad'
    long_name221 = ET.SubElement(unit143, 'LONG-NAME')
    l_4221 = ET.SubElement(long_name221, 'L-4')
    l_4221.text = 'Radian'
    l_4221.attrib = {'L': 'EN'}
    display_name143 = ET.SubElement(unit143, 'DISPLAY-NAME')
    display_name143.text = 'rad'
    factor_si_to_unit143 = ET.SubElement(unit143, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit143.text = '6.28318530717958'
    offset_si_to_unit143 = ET.SubElement(unit143, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit143.text = '0'
    physical_dimension_ref143 = ET.SubElement(unit143, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref143.text = 'NoDimension_2'
    physical_dimension_ref143.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit144 = ET.SubElement(elements3, 'UNIT')
    short_name227 = ET.SubElement(unit144, 'SHORT-NAME')
    short_name227.text = 'RadPerSec'
    long_name222 = ET.SubElement(unit144, 'LONG-NAME')
    l_4222 = ET.SubElement(long_name222, 'L-4')
    l_4222.text = 'Radian Per Second'
    l_4222.attrib = {'L': 'EN'}
    display_name144 = ET.SubElement(unit144, 'DISPLAY-NAME')
    display_name144.text = 'rad/s'
    factor_si_to_unit144 = ET.SubElement(unit144, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit144.text = '6.28318530717958'
    offset_si_to_unit144 = ET.SubElement(unit144, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit144.text = '0'
    physical_dimension_ref144 = ET.SubElement(unit144, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref144.text = 'TiNeg1_2'
    physical_dimension_ref144.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit145 = ET.SubElement(elements3, 'UNIT')
    short_name228 = ET.SubElement(unit145, 'SHORT-NAME')
    short_name228.text = 'RadPerSecSqd'
    long_name223 = ET.SubElement(unit145, 'LONG-NAME')
    l_4223 = ET.SubElement(long_name223, 'L-4')
    l_4223.text = 'Radian Per Square Second'
    l_4223.attrib = {'L': 'EN'}
    display_name145 = ET.SubElement(unit145, 'DISPLAY-NAME')
    display_name145.text = 'rad/(s^2)'
    factor_si_to_unit145 = ET.SubElement(unit145, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit145.text = '6.28318530717958'
    offset_si_to_unit145 = ET.SubElement(unit145, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit145.text = '0'
    physical_dimension_ref145 = ET.SubElement(unit145, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref145.text = 'TiNeg2'
    physical_dimension_ref145.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit146 = ET.SubElement(elements3, 'UNIT')
    short_name229 = ET.SubElement(unit146, 'SHORT-NAME')
    short_name229.text = 'Rpm'
    long_name224 = ET.SubElement(unit146, 'LONG-NAME')
    l_4224 = ET.SubElement(long_name224, 'L-4')
    l_4224.text = 'Revolutions Per Minute'
    l_4224.attrib = {'L': 'EN'}
    display_name146 = ET.SubElement(unit146, 'DISPLAY-NAME')
    display_name146.text = 'rpm'
    factor_si_to_unit146 = ET.SubElement(unit146, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit146.text = '60'
    offset_si_to_unit146 = ET.SubElement(unit146, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit146.text = '0'
    physical_dimension_ref146 = ET.SubElement(unit146, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref146.text = 'TiNeg1_2'
    physical_dimension_ref146.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit147 = ET.SubElement(elements3, 'UNIT')
    short_name230 = ET.SubElement(unit147, 'SHORT-NAME')
    short_name230.text = 'RpmPerSec'
    long_name225 = ET.SubElement(unit147, 'LONG-NAME')
    l_4225 = ET.SubElement(long_name225, 'L-4')
    l_4225.text = 'Revolutions Per Minute Per Second'
    l_4225.attrib = {'L': 'EN'}
    display_name147 = ET.SubElement(unit147, 'DISPLAY-NAME')
    display_name147.text = 'rpm/s'
    factor_si_to_unit147 = ET.SubElement(unit147, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit147.text = '60'
    offset_si_to_unit147 = ET.SubElement(unit147, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit147.text = '0'
    physical_dimension_ref147 = ET.SubElement(unit147, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref147.text = 'TiNeg2'
    physical_dimension_ref147.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit148 = ET.SubElement(elements3, 'UNIT')
    short_name231 = ET.SubElement(unit148, 'SHORT-NAME')
    short_name231.text = 'S'
    long_name226 = ET.SubElement(unit148, 'LONG-NAME')
    l_4226 = ET.SubElement(long_name226, 'L-4')
    l_4226.text = 'Siemens'
    l_4226.attrib = {'L': 'EN'}
    display_name148 = ET.SubElement(unit148, 'DISPLAY-NAME')
    display_name148.text = 'S'
    factor_si_to_unit148 = ET.SubElement(unit148, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit148.text = '1'
    offset_si_to_unit148 = ET.SubElement(unit148, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit148.text = '0'
    physical_dimension_ref148 = ET.SubElement(unit148, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref148.text = 'LenNeg2MNeg1Ti3I2'
    physical_dimension_ref148.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit149 = ET.SubElement(elements3, 'UNIT')
    short_name232 = ET.SubElement(unit149, 'SHORT-NAME')
    short_name232.text = 'SPerMtr'
    long_name227 = ET.SubElement(unit149, 'LONG-NAME')
    l_4227 = ET.SubElement(long_name227, 'L-4')
    l_4227.text = 'Siemens Per Meter'
    l_4227.attrib = {'L': 'EN'}
    display_name149 = ET.SubElement(unit149, 'DISPLAY-NAME')
    display_name149.text = 'S/m'
    factor_si_to_unit149 = ET.SubElement(unit149, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit149.text = '1'
    offset_si_to_unit149 = ET.SubElement(unit149, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit149.text = '0'
    physical_dimension_ref149 = ET.SubElement(unit149, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref149.text = 'LenNeg3MNeg1Ti3I2'
    physical_dimension_ref149.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit150 = ET.SubElement(elements3, 'UNIT')
    short_name233 = ET.SubElement(unit150, 'SHORT-NAME')
    short_name233.text = 'SPerMtrPerSec'
    long_name228 = ET.SubElement(unit150, 'LONG-NAME')
    l_4228 = ET.SubElement(long_name228, 'L-4')
    l_4228.text = 'Siemens Per Meter Per Second'
    l_4228.attrib = {'L': 'EN'}
    display_name150 = ET.SubElement(unit150, 'DISPLAY-NAME')
    display_name150.text = 'S/(m*s)'
    factor_si_to_unit150 = ET.SubElement(unit150, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit150.text = '1'
    offset_si_to_unit150 = ET.SubElement(unit150, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit150.text = '0'
    physical_dimension_ref150 = ET.SubElement(unit150, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref150.text = 'LenNeg3MNeg1Ti2I2'
    physical_dimension_ref150.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit151 = ET.SubElement(elements3, 'UNIT')
    short_name234 = ET.SubElement(unit151, 'SHORT-NAME')
    short_name234.text = 'Sec'
    long_name229 = ET.SubElement(unit151, 'LONG-NAME')
    l_4229 = ET.SubElement(long_name229, 'L-4')
    l_4229.text = 'Second'
    l_4229.attrib = {'L': 'EN'}
    display_name151 = ET.SubElement(unit151, 'DISPLAY-NAME')
    display_name151.text = 's'
    factor_si_to_unit151 = ET.SubElement(unit151, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit151.text = '1'
    offset_si_to_unit151 = ET.SubElement(unit151, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit151.text = '0'
    physical_dimension_ref151 = ET.SubElement(unit151, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref151.text = 'Ti1'
    physical_dimension_ref151.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit152 = ET.SubElement(elements3, 'UNIT')
    short_name235 = ET.SubElement(unit152, 'SHORT-NAME')
    short_name235.text = 'Tesla'
    long_name230 = ET.SubElement(unit152, 'LONG-NAME')
    l_4230 = ET.SubElement(long_name230, 'L-4')
    l_4230.text = 'Tesla'
    l_4230.attrib = {'L': 'EN'}
    display_name152 = ET.SubElement(unit152, 'DISPLAY-NAME')
    display_name152.text = 'T'
    factor_si_to_unit152 = ET.SubElement(unit152, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit152.text = '1'
    offset_si_to_unit152 = ET.SubElement(unit152, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit152.text = '0'
    physical_dimension_ref152 = ET.SubElement(unit152, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref152.text = 'M1TiNeg2INeg1'
    physical_dimension_ref152.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit153 = ET.SubElement(elements3, 'UNIT')
    short_name236 = ET.SubElement(unit153, 'SHORT-NAME')
    short_name236.text = 'Tonne'
    long_name231 = ET.SubElement(unit153, 'LONG-NAME')
    l_4231 = ET.SubElement(long_name231, 'L-4')
    l_4231.text = 'Tonne'
    l_4231.attrib = {'L': 'EN'}
    display_name153 = ET.SubElement(unit153, 'DISPLAY-NAME')
    display_name153.text = 't'
    factor_si_to_unit153 = ET.SubElement(unit153, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit153.text = '0.001'
    offset_si_to_unit153 = ET.SubElement(unit153, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit153.text = '0'
    physical_dimension_ref153 = ET.SubElement(unit153, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref153.text = 'M1'
    physical_dimension_ref153.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit154 = ET.SubElement(elements3, 'UNIT')
    short_name237 = ET.SubElement(unit154, 'SHORT-NAME')
    short_name237.text = 'Volt'
    long_name232 = ET.SubElement(unit154, 'LONG-NAME')
    l_4232 = ET.SubElement(long_name232, 'L-4')
    l_4232.text = 'Volt'
    l_4232.attrib = {'L': 'EN'}
    display_name154 = ET.SubElement(unit154, 'DISPLAY-NAME')
    display_name154.text = 'V'
    factor_si_to_unit154 = ET.SubElement(unit154, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit154.text = '1'
    offset_si_to_unit154 = ET.SubElement(unit154, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit154.text = '0'
    physical_dimension_ref154 = ET.SubElement(unit154, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref154.text = 'Len2M1TiNeg3INeg1'
    physical_dimension_ref154.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit155 = ET.SubElement(elements3, 'UNIT')
    short_name238 = ET.SubElement(unit155, 'SHORT-NAME')
    short_name238.text = 'VoltPerMilliSec'
    long_name233 = ET.SubElement(unit155, 'LONG-NAME')
    l_4233 = ET.SubElement(long_name233, 'L-4')
    l_4233.text = 'Volt Per Millisecond'
    l_4233.attrib = {'L': 'EN'}
    display_name155 = ET.SubElement(unit155, 'DISPLAY-NAME')
    display_name155.text = 'V/ms'
    factor_si_to_unit155 = ET.SubElement(unit155, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit155.text = '0.001'
    offset_si_to_unit155 = ET.SubElement(unit155, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit155.text = '0'
    physical_dimension_ref155 = ET.SubElement(unit155, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref155.text = 'Len2M1TiNeg4INeg1'
    physical_dimension_ref155.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit156 = ET.SubElement(elements3, 'UNIT')
    short_name239 = ET.SubElement(unit156, 'SHORT-NAME')
    short_name239.text = 'VoltPerMtr'
    long_name234 = ET.SubElement(unit156, 'LONG-NAME')
    l_4234 = ET.SubElement(long_name234, 'L-4')
    l_4234.text = 'Volt Per Meter'
    l_4234.attrib = {'L': 'EN'}
    display_name156 = ET.SubElement(unit156, 'DISPLAY-NAME')
    display_name156.text = 'V/m'
    factor_si_to_unit156 = ET.SubElement(unit156, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit156.text = '1'
    offset_si_to_unit156 = ET.SubElement(unit156, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit156.text = '0'
    physical_dimension_ref156 = ET.SubElement(unit156, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref156.text = 'Len1M1TiNeg3INeg1'
    physical_dimension_ref156.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit157 = ET.SubElement(elements3, 'UNIT')
    short_name240 = ET.SubElement(unit157, 'SHORT-NAME')
    short_name240.text = 'VoltPerSec'
    long_name235 = ET.SubElement(unit157, 'LONG-NAME')
    l_4235 = ET.SubElement(long_name235, 'L-4')
    l_4235.text = 'Volt Per Second'
    l_4235.attrib = {'L': 'EN'}
    display_name157 = ET.SubElement(unit157, 'DISPLAY-NAME')
    display_name157.text = 'V/s'
    factor_si_to_unit157 = ET.SubElement(unit157, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit157.text = '1'
    offset_si_to_unit157 = ET.SubElement(unit157, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit157.text = '0'
    physical_dimension_ref157 = ET.SubElement(unit157, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref157.text = 'Len2M1TiNeg4INeg1'
    physical_dimension_ref157.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit158 = ET.SubElement(elements3, 'UNIT')
    short_name241 = ET.SubElement(unit158, 'SHORT-NAME')
    short_name241.text = 'Watt'
    long_name236 = ET.SubElement(unit158, 'LONG-NAME')
    l_4236 = ET.SubElement(long_name236, 'L-4')
    l_4236.text = 'Watt'
    l_4236.attrib = {'L': 'EN'}
    display_name158 = ET.SubElement(unit158, 'DISPLAY-NAME')
    display_name158.text = 'W'
    factor_si_to_unit158 = ET.SubElement(unit158, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit158.text = '1'
    offset_si_to_unit158 = ET.SubElement(unit158, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit158.text = '0'
    physical_dimension_ref158 = ET.SubElement(unit158, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref158.text = 'Len2M1TiNeg3_1'
    physical_dimension_ref158.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit159 = ET.SubElement(elements3, 'UNIT')
    short_name242 = ET.SubElement(unit159, 'SHORT-NAME')
    short_name242.text = 'WattPerKelvinPerMtrSqd'
    long_name237 = ET.SubElement(unit159, 'LONG-NAME')
    l_4237 = ET.SubElement(long_name237, 'L-4')
    l_4237.text = 'Watt Per Kelvin Per Square Meter'
    l_4237.attrib = {'L': 'EN'}
    display_name159 = ET.SubElement(unit159, 'DISPLAY-NAME')
    display_name159.text = 'W/(K*m^2)'
    factor_si_to_unit159 = ET.SubElement(unit159, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit159.text = '1'
    offset_si_to_unit159 = ET.SubElement(unit159, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit159.text = '0'
    physical_dimension_ref159 = ET.SubElement(unit159, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref159.text = 'M1TiNeg3TNeg1'
    physical_dimension_ref159.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit160 = ET.SubElement(elements3, 'UNIT')
    short_name243 = ET.SubElement(unit160, 'SHORT-NAME')
    short_name243.text = 'WattPerMtrPerKelvin'
    long_name238 = ET.SubElement(unit160, 'LONG-NAME')
    l_4238 = ET.SubElement(long_name238, 'L-4')
    l_4238.text = 'Watt Per Meter Per Kelvin'
    l_4238.attrib = {'L': 'EN'}
    display_name160 = ET.SubElement(unit160, 'DISPLAY-NAME')
    display_name160.text = 'W/(m*K)'
    factor_si_to_unit160 = ET.SubElement(unit160, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit160.text = '1'
    offset_si_to_unit160 = ET.SubElement(unit160, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit160.text = '0'
    physical_dimension_ref160 = ET.SubElement(unit160, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref160.text = 'Len1M1TiNeg3TNeg1'
    physical_dimension_ref160.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit161 = ET.SubElement(elements3, 'UNIT')
    short_name244 = ET.SubElement(unit161, 'SHORT-NAME')
    short_name244.text = 'WattPerSec'
    long_name239 = ET.SubElement(unit161, 'LONG-NAME')
    l_4239 = ET.SubElement(long_name239, 'L-4')
    l_4239.text = 'Watt Per Second'
    l_4239.attrib = {'L': 'EN'}
    display_name161 = ET.SubElement(unit161, 'DISPLAY-NAME')
    display_name161.text = 'W/s'
    factor_si_to_unit161 = ET.SubElement(unit161, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit161.text = '1'
    offset_si_to_unit161 = ET.SubElement(unit161, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit161.text = '0'
    physical_dimension_ref161 = ET.SubElement(unit161, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref161.text = 'Len2M1TiNeg4'
    physical_dimension_ref161.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit162 = ET.SubElement(elements3, 'UNIT')
    short_name245 = ET.SubElement(unit162, 'SHORT-NAME')
    short_name245.text = 'WattSec'
    long_name240 = ET.SubElement(unit162, 'LONG-NAME')
    l_4240 = ET.SubElement(long_name240, 'L-4')
    l_4240.text = 'Wattsecond'
    l_4240.attrib = {'L': 'EN'}
    display_name162 = ET.SubElement(unit162, 'DISPLAY-NAME')
    display_name162.text = 'Ws'
    factor_si_to_unit162 = ET.SubElement(unit162, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit162.text = '1'
    offset_si_to_unit162 = ET.SubElement(unit162, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit162.text = '0'
    physical_dimension_ref162 = ET.SubElement(unit162, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref162.text = 'Len2M1TiNeg2_1'
    physical_dimension_ref162.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit163 = ET.SubElement(elements3, 'UNIT')
    short_name246 = ET.SubElement(unit163, 'SHORT-NAME')
    short_name246.text = 'Wb'
    long_name241 = ET.SubElement(unit163, 'LONG-NAME')
    l_4241 = ET.SubElement(long_name241, 'L-4')
    l_4241.text = 'Weber'
    l_4241.attrib = {'L': 'EN'}
    display_name163 = ET.SubElement(unit163, 'DISPLAY-NAME')
    display_name163.text = 'Wb'
    factor_si_to_unit163 = ET.SubElement(unit163, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit163.text = '1'
    offset_si_to_unit163 = ET.SubElement(unit163, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit163.text = '0'
    physical_dimension_ref163 = ET.SubElement(unit163, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref163.text = 'Len2M1TiNeg2INeg1'
    physical_dimension_ref163.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    unit164 = ET.SubElement(elements3, 'UNIT')
    short_name247 = ET.SubElement(unit164, 'SHORT-NAME')
    short_name247.text = 'Yr'
    long_name242 = ET.SubElement(unit164, 'LONG-NAME')
    l_4242 = ET.SubElement(long_name242, 'L-4')
    l_4242.text = 'Year'
    l_4242.attrib = {'L': 'EN'}
    display_name164 = ET.SubElement(unit164, 'DISPLAY-NAME')
    display_name164.text = 'a'
    factor_si_to_unit164 = ET.SubElement(unit164, 'FACTOR-SI-TO-UNIT')
    factor_si_to_unit164.text = '3.16880878140289E-08'
    offset_si_to_unit164 = ET.SubElement(unit164, 'OFFSET-SI-TO-UNIT')
    offset_si_to_unit164.text = '0'
    physical_dimension_ref164 = ET.SubElement(unit164, 'PHYSICAL-DIMENSION-REF')
    physical_dimension_ref164.text = 'Ti1'
    physical_dimension_ref164.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
    ar_package7 = ET.SubElement(ar_packages2, 'AR-PACKAGE')
    short_name248 = ET.SubElement(ar_package7, 'SHORT-NAME')
    short_name248.text = 'AUTOSAR_Platform'
    ar_packages5 = ET.SubElement(ar_package7, 'AR-PACKAGES')
    ar_package8 = ET.SubElement(ar_packages5, 'AR-PACKAGE')
    short_name249 = ET.SubElement(ar_package8, 'SHORT-NAME')
    short_name249.text = 'BaseTypes'
    category5 = ET.SubElement(ar_package8, 'CATEGORY')
    category5.text = 'STANDARD'
    elements4 = ET.SubElement(ar_package8, 'ELEMENTS')
    sw_base_type2 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name250 = ET.SubElement(sw_base_type2, 'SHORT-NAME')
    short_name250.text = 'boolean'
    long_name243 = ET.SubElement(sw_base_type2, 'LONG-NAME')
    l_4243 = ET.SubElement(long_name243, 'L-4')
    l_4243.text = 'boolean'
    l_4243.attrib = {'L': 'EN'}
    category6 = ET.SubElement(sw_base_type2, 'CATEGORY')
    category6.text = 'FIXED_LENGTH'
    base_type_size1 = ET.SubElement(sw_base_type2, 'BASE-TYPE-SIZE')
    base_type_size1.text = '8'
    base_type_encoding2 = ET.SubElement(sw_base_type2, 'BASE-TYPE-ENCODING')
    base_type_encoding2.text = 'BOOLEAN'
    sw_base_type3 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name251 = ET.SubElement(sw_base_type3, 'SHORT-NAME')
    short_name251.text = 'float32'
    long_name244 = ET.SubElement(sw_base_type3, 'LONG-NAME')
    l_4244 = ET.SubElement(long_name244, 'L-4')
    l_4244.text = 'float32'
    l_4244.attrib = {'L': 'EN'}
    category7 = ET.SubElement(sw_base_type3, 'CATEGORY')
    category7.text = 'FIXED_LENGTH'
    base_type_size2 = ET.SubElement(sw_base_type3, 'BASE-TYPE-SIZE')
    base_type_size2.text = '32'
    base_type_encoding3 = ET.SubElement(sw_base_type3, 'BASE-TYPE-ENCODING')
    base_type_encoding3.text = 'IEEE754'
    sw_base_type4 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name252 = ET.SubElement(sw_base_type4, 'SHORT-NAME')
    short_name252.text = 'float64'
    long_name245 = ET.SubElement(sw_base_type4, 'LONG-NAME')
    l_4245 = ET.SubElement(long_name245, 'L-4')
    l_4245.text = 'float64'
    l_4245.attrib = {'L': 'EN'}
    category8 = ET.SubElement(sw_base_type4, 'CATEGORY')
    category8.text = 'FIXED_LENGTH'
    base_type_size3 = ET.SubElement(sw_base_type4, 'BASE-TYPE-SIZE')
    base_type_size3.text = '64'
    base_type_encoding4 = ET.SubElement(sw_base_type4, 'BASE-TYPE-ENCODING')
    base_type_encoding4.text = 'IEEE754'
    sw_base_type5 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name253 = ET.SubElement(sw_base_type5, 'SHORT-NAME')
    short_name253.text = 'sint16'
    long_name246 = ET.SubElement(sw_base_type5, 'LONG-NAME')
    l_4246 = ET.SubElement(long_name246, 'L-4')
    l_4246.text = 'sint16'
    l_4246.attrib = {'L': 'EN'}
    category9 = ET.SubElement(sw_base_type5, 'CATEGORY')
    category9.text = 'FIXED_LENGTH'
    base_type_size4 = ET.SubElement(sw_base_type5, 'BASE-TYPE-SIZE')
    base_type_size4.text = '16'
    base_type_encoding5 = ET.SubElement(sw_base_type5, 'BASE-TYPE-ENCODING')
    base_type_encoding5.text = '2C'
    sw_base_type6 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name254 = ET.SubElement(sw_base_type6, 'SHORT-NAME')
    short_name254.text = 'sint32'
    long_name247 = ET.SubElement(sw_base_type6, 'LONG-NAME')
    l_4247 = ET.SubElement(long_name247, 'L-4')
    l_4247.text = 'sint32'
    l_4247.attrib = {'L': 'EN'}
    category10 = ET.SubElement(sw_base_type6, 'CATEGORY')
    category10.text = 'FIXED_LENGTH'
    base_type_size5 = ET.SubElement(sw_base_type6, 'BASE-TYPE-SIZE')
    base_type_size5.text = '32'
    base_type_encoding6 = ET.SubElement(sw_base_type6, 'BASE-TYPE-ENCODING')
    base_type_encoding6.text = '2C'
    sw_base_type7 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name255 = ET.SubElement(sw_base_type7, 'SHORT-NAME')
    short_name255.text = 'sint64'
    long_name248 = ET.SubElement(sw_base_type7, 'LONG-NAME')
    l_4248 = ET.SubElement(long_name248, 'L-4')
    l_4248.text = 'sint64'
    l_4248.attrib = {'L': 'EN'}
    category11 = ET.SubElement(sw_base_type7, 'CATEGORY')
    category11.text = 'FIXED_LENGTH'
    base_type_size6 = ET.SubElement(sw_base_type7, 'BASE-TYPE-SIZE')
    base_type_size6.text = '64'
    base_type_encoding7 = ET.SubElement(sw_base_type7, 'BASE-TYPE-ENCODING')
    base_type_encoding7.text = '2C'
    sw_base_type8 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name256 = ET.SubElement(sw_base_type8, 'SHORT-NAME')
    short_name256.text = 'sint8'
    long_name249 = ET.SubElement(sw_base_type8, 'LONG-NAME')
    l_4249 = ET.SubElement(long_name249, 'L-4')
    l_4249.text = 'sint8'
    l_4249.attrib = {'L': 'EN'}
    category12 = ET.SubElement(sw_base_type8, 'CATEGORY')
    category12.text = 'FIXED_LENGTH'
    base_type_size7 = ET.SubElement(sw_base_type8, 'BASE-TYPE-SIZE')
    base_type_size7.text = '8'
    base_type_encoding8 = ET.SubElement(sw_base_type8, 'BASE-TYPE-ENCODING')
    base_type_encoding8.text = '2C'
    sw_base_type9 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name257 = ET.SubElement(sw_base_type9, 'SHORT-NAME')
    short_name257.text = 'uint16'
    long_name250 = ET.SubElement(sw_base_type9, 'LONG-NAME')
    l_4250 = ET.SubElement(long_name250, 'L-4')
    l_4250.text = 'uint16'
    l_4250.attrib = {'L': 'EN'}
    category13 = ET.SubElement(sw_base_type9, 'CATEGORY')
    category13.text = 'FIXED_LENGTH'
    base_type_size8 = ET.SubElement(sw_base_type9, 'BASE-TYPE-SIZE')
    base_type_size8.text = '16'
    base_type_encoding9 = ET.SubElement(sw_base_type9, 'BASE-TYPE-ENCODING')
    base_type_encoding9.text = 'NONE'
    sw_base_type10 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name258 = ET.SubElement(sw_base_type10, 'SHORT-NAME')
    short_name258.text = 'uint32'
    long_name251 = ET.SubElement(sw_base_type10, 'LONG-NAME')
    l_4251 = ET.SubElement(long_name251, 'L-4')
    l_4251.text = 'uint32'
    l_4251.attrib = {'L': 'EN'}
    category14 = ET.SubElement(sw_base_type10, 'CATEGORY')
    category14.text = 'FIXED_LENGTH'
    base_type_size9 = ET.SubElement(sw_base_type10, 'BASE-TYPE-SIZE')
    base_type_size9.text = '32'
    base_type_encoding10 = ET.SubElement(sw_base_type10, 'BASE-TYPE-ENCODING')
    base_type_encoding10.text = 'NONE'
    sw_base_type11 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name259 = ET.SubElement(sw_base_type11, 'SHORT-NAME')
    short_name259.text = 'uint64'
    long_name252 = ET.SubElement(sw_base_type11, 'LONG-NAME')
    l_4252 = ET.SubElement(long_name252, 'L-4')
    l_4252.text = 'uint64'
    l_4252.attrib = {'L': 'EN'}
    category15 = ET.SubElement(sw_base_type11, 'CATEGORY')
    category15.text = 'FIXED_LENGTH'
    base_type_size10 = ET.SubElement(sw_base_type11, 'BASE-TYPE-SIZE')
    base_type_size10.text = '64'
    base_type_encoding11 = ET.SubElement(sw_base_type11, 'BASE-TYPE-ENCODING')
    base_type_encoding11.text = 'NONE'
    sw_base_type12 = ET.SubElement(elements4, 'SW-BASE-TYPE')
    short_name260 = ET.SubElement(sw_base_type12, 'SHORT-NAME')
    short_name260.text = 'uint8'
    long_name253 = ET.SubElement(sw_base_type12, 'LONG-NAME')
    l_4253 = ET.SubElement(long_name253, 'L-4')
    l_4253.text = 'uint8'
    l_4253.attrib = {'L': 'EN'}
    category16 = ET.SubElement(sw_base_type12, 'CATEGORY')
    category16.text = 'FIXED_LENGTH'
    base_type_size11 = ET.SubElement(sw_base_type12, 'BASE-TYPE-SIZE')
    base_type_size11.text = '8'
    base_type_encoding12 = ET.SubElement(sw_base_type12, 'BASE-TYPE-ENCODING')
    base_type_encoding12.text = 'NONE'
    ar_package9 = ET.SubElement(ar_packages5, 'AR-PACKAGE')
    short_name261 = ET.SubElement(ar_package9, 'SHORT-NAME')
    short_name261.text = 'CompuMethods'
    category17 = ET.SubElement(ar_package9, 'CATEGORY')
    category17.text = 'STANDARD'
    elements5 = ET.SubElement(ar_package9, 'ELEMENTS')
    compu_method1 = ET.SubElement(elements5, 'COMPU-METHOD')
    short_name262 = ET.SubElement(compu_method1, 'SHORT-NAME')
    short_name262.text = 'boolean'
    category18 = ET.SubElement(compu_method1, 'CATEGORY')
    category18.text = 'TEXTTABLE'
    compu_internal_to_phys1 = ET.SubElement(compu_method1, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales1 = ET.SubElement(compu_internal_to_phys1, 'COMPU-SCALES')
    compu_scale1 = ET.SubElement(compu_scales1, 'COMPU-SCALE')
    lower_limit1 = ET.SubElement(compu_scale1, 'LOWER-LIMIT')
    lower_limit1.text = '0'
    lower_limit1.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit1 = ET.SubElement(compu_scale1, 'UPPER-LIMIT')
    upper_limit1.text = '0'
    upper_limit1.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const1 = ET.SubElement(compu_scale1, 'COMPU-CONST')
    vt1 = ET.SubElement(compu_const1, 'VT')
    vt1.text = 'FALSE'
    compu_scale2 = ET.SubElement(compu_scales1, 'COMPU-SCALE')
    lower_limit2 = ET.SubElement(compu_scale2, 'LOWER-LIMIT')
    lower_limit2.text = '1'
    lower_limit2.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit2 = ET.SubElement(compu_scale2, 'UPPER-LIMIT')
    upper_limit2.text = '1'
    upper_limit2.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const2 = ET.SubElement(compu_scale2, 'COMPU-CONST')
    vt2 = ET.SubElement(compu_const2, 'VT')
    vt2.text = 'TRUE'
    ar_package10 = ET.SubElement(ar_packages5, 'AR-PACKAGE')
    short_name263 = ET.SubElement(ar_package10, 'SHORT-NAME')
    short_name263.text = 'DataConstrs'
    category19 = ET.SubElement(ar_package10, 'CATEGORY')
    category19.text = 'STANDARD'
    elements6 = ET.SubElement(ar_package10, 'ELEMENTS')
    data_constr1 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name264 = ET.SubElement(data_constr1, 'SHORT-NAME')
    short_name264.text = 'boolean'
    data_constr_rules1 = ET.SubElement(data_constr1, 'DATA-CONSTR-RULES')
    data_constr_rule1 = ET.SubElement(data_constr_rules1, 'DATA-CONSTR-RULE')
    internal_constrs1 = ET.SubElement(data_constr_rule1, 'INTERNAL-CONSTRS')
    lower_limit3 = ET.SubElement(internal_constrs1, 'LOWER-LIMIT')
    lower_limit3.text = '0'
    upper_limit3 = ET.SubElement(internal_constrs1, 'UPPER-LIMIT')
    upper_limit3.text = '1'
    data_constr2 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name265 = ET.SubElement(data_constr2, 'SHORT-NAME')
    short_name265.text = 'float32'
    data_constr_rules2 = ET.SubElement(data_constr2, 'DATA-CONSTR-RULES')
    data_constr_rule2 = ET.SubElement(data_constr_rules2, 'DATA-CONSTR-RULE')
    internal_constrs2 = ET.SubElement(data_constr_rule2, 'INTERNAL-CONSTRS')
    lower_limit4 = ET.SubElement(internal_constrs2, 'LOWER-LIMIT')
    lower_limit4.text = '-3.40282347e+38'
    upper_limit4 = ET.SubElement(internal_constrs2, 'UPPER-LIMIT')
    upper_limit4.text = '3.40282347e+38'
    data_constr3 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name266 = ET.SubElement(data_constr3, 'SHORT-NAME')
    short_name266.text = 'float64'
    data_constr_rules3 = ET.SubElement(data_constr3, 'DATA-CONSTR-RULES')
    data_constr_rule3 = ET.SubElement(data_constr_rules3, 'DATA-CONSTR-RULE')
    internal_constrs3 = ET.SubElement(data_constr_rule3, 'INTERNAL-CONSTRS')
    lower_limit5 = ET.SubElement(internal_constrs3, 'LOWER-LIMIT')
    lower_limit5.text = '-1.7976931348623157e+308'
    upper_limit5 = ET.SubElement(internal_constrs3, 'UPPER-LIMIT')
    upper_limit5.text = '1.7976931348623157e+308'
    data_constr4 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name267 = ET.SubElement(data_constr4, 'SHORT-NAME')
    short_name267.text = 'sint16'
    data_constr_rules4 = ET.SubElement(data_constr4, 'DATA-CONSTR-RULES')
    data_constr_rule4 = ET.SubElement(data_constr_rules4, 'DATA-CONSTR-RULE')
    internal_constrs4 = ET.SubElement(data_constr_rule4, 'INTERNAL-CONSTRS')
    lower_limit6 = ET.SubElement(internal_constrs4, 'LOWER-LIMIT')
    lower_limit6.text = '-32768'
    upper_limit6 = ET.SubElement(internal_constrs4, 'UPPER-LIMIT')
    upper_limit6.text = '+32767'
    data_constr5 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name268 = ET.SubElement(data_constr5, 'SHORT-NAME')
    short_name268.text = 'sint16_least'
    data_constr_rules5 = ET.SubElement(data_constr5, 'DATA-CONSTR-RULES')
    data_constr_rule5 = ET.SubElement(data_constr_rules5, 'DATA-CONSTR-RULE')
    internal_constrs5 = ET.SubElement(data_constr_rule5, 'INTERNAL-CONSTRS')
    lower_limit7 = ET.SubElement(internal_constrs5, 'LOWER-LIMIT')
    lower_limit7.text = '-32768'
    upper_limit7 = ET.SubElement(internal_constrs5, 'UPPER-LIMIT')
    upper_limit7.text = '+32767'
    data_constr6 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name269 = ET.SubElement(data_constr6, 'SHORT-NAME')
    short_name269.text = 'sint32'
    data_constr_rules6 = ET.SubElement(data_constr6, 'DATA-CONSTR-RULES')
    data_constr_rule6 = ET.SubElement(data_constr_rules6, 'DATA-CONSTR-RULE')
    internal_constrs6 = ET.SubElement(data_constr_rule6, 'INTERNAL-CONSTRS')
    lower_limit8 = ET.SubElement(internal_constrs6, 'LOWER-LIMIT')
    lower_limit8.text = '-2147483648'
    upper_limit8 = ET.SubElement(internal_constrs6, 'UPPER-LIMIT')
    upper_limit8.text = '+2147483647'
    data_constr7 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name270 = ET.SubElement(data_constr7, 'SHORT-NAME')
    short_name270.text = 'sint32_least'
    data_constr_rules7 = ET.SubElement(data_constr7, 'DATA-CONSTR-RULES')
    data_constr_rule7 = ET.SubElement(data_constr_rules7, 'DATA-CONSTR-RULE')
    internal_constrs7 = ET.SubElement(data_constr_rule7, 'INTERNAL-CONSTRS')
    lower_limit9 = ET.SubElement(internal_constrs7, 'LOWER-LIMIT')
    lower_limit9.text = '-2147483648'
    upper_limit9 = ET.SubElement(internal_constrs7, 'UPPER-LIMIT')
    upper_limit9.text = '+2147483647'
    data_constr8 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name271 = ET.SubElement(data_constr8, 'SHORT-NAME')
    short_name271.text = 'sint64'
    data_constr_rules8 = ET.SubElement(data_constr8, 'DATA-CONSTR-RULES')
    data_constr_rule8 = ET.SubElement(data_constr_rules8, 'DATA-CONSTR-RULE')
    internal_constrs8 = ET.SubElement(data_constr_rule8, 'INTERNAL-CONSTRS')
    lower_limit10 = ET.SubElement(internal_constrs8, 'LOWER-LIMIT')
    lower_limit10.text = '-9223372036854775808'
    upper_limit10 = ET.SubElement(internal_constrs8, 'UPPER-LIMIT')
    upper_limit10.text = '9223372036854775807'
    data_constr9 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name272 = ET.SubElement(data_constr9, 'SHORT-NAME')
    short_name272.text = 'sint8'
    data_constr_rules9 = ET.SubElement(data_constr9, 'DATA-CONSTR-RULES')
    data_constr_rule9 = ET.SubElement(data_constr_rules9, 'DATA-CONSTR-RULE')
    internal_constrs9 = ET.SubElement(data_constr_rule9, 'INTERNAL-CONSTRS')
    lower_limit11 = ET.SubElement(internal_constrs9, 'LOWER-LIMIT')
    lower_limit11.text = '-128'
    upper_limit11 = ET.SubElement(internal_constrs9, 'UPPER-LIMIT')
    upper_limit11.text = '+127'
    data_constr10 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name273 = ET.SubElement(data_constr10, 'SHORT-NAME')
    short_name273.text = 'sint8_least'
    data_constr_rules10 = ET.SubElement(data_constr10, 'DATA-CONSTR-RULES')
    data_constr_rule10 = ET.SubElement(data_constr_rules10, 'DATA-CONSTR-RULE')
    internal_constrs10 = ET.SubElement(data_constr_rule10, 'INTERNAL-CONSTRS')
    lower_limit12 = ET.SubElement(internal_constrs10, 'LOWER-LIMIT')
    lower_limit12.text = '-128'
    upper_limit12 = ET.SubElement(internal_constrs10, 'UPPER-LIMIT')
    upper_limit12.text = '+127'
    data_constr11 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name274 = ET.SubElement(data_constr11, 'SHORT-NAME')
    short_name274.text = 'uint16'
    data_constr_rules11 = ET.SubElement(data_constr11, 'DATA-CONSTR-RULES')
    data_constr_rule11 = ET.SubElement(data_constr_rules11, 'DATA-CONSTR-RULE')
    internal_constrs11 = ET.SubElement(data_constr_rule11, 'INTERNAL-CONSTRS')
    lower_limit13 = ET.SubElement(internal_constrs11, 'LOWER-LIMIT')
    lower_limit13.text = '0'
    upper_limit13 = ET.SubElement(internal_constrs11, 'UPPER-LIMIT')
    upper_limit13.text = '65535'
    data_constr12 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name275 = ET.SubElement(data_constr12, 'SHORT-NAME')
    short_name275.text = 'uint16_least'
    data_constr_rules12 = ET.SubElement(data_constr12, 'DATA-CONSTR-RULES')
    data_constr_rule12 = ET.SubElement(data_constr_rules12, 'DATA-CONSTR-RULE')
    internal_constrs12 = ET.SubElement(data_constr_rule12, 'INTERNAL-CONSTRS')
    lower_limit14 = ET.SubElement(internal_constrs12, 'LOWER-LIMIT')
    lower_limit14.text = '0'
    upper_limit14 = ET.SubElement(internal_constrs12, 'UPPER-LIMIT')
    upper_limit14.text = '65535'
    data_constr13 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name276 = ET.SubElement(data_constr13, 'SHORT-NAME')
    short_name276.text = 'uint32'
    data_constr_rules13 = ET.SubElement(data_constr13, 'DATA-CONSTR-RULES')
    data_constr_rule13 = ET.SubElement(data_constr_rules13, 'DATA-CONSTR-RULE')
    internal_constrs13 = ET.SubElement(data_constr_rule13, 'INTERNAL-CONSTRS')
    lower_limit15 = ET.SubElement(internal_constrs13, 'LOWER-LIMIT')
    lower_limit15.text = '0'
    upper_limit15 = ET.SubElement(internal_constrs13, 'UPPER-LIMIT')
    upper_limit15.text = '4294967295'
    data_constr14 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name277 = ET.SubElement(data_constr14, 'SHORT-NAME')
    short_name277.text = 'uint32_least'
    data_constr_rules14 = ET.SubElement(data_constr14, 'DATA-CONSTR-RULES')
    data_constr_rule14 = ET.SubElement(data_constr_rules14, 'DATA-CONSTR-RULE')
    internal_constrs14 = ET.SubElement(data_constr_rule14, 'INTERNAL-CONSTRS')
    lower_limit16 = ET.SubElement(internal_constrs14, 'LOWER-LIMIT')
    lower_limit16.text = '0'
    upper_limit16 = ET.SubElement(internal_constrs14, 'UPPER-LIMIT')
    upper_limit16.text = '4294967295'
    data_constr15 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name278 = ET.SubElement(data_constr15, 'SHORT-NAME')
    short_name278.text = 'uint64'
    data_constr_rules15 = ET.SubElement(data_constr15, 'DATA-CONSTR-RULES')
    data_constr_rule15 = ET.SubElement(data_constr_rules15, 'DATA-CONSTR-RULE')
    internal_constrs15 = ET.SubElement(data_constr_rule15, 'INTERNAL-CONSTRS')
    lower_limit17 = ET.SubElement(internal_constrs15, 'LOWER-LIMIT')
    lower_limit17.text = '0'
    upper_limit17 = ET.SubElement(internal_constrs15, 'UPPER-LIMIT')
    upper_limit17.text = '18446744073709551615'
    data_constr16 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name279 = ET.SubElement(data_constr16, 'SHORT-NAME')
    short_name279.text = 'uint8'
    data_constr_rules16 = ET.SubElement(data_constr16, 'DATA-CONSTR-RULES')
    data_constr_rule16 = ET.SubElement(data_constr_rules16, 'DATA-CONSTR-RULE')
    internal_constrs16 = ET.SubElement(data_constr_rule16, 'INTERNAL-CONSTRS')
    lower_limit18 = ET.SubElement(internal_constrs16, 'LOWER-LIMIT')
    lower_limit18.text = '0'
    upper_limit18 = ET.SubElement(internal_constrs16, 'UPPER-LIMIT')
    upper_limit18.text = '255'
    data_constr17 = ET.SubElement(elements6, 'DATA-CONSTR')
    short_name280 = ET.SubElement(data_constr17, 'SHORT-NAME')
    short_name280.text = 'uint8_least'
    data_constr_rules17 = ET.SubElement(data_constr17, 'DATA-CONSTR-RULES')
    data_constr_rule17 = ET.SubElement(data_constr_rules17, 'DATA-CONSTR-RULE')
    internal_constrs17 = ET.SubElement(data_constr_rule17, 'INTERNAL-CONSTRS')
    lower_limit19 = ET.SubElement(internal_constrs17, 'LOWER-LIMIT')
    lower_limit19.text = '0'
    upper_limit19 = ET.SubElement(internal_constrs17, 'UPPER-LIMIT')
    upper_limit19.text = '255'
    ar_package11 = ET.SubElement(ar_packages5, 'AR-PACKAGE')
    short_name281 = ET.SubElement(ar_package11, 'SHORT-NAME')
    short_name281.text = 'ImplementationDataTypes'
    category20 = ET.SubElement(ar_package11, 'CATEGORY')
    category20.text = 'STANDARD'
    elements7 = ET.SubElement(ar_package11, 'ELEMENTS')
    implementation_data_type1 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name282 = ET.SubElement(implementation_data_type1, 'SHORT-NAME')
    short_name282.text = 'ConstVoidPtr'
    long_name254 = ET.SubElement(implementation_data_type1, 'LONG-NAME')
    l_4254 = ET.SubElement(long_name254, 'L-4')
    l_4254.text = 'ConstVoidPtr'
    l_4254.attrib = {'L': 'EN'}
    category21 = ET.SubElement(implementation_data_type1, 'CATEGORY')
    category21.text = 'DATA_REFERENCE'
    sw_data_def_props1 = ET.SubElement(implementation_data_type1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants1 = ET.SubElement(sw_data_def_props1, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional1 = ET.SubElement(sw_data_def_props_variants1, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_pointer_target_props1 = ET.SubElement(sw_data_def_props_conditional1, 'SW-POINTER-TARGET-PROPS')
    target_category1 = ET.SubElement(sw_pointer_target_props1, 'TARGET-CATEGORY')
    target_category1.text = 'VALUE'
    sw_data_def_props2 = ET.SubElement(sw_pointer_target_props1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants2 = ET.SubElement(sw_data_def_props2, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional2 = ET.SubElement(sw_data_def_props_variants2, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref1 = ET.SubElement(sw_data_def_props_conditional2, 'BASE-TYPE-REF')
    base_type_ref1.text = '/AUTOSAR/AUTOSAR_GenDef/BaseTypes/void'
    base_type_ref1.attrib = {'DEST': 'SW-BASE-TYPE'}
    sw_impl_policy1 = ET.SubElement(sw_data_def_props_conditional2, 'SW-IMPL-POLICY')
    sw_impl_policy1.text = 'CONST'
    implementation_data_type2 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name283 = ET.SubElement(implementation_data_type2, 'SHORT-NAME')
    short_name283.text = 'VoidPtr'
    long_name255 = ET.SubElement(implementation_data_type2, 'LONG-NAME')
    l_4255 = ET.SubElement(long_name255, 'L-4')
    l_4255.text = 'VoidPtr'
    l_4255.attrib = {'L': 'EN'}
    category22 = ET.SubElement(implementation_data_type2, 'CATEGORY')
    category22.text = 'DATA_REFERENCE'
    sw_data_def_props3 = ET.SubElement(implementation_data_type2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants3 = ET.SubElement(sw_data_def_props3, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional3 = ET.SubElement(sw_data_def_props_variants3, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_pointer_target_props2 = ET.SubElement(sw_data_def_props_conditional3, 'SW-POINTER-TARGET-PROPS')
    target_category2 = ET.SubElement(sw_pointer_target_props2, 'TARGET-CATEGORY')
    target_category2.text = 'VALUE'
    sw_data_def_props4 = ET.SubElement(sw_pointer_target_props2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants4 = ET.SubElement(sw_data_def_props4, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional4 = ET.SubElement(sw_data_def_props_variants4, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref2 = ET.SubElement(sw_data_def_props_conditional4, 'BASE-TYPE-REF')
    base_type_ref2.text = '/AUTOSAR/AUTOSAR_GenDef/BaseTypes/void'
    base_type_ref2.attrib = {'DEST': 'SW-BASE-TYPE'}
    implementation_data_type3 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name284 = ET.SubElement(implementation_data_type3, 'SHORT-NAME')
    short_name284.text = 'boolean'
    long_name256 = ET.SubElement(implementation_data_type3, 'LONG-NAME')
    l_4256 = ET.SubElement(long_name256, 'L-4')
    l_4256.text = 'boolean'
    l_4256.attrib = {'L': 'EN'}
    category23 = ET.SubElement(implementation_data_type3, 'CATEGORY')
    category23.text = 'VALUE'
    sw_data_def_props5 = ET.SubElement(implementation_data_type3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants5 = ET.SubElement(sw_data_def_props5, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional5 = ET.SubElement(sw_data_def_props_variants5, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref3 = ET.SubElement(sw_data_def_props_conditional5, 'BASE-TYPE-REF')
    base_type_ref3.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/boolean'
    base_type_ref3.attrib = {'DEST': 'SW-BASE-TYPE'}
    compu_method_ref1 = ET.SubElement(sw_data_def_props_conditional5, 'COMPU-METHOD-REF')
    compu_method_ref1.text = '/AUTOSAR/AUTOSAR_Platform/CompuMethods/boolean'
    compu_method_ref1.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref1 = ET.SubElement(sw_data_def_props_conditional5, 'DATA-CONSTR-REF')
    data_constr_ref1.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/boolean'
    data_constr_ref1.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type4 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name285 = ET.SubElement(implementation_data_type4, 'SHORT-NAME')
    short_name285.text = 'float32'
    long_name257 = ET.SubElement(implementation_data_type4, 'LONG-NAME')
    l_4257 = ET.SubElement(long_name257, 'L-4')
    l_4257.text = 'float32'
    l_4257.attrib = {'L': 'EN'}
    category24 = ET.SubElement(implementation_data_type4, 'CATEGORY')
    category24.text = 'VALUE'
    sw_data_def_props6 = ET.SubElement(implementation_data_type4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants6 = ET.SubElement(sw_data_def_props6, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional6 = ET.SubElement(sw_data_def_props_variants6, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref4 = ET.SubElement(sw_data_def_props_conditional6, 'BASE-TYPE-REF')
    base_type_ref4.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/float32'
    base_type_ref4.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref2 = ET.SubElement(sw_data_def_props_conditional6, 'DATA-CONSTR-REF')
    data_constr_ref2.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/float32'
    data_constr_ref2.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type5 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name286 = ET.SubElement(implementation_data_type5, 'SHORT-NAME')
    short_name286.text = 'float64'
    long_name258 = ET.SubElement(implementation_data_type5, 'LONG-NAME')
    l_4258 = ET.SubElement(long_name258, 'L-4')
    l_4258.text = 'float64'
    l_4258.attrib = {'L': 'EN'}
    category25 = ET.SubElement(implementation_data_type5, 'CATEGORY')
    category25.text = 'VALUE'
    sw_data_def_props7 = ET.SubElement(implementation_data_type5, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants7 = ET.SubElement(sw_data_def_props7, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional7 = ET.SubElement(sw_data_def_props_variants7, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref5 = ET.SubElement(sw_data_def_props_conditional7, 'BASE-TYPE-REF')
    base_type_ref5.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/float64'
    base_type_ref5.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref3 = ET.SubElement(sw_data_def_props_conditional7, 'DATA-CONSTR-REF')
    data_constr_ref3.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/float64'
    data_constr_ref3.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type6 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name287 = ET.SubElement(implementation_data_type6, 'SHORT-NAME')
    short_name287.text = 'sint16'
    long_name259 = ET.SubElement(implementation_data_type6, 'LONG-NAME')
    l_4259 = ET.SubElement(long_name259, 'L-4')
    l_4259.text = 'sint16'
    l_4259.attrib = {'L': 'EN'}
    category26 = ET.SubElement(implementation_data_type6, 'CATEGORY')
    category26.text = 'VALUE'
    sw_data_def_props8 = ET.SubElement(implementation_data_type6, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants8 = ET.SubElement(sw_data_def_props8, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional8 = ET.SubElement(sw_data_def_props_variants8, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref6 = ET.SubElement(sw_data_def_props_conditional8, 'BASE-TYPE-REF')
    base_type_ref6.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint16'
    base_type_ref6.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref4 = ET.SubElement(sw_data_def_props_conditional8, 'DATA-CONSTR-REF')
    data_constr_ref4.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint16'
    data_constr_ref4.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type7 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name288 = ET.SubElement(implementation_data_type7, 'SHORT-NAME')
    short_name288.text = 'sint16_least'
    long_name260 = ET.SubElement(implementation_data_type7, 'LONG-NAME')
    l_4260 = ET.SubElement(long_name260, 'L-4')
    l_4260.text = 'sint16_least'
    l_4260.attrib = {'L': 'EN'}
    category27 = ET.SubElement(implementation_data_type7, 'CATEGORY')
    category27.text = 'VALUE'
    sw_data_def_props9 = ET.SubElement(implementation_data_type7, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants9 = ET.SubElement(sw_data_def_props9, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional9 = ET.SubElement(sw_data_def_props_variants9, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    data_constr_ref5 = ET.SubElement(sw_data_def_props_conditional9, 'DATA-CONSTR-REF')
    data_constr_ref5.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint16_least'
    data_constr_ref5.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type8 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name289 = ET.SubElement(implementation_data_type8, 'SHORT-NAME')
    short_name289.text = 'sint32'
    long_name261 = ET.SubElement(implementation_data_type8, 'LONG-NAME')
    l_4261 = ET.SubElement(long_name261, 'L-4')
    l_4261.text = 'sint32'
    l_4261.attrib = {'L': 'EN'}
    category28 = ET.SubElement(implementation_data_type8, 'CATEGORY')
    category28.text = 'VALUE'
    sw_data_def_props10 = ET.SubElement(implementation_data_type8, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants10 = ET.SubElement(sw_data_def_props10, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional10 = ET.SubElement(sw_data_def_props_variants10, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref7 = ET.SubElement(sw_data_def_props_conditional10, 'BASE-TYPE-REF')
    base_type_ref7.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint32'
    base_type_ref7.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref6 = ET.SubElement(sw_data_def_props_conditional10, 'DATA-CONSTR-REF')
    data_constr_ref6.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint32'
    data_constr_ref6.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type9 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name290 = ET.SubElement(implementation_data_type9, 'SHORT-NAME')
    short_name290.text = 'sint32_least'
    long_name262 = ET.SubElement(implementation_data_type9, 'LONG-NAME')
    l_4262 = ET.SubElement(long_name262, 'L-4')
    l_4262.text = 'sint32_least'
    l_4262.attrib = {'L': 'EN'}
    category29 = ET.SubElement(implementation_data_type9, 'CATEGORY')
    category29.text = 'VALUE'
    sw_data_def_props11 = ET.SubElement(implementation_data_type9, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants11 = ET.SubElement(sw_data_def_props11, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional11 = ET.SubElement(sw_data_def_props_variants11, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    data_constr_ref7 = ET.SubElement(sw_data_def_props_conditional11, 'DATA-CONSTR-REF')
    data_constr_ref7.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint32_least'
    data_constr_ref7.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type10 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name291 = ET.SubElement(implementation_data_type10, 'SHORT-NAME')
    short_name291.text = 'sint64'
    long_name263 = ET.SubElement(implementation_data_type10, 'LONG-NAME')
    l_4263 = ET.SubElement(long_name263, 'L-4')
    l_4263.text = 'sint64'
    l_4263.attrib = {'L': 'EN'}
    category30 = ET.SubElement(implementation_data_type10, 'CATEGORY')
    category30.text = 'VALUE'
    sw_data_def_props12 = ET.SubElement(implementation_data_type10, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants12 = ET.SubElement(sw_data_def_props12, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional12 = ET.SubElement(sw_data_def_props_variants12, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref8 = ET.SubElement(sw_data_def_props_conditional12, 'BASE-TYPE-REF')
    base_type_ref8.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint64'
    base_type_ref8.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref8 = ET.SubElement(sw_data_def_props_conditional12, 'DATA-CONSTR-REF')
    data_constr_ref8.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint64'
    data_constr_ref8.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type11 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name292 = ET.SubElement(implementation_data_type11, 'SHORT-NAME')
    short_name292.text = 'sint8'
    long_name264 = ET.SubElement(implementation_data_type11, 'LONG-NAME')
    l_4264 = ET.SubElement(long_name264, 'L-4')
    l_4264.text = 'sint8'
    l_4264.attrib = {'L': 'EN'}
    category31 = ET.SubElement(implementation_data_type11, 'CATEGORY')
    category31.text = 'VALUE'
    sw_data_def_props13 = ET.SubElement(implementation_data_type11, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants13 = ET.SubElement(sw_data_def_props13, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional13 = ET.SubElement(sw_data_def_props_variants13, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref9 = ET.SubElement(sw_data_def_props_conditional13, 'BASE-TYPE-REF')
    base_type_ref9.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint8'
    base_type_ref9.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref9 = ET.SubElement(sw_data_def_props_conditional13, 'DATA-CONSTR-REF')
    data_constr_ref9.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint8'
    data_constr_ref9.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type12 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name293 = ET.SubElement(implementation_data_type12, 'SHORT-NAME')
    short_name293.text = 'sint8_least'
    long_name265 = ET.SubElement(implementation_data_type12, 'LONG-NAME')
    l_4265 = ET.SubElement(long_name265, 'L-4')
    l_4265.text = 'sint8_least'
    l_4265.attrib = {'L': 'EN'}
    category32 = ET.SubElement(implementation_data_type12, 'CATEGORY')
    category32.text = 'VALUE'
    sw_data_def_props14 = ET.SubElement(implementation_data_type12, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants14 = ET.SubElement(sw_data_def_props14, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional14 = ET.SubElement(sw_data_def_props_variants14, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    data_constr_ref10 = ET.SubElement(sw_data_def_props_conditional14, 'DATA-CONSTR-REF')
    data_constr_ref10.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint8_least'
    data_constr_ref10.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type13 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name294 = ET.SubElement(implementation_data_type13, 'SHORT-NAME')
    short_name294.text = 'uint16'
    long_name266 = ET.SubElement(implementation_data_type13, 'LONG-NAME')
    l_4266 = ET.SubElement(long_name266, 'L-4')
    l_4266.text = 'uint16'
    l_4266.attrib = {'L': 'EN'}
    category33 = ET.SubElement(implementation_data_type13, 'CATEGORY')
    category33.text = 'VALUE'
    sw_data_def_props15 = ET.SubElement(implementation_data_type13, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants15 = ET.SubElement(sw_data_def_props15, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional15 = ET.SubElement(sw_data_def_props_variants15, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref10 = ET.SubElement(sw_data_def_props_conditional15, 'BASE-TYPE-REF')
    base_type_ref10.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint16'
    base_type_ref10.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref11 = ET.SubElement(sw_data_def_props_conditional15, 'DATA-CONSTR-REF')
    data_constr_ref11.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint16'
    data_constr_ref11.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type14 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name295 = ET.SubElement(implementation_data_type14, 'SHORT-NAME')
    short_name295.text = 'uint16_least'
    long_name267 = ET.SubElement(implementation_data_type14, 'LONG-NAME')
    l_4267 = ET.SubElement(long_name267, 'L-4')
    l_4267.text = 'uint16_least'
    l_4267.attrib = {'L': 'EN'}
    category34 = ET.SubElement(implementation_data_type14, 'CATEGORY')
    category34.text = 'VALUE'
    sw_data_def_props16 = ET.SubElement(implementation_data_type14, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants16 = ET.SubElement(sw_data_def_props16, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional16 = ET.SubElement(sw_data_def_props_variants16, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    data_constr_ref12 = ET.SubElement(sw_data_def_props_conditional16, 'DATA-CONSTR-REF')
    data_constr_ref12.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint16_least'
    data_constr_ref12.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type15 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name296 = ET.SubElement(implementation_data_type15, 'SHORT-NAME')
    short_name296.text = 'uint32'
    long_name268 = ET.SubElement(implementation_data_type15, 'LONG-NAME')
    l_4268 = ET.SubElement(long_name268, 'L-4')
    l_4268.text = 'uint32'
    l_4268.attrib = {'L': 'EN'}
    category35 = ET.SubElement(implementation_data_type15, 'CATEGORY')
    category35.text = 'VALUE'
    sw_data_def_props17 = ET.SubElement(implementation_data_type15, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants17 = ET.SubElement(sw_data_def_props17, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional17 = ET.SubElement(sw_data_def_props_variants17, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref11 = ET.SubElement(sw_data_def_props_conditional17, 'BASE-TYPE-REF')
    base_type_ref11.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint32'
    base_type_ref11.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref13 = ET.SubElement(sw_data_def_props_conditional17, 'DATA-CONSTR-REF')
    data_constr_ref13.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint32'
    data_constr_ref13.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type16 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name297 = ET.SubElement(implementation_data_type16, 'SHORT-NAME')
    short_name297.text = 'uint32_least'
    long_name269 = ET.SubElement(implementation_data_type16, 'LONG-NAME')
    l_4269 = ET.SubElement(long_name269, 'L-4')
    l_4269.text = 'uint32_least'
    l_4269.attrib = {'L': 'EN'}
    category36 = ET.SubElement(implementation_data_type16, 'CATEGORY')
    category36.text = 'VALUE'
    sw_data_def_props18 = ET.SubElement(implementation_data_type16, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants18 = ET.SubElement(sw_data_def_props18, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional18 = ET.SubElement(sw_data_def_props_variants18, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    data_constr_ref14 = ET.SubElement(sw_data_def_props_conditional18, 'DATA-CONSTR-REF')
    data_constr_ref14.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint32_least'
    data_constr_ref14.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type17 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name298 = ET.SubElement(implementation_data_type17, 'SHORT-NAME')
    short_name298.text = 'uint64'
    long_name270 = ET.SubElement(implementation_data_type17, 'LONG-NAME')
    l_4270 = ET.SubElement(long_name270, 'L-4')
    l_4270.text = 'uint64'
    l_4270.attrib = {'L': 'EN'}
    category37 = ET.SubElement(implementation_data_type17, 'CATEGORY')
    category37.text = 'VALUE'
    sw_data_def_props19 = ET.SubElement(implementation_data_type17, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants19 = ET.SubElement(sw_data_def_props19, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional19 = ET.SubElement(sw_data_def_props_variants19, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref12 = ET.SubElement(sw_data_def_props_conditional19, 'BASE-TYPE-REF')
    base_type_ref12.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint64'
    base_type_ref12.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref15 = ET.SubElement(sw_data_def_props_conditional19, 'DATA-CONSTR-REF')
    data_constr_ref15.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint64'
    data_constr_ref15.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type18 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name299 = ET.SubElement(implementation_data_type18, 'SHORT-NAME')
    short_name299.text = 'uint8'
    long_name271 = ET.SubElement(implementation_data_type18, 'LONG-NAME')
    l_4271 = ET.SubElement(long_name271, 'L-4')
    l_4271.text = 'uint8'
    l_4271.attrib = {'L': 'EN'}
    category38 = ET.SubElement(implementation_data_type18, 'CATEGORY')
    category38.text = 'VALUE'
    sw_data_def_props20 = ET.SubElement(implementation_data_type18, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants20 = ET.SubElement(sw_data_def_props20, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional20 = ET.SubElement(sw_data_def_props_variants20, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref13 = ET.SubElement(sw_data_def_props_conditional20, 'BASE-TYPE-REF')
    base_type_ref13.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint8'
    base_type_ref13.attrib = {'DEST': 'SW-BASE-TYPE'}
    data_constr_ref16 = ET.SubElement(sw_data_def_props_conditional20, 'DATA-CONSTR-REF')
    data_constr_ref16.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint8'
    data_constr_ref16.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type19 = ET.SubElement(elements7, 'IMPLEMENTATION-DATA-TYPE')
    short_name300 = ET.SubElement(implementation_data_type19, 'SHORT-NAME')
    short_name300.text = 'uint8_least'
    long_name272 = ET.SubElement(implementation_data_type19, 'LONG-NAME')
    l_4272 = ET.SubElement(long_name272, 'L-4')
    l_4272.text = 'uint8_least'
    l_4272.attrib = {'L': 'EN'}
    category39 = ET.SubElement(implementation_data_type19, 'CATEGORY')
    category39.text = 'VALUE'
    sw_data_def_props21 = ET.SubElement(implementation_data_type19, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants21 = ET.SubElement(sw_data_def_props21, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional21 = ET.SubElement(sw_data_def_props_variants21, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    data_constr_ref17 = ET.SubElement(sw_data_def_props_conditional21, 'DATA-CONSTR-REF')
    data_constr_ref17.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint8_least'
    data_constr_ref17.attrib = {'DEST': 'DATA-CONSTR'}
    ar_package12 = ET.SubElement(ar_packages2, 'AR-PACKAGE')
    short_name301 = ET.SubElement(ar_package12, 'SHORT-NAME')
    short_name301.text = 'AUTOSAR_Std'
    ar_packages6 = ET.SubElement(ar_package12, 'AR-PACKAGES')
    ar_package13 = ET.SubElement(ar_packages6, 'AR-PACKAGE')
    short_name302 = ET.SubElement(ar_package13, 'SHORT-NAME')
    short_name302.text = 'BswModuleEntrys'
    elements8 = ET.SubElement(ar_package13, 'ELEMENTS')
    bsw_module_entry1 = ET.SubElement(elements8, 'BSW-MODULE-ENTRY')
    short_name303 = ET.SubElement(bsw_module_entry1, 'SHORT-NAME')
    short_name303.text = 'Std_ExtractProtocolHeaderFieldsType'
    sw_service_impl_policy1 = ET.SubElement(bsw_module_entry1, 'SW-SERVICE-IMPL-POLICY')
    sw_service_impl_policy1.text = 'STANDARD'
    return_type1 = ET.SubElement(bsw_module_entry1, 'RETURN-TYPE')
    short_name304 = ET.SubElement(return_type1, 'SHORT-NAME')
    short_name304.text = 'Std_ReturnType'
    category40 = ET.SubElement(return_type1, 'CATEGORY')
    category40.text = 'TYPE_REFERENCE'
    sw_data_def_props22 = ET.SubElement(return_type1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants22 = ET.SubElement(sw_data_def_props22, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional22 = ET.SubElement(sw_data_def_props_variants22, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref1 = ET.SubElement(sw_data_def_props_conditional22, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref1.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_ReturnType'
    implementation_data_type_ref1.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    arguments1 = ET.SubElement(bsw_module_entry1, 'ARGUMENTS')
    sw_service_arg1 = ET.SubElement(arguments1, 'SW-SERVICE-ARG')
    short_name305 = ET.SubElement(sw_service_arg1, 'SHORT-NAME')
    short_name305.text = 'buffer'
    category41 = ET.SubElement(sw_service_arg1, 'CATEGORY')
    category41.text = 'DATA_REFERENCE'
    sw_data_def_props23 = ET.SubElement(sw_service_arg1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants23 = ET.SubElement(sw_data_def_props23, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional23 = ET.SubElement(sw_data_def_props_variants23, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_pointer_target_props3 = ET.SubElement(sw_data_def_props_conditional23, 'SW-POINTER-TARGET-PROPS')
    target_category3 = ET.SubElement(sw_pointer_target_props3, 'TARGET-CATEGORY')
    target_category3.text = 'TYPE_REFERENCE'
    sw_data_def_props24 = ET.SubElement(sw_pointer_target_props3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants24 = ET.SubElement(sw_data_def_props24, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional24 = ET.SubElement(sw_data_def_props_variants24, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref2 = ET.SubElement(sw_data_def_props_conditional24, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref2.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref2.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sw_impl_policy2 = ET.SubElement(sw_data_def_props_conditional24, 'SW-IMPL-POLICY')
    sw_impl_policy2.text = 'CONST'
    sw_service_arg2 = ET.SubElement(arguments1, 'SW-SERVICE-ARG')
    short_name306 = ET.SubElement(sw_service_arg2, 'SHORT-NAME')
    short_name306.text = 'bufferLength'
    category42 = ET.SubElement(sw_service_arg2, 'CATEGORY')
    category42.text = 'TYPE_REFERENCE'
    sw_data_def_props25 = ET.SubElement(sw_service_arg2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants25 = ET.SubElement(sw_data_def_props25, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional25 = ET.SubElement(sw_data_def_props_variants25, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref3 = ET.SubElement(sw_data_def_props_conditional25, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref3.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
    implementation_data_type_ref3.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sw_service_arg3 = ET.SubElement(arguments1, 'SW-SERVICE-ARG')
    short_name307 = ET.SubElement(sw_service_arg3, 'SHORT-NAME')
    short_name307.text = 'messageType'
    category43 = ET.SubElement(sw_service_arg3, 'CATEGORY')
    category43.text = 'DATA_REFERENCE'
    sw_data_def_props26 = ET.SubElement(sw_service_arg3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants26 = ET.SubElement(sw_data_def_props26, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional26 = ET.SubElement(sw_data_def_props_variants26, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_pointer_target_props4 = ET.SubElement(sw_data_def_props_conditional26, 'SW-POINTER-TARGET-PROPS')
    target_category4 = ET.SubElement(sw_pointer_target_props4, 'TARGET-CATEGORY')
    target_category4.text = 'TYPE_REFERENCE'
    sw_data_def_props27 = ET.SubElement(sw_pointer_target_props4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants27 = ET.SubElement(sw_data_def_props27, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional27 = ET.SubElement(sw_data_def_props_variants27, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref4 = ET.SubElement(sw_data_def_props_conditional27, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref4.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_MessageTypeType'
    implementation_data_type_ref4.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sw_service_arg4 = ET.SubElement(arguments1, 'SW-SERVICE-ARG')
    short_name308 = ET.SubElement(sw_service_arg4, 'SHORT-NAME')
    short_name308.text = 'messageResult'
    category44 = ET.SubElement(sw_service_arg4, 'CATEGORY')
    category44.text = 'DATA_REFERENCE'
    sw_data_def_props28 = ET.SubElement(sw_service_arg4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants28 = ET.SubElement(sw_data_def_props28, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional28 = ET.SubElement(sw_data_def_props_variants28, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_pointer_target_props5 = ET.SubElement(sw_data_def_props_conditional28, 'SW-POINTER-TARGET-PROPS')
    target_category5 = ET.SubElement(sw_pointer_target_props5, 'TARGET-CATEGORY')
    target_category5.text = 'TYPE_REFERENCE'
    sw_data_def_props29 = ET.SubElement(sw_pointer_target_props5, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants29 = ET.SubElement(sw_data_def_props29, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional29 = ET.SubElement(sw_data_def_props_variants29, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref5 = ET.SubElement(sw_data_def_props_conditional29, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref5.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_MessageResultType'
    implementation_data_type_ref5.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    ar_package14 = ET.SubElement(ar_packages6, 'AR-PACKAGE')
    short_name309 = ET.SubElement(ar_package14, 'SHORT-NAME')
    short_name309.text = 'CompuMethods'
    category45 = ET.SubElement(ar_package14, 'CATEGORY')
    category45.text = 'STANDARD'
    elements9 = ET.SubElement(ar_package14, 'ELEMENTS')
    compu_method2 = ET.SubElement(elements9, 'COMPU-METHOD')
    short_name310 = ET.SubElement(compu_method2, 'SHORT-NAME')
    short_name310.text = 'Std_MessageResultType'
    category46 = ET.SubElement(compu_method2, 'CATEGORY')
    category46.text = 'TEXTTABLE'
    compu_internal_to_phys2 = ET.SubElement(compu_method2, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales2 = ET.SubElement(compu_internal_to_phys2, 'COMPU-SCALES')
    compu_scale3 = ET.SubElement(compu_scales2, 'COMPU-SCALE')
    lower_limit20 = ET.SubElement(compu_scale3, 'LOWER-LIMIT')
    lower_limit20.text = '0x00'
    lower_limit20.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit20 = ET.SubElement(compu_scale3, 'UPPER-LIMIT')
    upper_limit20.text = '0x00'
    upper_limit20.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const3 = ET.SubElement(compu_scale3, 'COMPU-CONST')
    vt3 = ET.SubElement(compu_const3, 'VT')
    vt3.text = 'STD_MESSAGERESULT_OK'
    compu_scale4 = ET.SubElement(compu_scales2, 'COMPU-SCALE')
    lower_limit21 = ET.SubElement(compu_scale4, 'LOWER-LIMIT')
    lower_limit21.text = '0x01'
    lower_limit21.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit21 = ET.SubElement(compu_scale4, 'UPPER-LIMIT')
    upper_limit21.text = '0x01'
    upper_limit21.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const4 = ET.SubElement(compu_scale4, 'COMPU-CONST')
    vt4 = ET.SubElement(compu_const4, 'VT')
    vt4.text = 'STD_MESSAGERESULT_ERROR'
    compu_method3 = ET.SubElement(elements9, 'COMPU-METHOD')
    short_name311 = ET.SubElement(compu_method3, 'SHORT-NAME')
    short_name311.text = 'Std_MessageTypeType'
    category47 = ET.SubElement(compu_method3, 'CATEGORY')
    category47.text = 'TEXTTABLE'
    compu_internal_to_phys3 = ET.SubElement(compu_method3, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales3 = ET.SubElement(compu_internal_to_phys3, 'COMPU-SCALES')
    compu_scale5 = ET.SubElement(compu_scales3, 'COMPU-SCALE')
    lower_limit22 = ET.SubElement(compu_scale5, 'LOWER-LIMIT')
    lower_limit22.text = '0x00'
    lower_limit22.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit22 = ET.SubElement(compu_scale5, 'UPPER-LIMIT')
    upper_limit22.text = '0x00'
    upper_limit22.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const5 = ET.SubElement(compu_scale5, 'COMPU-CONST')
    vt5 = ET.SubElement(compu_const5, 'VT')
    vt5.text = 'STD_MESSAGETYPE_REQUEST'
    compu_scale6 = ET.SubElement(compu_scales3, 'COMPU-SCALE')
    lower_limit23 = ET.SubElement(compu_scale6, 'LOWER-LIMIT')
    lower_limit23.text = '0x01'
    lower_limit23.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit23 = ET.SubElement(compu_scale6, 'UPPER-LIMIT')
    upper_limit23.text = '0x01'
    upper_limit23.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const6 = ET.SubElement(compu_scale6, 'COMPU-CONST')
    vt6 = ET.SubElement(compu_const6, 'VT')
    vt6.text = 'STD_MESSAGETYPE_RESPONSE'
    compu_method4 = ET.SubElement(elements9, 'COMPU-METHOD')
    short_name312 = ET.SubElement(compu_method4, 'SHORT-NAME')
    short_name312.text = 'Std_ReturnType'
    category48 = ET.SubElement(compu_method4, 'CATEGORY')
    category48.text = 'TEXTTABLE'
    compu_internal_to_phys4 = ET.SubElement(compu_method4, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales4 = ET.SubElement(compu_internal_to_phys4, 'COMPU-SCALES')
    compu_scale7 = ET.SubElement(compu_scales4, 'COMPU-SCALE')
    lower_limit24 = ET.SubElement(compu_scale7, 'LOWER-LIMIT')
    lower_limit24.text = '0'
    lower_limit24.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit24 = ET.SubElement(compu_scale7, 'UPPER-LIMIT')
    upper_limit24.text = '0'
    upper_limit24.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const7 = ET.SubElement(compu_scale7, 'COMPU-CONST')
    vt7 = ET.SubElement(compu_const7, 'VT')
    vt7.text = 'E_OK'
    compu_scale8 = ET.SubElement(compu_scales4, 'COMPU-SCALE')
    lower_limit25 = ET.SubElement(compu_scale8, 'LOWER-LIMIT')
    lower_limit25.text = '1'
    lower_limit25.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit25 = ET.SubElement(compu_scale8, 'UPPER-LIMIT')
    upper_limit25.text = '1'
    upper_limit25.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const8 = ET.SubElement(compu_scale8, 'COMPU-CONST')
    vt8 = ET.SubElement(compu_const8, 'VT')
    vt8.text = 'E_NOT_OK'
    compu_method5 = ET.SubElement(elements9, 'COMPU-METHOD')
    short_name313 = ET.SubElement(compu_method5, 'SHORT-NAME')
    short_name313.text = 'Std_TransformerClass'
    category49 = ET.SubElement(compu_method5, 'CATEGORY')
    category49.text = 'TEXTTABLE'
    compu_internal_to_phys5 = ET.SubElement(compu_method5, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales5 = ET.SubElement(compu_internal_to_phys5, 'COMPU-SCALES')
    compu_scale9 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
    lower_limit26 = ET.SubElement(compu_scale9, 'LOWER-LIMIT')
    lower_limit26.text = '0x00'
    lower_limit26.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit26 = ET.SubElement(compu_scale9, 'UPPER-LIMIT')
    upper_limit26.text = '0x00'
    upper_limit26.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const9 = ET.SubElement(compu_scale9, 'COMPU-CONST')
    vt9 = ET.SubElement(compu_const9, 'VT')
    vt9.text = 'STD_TRANSFORMER_UNSPECIFIED'
    compu_scale10 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
    lower_limit27 = ET.SubElement(compu_scale10, 'LOWER-LIMIT')
    lower_limit27.text = '0x01'
    lower_limit27.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit27 = ET.SubElement(compu_scale10, 'UPPER-LIMIT')
    upper_limit27.text = '0x01'
    upper_limit27.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const10 = ET.SubElement(compu_scale10, 'COMPU-CONST')
    vt10 = ET.SubElement(compu_const10, 'VT')
    vt10.text = 'STD_TRANSFORMER_SERIALIZER'
    compu_scale11 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
    lower_limit28 = ET.SubElement(compu_scale11, 'LOWER-LIMIT')
    lower_limit28.text = '0x02'
    lower_limit28.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit28 = ET.SubElement(compu_scale11, 'UPPER-LIMIT')
    upper_limit28.text = '0x02'
    upper_limit28.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const11 = ET.SubElement(compu_scale11, 'COMPU-CONST')
    vt11 = ET.SubElement(compu_const11, 'VT')
    vt11.text = 'STD_TRANSFORMER_SAFETY'
    compu_scale12 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
    lower_limit29 = ET.SubElement(compu_scale12, 'LOWER-LIMIT')
    lower_limit29.text = '0x03'
    lower_limit29.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit29 = ET.SubElement(compu_scale12, 'UPPER-LIMIT')
    upper_limit29.text = '0x03'
    upper_limit29.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const12 = ET.SubElement(compu_scale12, 'COMPU-CONST')
    vt12 = ET.SubElement(compu_const12, 'VT')
    vt12.text = 'STD_TRANSFORMER_SECURITY'
    compu_scale13 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
    lower_limit30 = ET.SubElement(compu_scale13, 'LOWER-LIMIT')
    lower_limit30.text = '0xFF'
    lower_limit30.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit30 = ET.SubElement(compu_scale13, 'UPPER-LIMIT')
    upper_limit30.text = '0xFF'
    upper_limit30.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const13 = ET.SubElement(compu_scale13, 'COMPU-CONST')
    vt13 = ET.SubElement(compu_const13, 'VT')
    vt13.text = 'STD_TRANSFORMER_CUSTOM'
    compu_method6 = ET.SubElement(elements9, 'COMPU-METHOD')
    short_name314 = ET.SubElement(compu_method6, 'SHORT-NAME')
    short_name314.text = 'Std_TransformerForwardCode'
    category50 = ET.SubElement(compu_method6, 'CATEGORY')
    category50.text = 'TEXTTABLE'
    compu_internal_to_phys6 = ET.SubElement(compu_method6, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales6 = ET.SubElement(compu_internal_to_phys6, 'COMPU-SCALES')
    compu_scale14 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
    lower_limit31 = ET.SubElement(compu_scale14, 'LOWER-LIMIT')
    lower_limit31.text = '0x00'
    lower_limit31.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit31 = ET.SubElement(compu_scale14, 'UPPER-LIMIT')
    upper_limit31.text = '0x00'
    upper_limit31.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const14 = ET.SubElement(compu_scale14, 'COMPU-CONST')
    vt14 = ET.SubElement(compu_const14, 'VT')
    vt14.text = 'E_OK'
    compu_scale15 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
    lower_limit32 = ET.SubElement(compu_scale15, 'LOWER-LIMIT')
    lower_limit32.text = '0x01'
    lower_limit32.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit32 = ET.SubElement(compu_scale15, 'UPPER-LIMIT')
    upper_limit32.text = '0x01'
    upper_limit32.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const15 = ET.SubElement(compu_scale15, 'COMPU-CONST')
    vt15 = ET.SubElement(compu_const15, 'VT')
    vt15.text = 'E_SAFETY_INVALID_REP'
    compu_scale16 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
    lower_limit33 = ET.SubElement(compu_scale16, 'LOWER-LIMIT')
    lower_limit33.text = '0x02'
    lower_limit33.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit33 = ET.SubElement(compu_scale16, 'UPPER-LIMIT')
    upper_limit33.text = '0x02'
    upper_limit33.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const16 = ET.SubElement(compu_scale16, 'COMPU-CONST')
    vt16 = ET.SubElement(compu_const16, 'VT')
    vt16.text = 'E_SAFETY_INVALID_SEQ'
    compu_scale17 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
    lower_limit34 = ET.SubElement(compu_scale17, 'LOWER-LIMIT')
    lower_limit34.text = '0x03'
    lower_limit34.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    upper_limit34 = ET.SubElement(compu_scale17, 'UPPER-LIMIT')
    upper_limit34.text = '0x03'
    upper_limit34.attrib = {'INTERVAL-TYPE': 'CLOSED'}
    compu_const17 = ET.SubElement(compu_scale17, 'COMPU-CONST')
    vt17 = ET.SubElement(compu_const17, 'VT')
    vt17.text = 'E_SAFETY_INVALID_CRC'
    ar_package15 = ET.SubElement(ar_packages6, 'AR-PACKAGE')
    short_name315 = ET.SubElement(ar_package15, 'SHORT-NAME')
    short_name315.text = 'DataConstrs'
    category51 = ET.SubElement(ar_package15, 'CATEGORY')
    category51.text = 'STANDARD'
    elements10 = ET.SubElement(ar_package15, 'ELEMENTS')
    data_constr18 = ET.SubElement(elements10, 'DATA-CONSTR')
    short_name316 = ET.SubElement(data_constr18, 'SHORT-NAME')
    short_name316.text = 'Std_MessageResultType'
    data_constr_rules18 = ET.SubElement(data_constr18, 'DATA-CONSTR-RULES')
    data_constr_rule18 = ET.SubElement(data_constr_rules18, 'DATA-CONSTR-RULE')
    internal_constrs18 = ET.SubElement(data_constr_rule18, 'INTERNAL-CONSTRS')
    lower_limit35 = ET.SubElement(internal_constrs18, 'LOWER-LIMIT')
    lower_limit35.text = '0x00'
    upper_limit35 = ET.SubElement(internal_constrs18, 'UPPER-LIMIT')
    upper_limit35.text = '0x02'
    data_constr19 = ET.SubElement(elements10, 'DATA-CONSTR')
    short_name317 = ET.SubElement(data_constr19, 'SHORT-NAME')
    short_name317.text = 'Std_MessageTypeType'
    data_constr_rules19 = ET.SubElement(data_constr19, 'DATA-CONSTR-RULES')
    data_constr_rule19 = ET.SubElement(data_constr_rules19, 'DATA-CONSTR-RULE')
    internal_constrs19 = ET.SubElement(data_constr_rule19, 'INTERNAL-CONSTRS')
    lower_limit36 = ET.SubElement(internal_constrs19, 'LOWER-LIMIT')
    lower_limit36.text = '0x00'
    upper_limit36 = ET.SubElement(internal_constrs19, 'UPPER-LIMIT')
    upper_limit36.text = '0x02'
    data_constr20 = ET.SubElement(elements10, 'DATA-CONSTR')
    short_name318 = ET.SubElement(data_constr20, 'SHORT-NAME')
    short_name318.text = 'Std_ReturnType'
    data_constr_rules20 = ET.SubElement(data_constr20, 'DATA-CONSTR-RULES')
    data_constr_rule20 = ET.SubElement(data_constr_rules20, 'DATA-CONSTR-RULE')
    internal_constrs20 = ET.SubElement(data_constr_rule20, 'INTERNAL-CONSTRS')
    lower_limit37 = ET.SubElement(internal_constrs20, 'LOWER-LIMIT')
    lower_limit37.text = '0'
    upper_limit37 = ET.SubElement(internal_constrs20, 'UPPER-LIMIT')
    upper_limit37.text = '1'
    data_constr21 = ET.SubElement(elements10, 'DATA-CONSTR')
    short_name319 = ET.SubElement(data_constr21, 'SHORT-NAME')
    short_name319.text = 'Std_TransformerClass'
    data_constr_rules21 = ET.SubElement(data_constr21, 'DATA-CONSTR-RULES')
    data_constr_rule21 = ET.SubElement(data_constr_rules21, 'DATA-CONSTR-RULE')
    internal_constrs21 = ET.SubElement(data_constr_rule21, 'INTERNAL-CONSTRS')
    lower_limit38 = ET.SubElement(internal_constrs21, 'LOWER-LIMIT')
    lower_limit38.text = '0x00'
    upper_limit38 = ET.SubElement(internal_constrs21, 'UPPER-LIMIT')
    upper_limit38.text = '0xFF'
    data_constr22 = ET.SubElement(elements10, 'DATA-CONSTR')
    short_name320 = ET.SubElement(data_constr22, 'SHORT-NAME')
    short_name320.text = 'Std_TransformerErrorCode'
    data_constr_rules22 = ET.SubElement(data_constr22, 'DATA-CONSTR-RULES')
    data_constr_rule22 = ET.SubElement(data_constr_rules22, 'DATA-CONSTR-RULE')
    internal_constrs22 = ET.SubElement(data_constr_rule22, 'INTERNAL-CONSTRS')
    lower_limit39 = ET.SubElement(internal_constrs22, 'LOWER-LIMIT')
    lower_limit39.text = '0x00'
    upper_limit39 = ET.SubElement(internal_constrs22, 'UPPER-LIMIT')
    upper_limit39.text = '0xFF'
    data_constr23 = ET.SubElement(elements10, 'DATA-CONSTR')
    short_name321 = ET.SubElement(data_constr23, 'SHORT-NAME')
    short_name321.text = 'Std_TransformerForwardCode'
    data_constr_rules23 = ET.SubElement(data_constr23, 'DATA-CONSTR-RULES')
    data_constr_rule23 = ET.SubElement(data_constr_rules23, 'DATA-CONSTR-RULE')
    internal_constrs23 = ET.SubElement(data_constr_rule23, 'INTERNAL-CONSTRS')
    lower_limit40 = ET.SubElement(internal_constrs23, 'LOWER-LIMIT')
    lower_limit40.text = '0x00'
    upper_limit40 = ET.SubElement(internal_constrs23, 'UPPER-LIMIT')
    upper_limit40.text = '0x03'
    ar_package16 = ET.SubElement(ar_packages6, 'AR-PACKAGE')
    short_name322 = ET.SubElement(ar_package16, 'SHORT-NAME')
    short_name322.text = 'ImplementationDataTypes'
    category52 = ET.SubElement(ar_package16, 'CATEGORY')
    category52.text = 'STANDARD'
    elements11 = ET.SubElement(ar_package16, 'ELEMENTS')
    implementation_data_type20 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name323 = ET.SubElement(implementation_data_type20, 'SHORT-NAME')
    short_name323.text = 'Std_ExtractProtocolHeaderFieldsType'
    desc1 = ET.SubElement(implementation_data_type20, 'DESC')
    l_21 = ET.SubElement(desc1, 'L-2')
    l_21.text = 'Type for the function pointer to extract the relevant protocol header fields of the message and the type of the message result of a transformer. - At the time being, this is limited to the types used for C/S communication (i.e., REQUEST and RESPONSE and OK and ERROR).'
    l_21.attrib = {'L': 'EN'}
    category53 = ET.SubElement(implementation_data_type20, 'CATEGORY')
    category53.text = 'FUNCTION_REFERENCE'
    sw_data_def_props30 = ET.SubElement(implementation_data_type20, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants30 = ET.SubElement(sw_data_def_props30, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional30 = ET.SubElement(sw_data_def_props_variants30, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_pointer_target_props6 = ET.SubElement(sw_data_def_props_conditional30, 'SW-POINTER-TARGET-PROPS')
    target_category6 = ET.SubElement(sw_pointer_target_props6, 'TARGET-CATEGORY')
    target_category6.text = 'FUNCTION_REFERENCE'
    function_pointer_signature_ref1 = ET.SubElement(sw_pointer_target_props6, 'FUNCTION-POINTER-SIGNATURE-REF')
    function_pointer_signature_ref1.text = '/AUTOSAR/AUTOSAR_Std/BswModuleEntrys/Std_ExtractProtocolHeaderFieldsType'
    function_pointer_signature_ref1.attrib = {'DEST': 'BSW-MODULE-ENTRY'}
    implementation_data_type21 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name324 = ET.SubElement(implementation_data_type21, 'SHORT-NAME')
    short_name324.text = 'Std_MessageResultType'
    desc2 = ET.SubElement(implementation_data_type21, 'DESC')
    l_22 = ET.SubElement(desc2, 'L-2')
    l_22.text = 'This type is used to encode different types of results for response messages. - Currently this encoding is limited to the distinction between OK and ERROR responses.'
    l_22.attrib = {'L': 'EN'}
    category54 = ET.SubElement(implementation_data_type21, 'CATEGORY')
    category54.text = 'TYPE_REFERENCE'
    sw_data_def_props31 = ET.SubElement(implementation_data_type21, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants31 = ET.SubElement(sw_data_def_props31, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional31 = ET.SubElement(sw_data_def_props_variants31, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    compu_method_ref2 = ET.SubElement(sw_data_def_props_conditional31, 'COMPU-METHOD-REF')
    compu_method_ref2.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_MessageResultType'
    compu_method_ref2.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref18 = ET.SubElement(sw_data_def_props_conditional31, 'DATA-CONSTR-REF')
    data_constr_ref18.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_MessageResultType'
    data_constr_ref18.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type_ref6 = ET.SubElement(sw_data_def_props_conditional31, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref6.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref6.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type22 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name325 = ET.SubElement(implementation_data_type22, 'SHORT-NAME')
    short_name325.text = 'Std_MessageTypeType'
    desc3 = ET.SubElement(implementation_data_type22, 'DESC')
    l_23 = ET.SubElement(desc3, 'L-2')
    l_23.text = 'This type is used to encode the different type of messages. - Currently this encoding is limited to the distinction between requests and responses in C/S communication.'
    l_23.attrib = {'L': 'EN'}
    category55 = ET.SubElement(implementation_data_type22, 'CATEGORY')
    category55.text = 'TYPE_REFERENCE'
    sw_data_def_props32 = ET.SubElement(implementation_data_type22, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants32 = ET.SubElement(sw_data_def_props32, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional32 = ET.SubElement(sw_data_def_props_variants32, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    compu_method_ref3 = ET.SubElement(sw_data_def_props_conditional32, 'COMPU-METHOD-REF')
    compu_method_ref3.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_MessageTypeType'
    compu_method_ref3.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref19 = ET.SubElement(sw_data_def_props_conditional32, 'DATA-CONSTR-REF')
    data_constr_ref19.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_MessageTypeType'
    data_constr_ref19.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type_ref7 = ET.SubElement(sw_data_def_props_conditional32, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref7.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref7.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type23 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name326 = ET.SubElement(implementation_data_type23, 'SHORT-NAME')
    short_name326.text = 'Std_ReturnType'
    desc4 = ET.SubElement(implementation_data_type23, 'DESC')
    l_24 = ET.SubElement(desc4, 'L-2')
    l_24.text = 'This type can be used as standard API return type which is shared between the RTE and the BSW modules. It shall be defined as follows: typedef uint8 Std_ReturnType;'
    l_24.attrib = {'L': 'EN'}
    category56 = ET.SubElement(implementation_data_type23, 'CATEGORY')
    category56.text = 'TYPE_REFERENCE'
    sw_data_def_props33 = ET.SubElement(implementation_data_type23, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants33 = ET.SubElement(sw_data_def_props33, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional33 = ET.SubElement(sw_data_def_props_variants33, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    compu_method_ref4 = ET.SubElement(sw_data_def_props_conditional33, 'COMPU-METHOD-REF')
    compu_method_ref4.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_ReturnType'
    compu_method_ref4.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref20 = ET.SubElement(sw_data_def_props_conditional33, 'DATA-CONSTR-REF')
    data_constr_ref20.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_ReturnType'
    data_constr_ref20.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type_ref8 = ET.SubElement(sw_data_def_props_conditional33, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref8.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref8.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type24 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name327 = ET.SubElement(implementation_data_type24, 'SHORT-NAME')
    short_name327.text = 'Std_TransformerClass'
    desc5 = ET.SubElement(implementation_data_type24, 'DESC')
    l_25 = ET.SubElement(desc5, 'L-2')
    l_25.text = 'Std_TransformerClass is an enumeration where each element represents a transformer class.'
    l_25.attrib = {'L': 'EN'}
    category57 = ET.SubElement(implementation_data_type24, 'CATEGORY')
    category57.text = 'TYPE_REFERENCE'
    sw_data_def_props34 = ET.SubElement(implementation_data_type24, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants34 = ET.SubElement(sw_data_def_props34, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional34 = ET.SubElement(sw_data_def_props_variants34, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    compu_method_ref5 = ET.SubElement(sw_data_def_props_conditional34, 'COMPU-METHOD-REF')
    compu_method_ref5.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_TransformerClass'
    compu_method_ref5.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref21 = ET.SubElement(sw_data_def_props_conditional34, 'DATA-CONSTR-REF')
    data_constr_ref21.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_TransformerClass'
    data_constr_ref21.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type_ref9 = ET.SubElement(sw_data_def_props_conditional34, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref9.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref9.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type25 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name328 = ET.SubElement(implementation_data_type25, 'SHORT-NAME')
    short_name328.text = 'Std_TransformerError'
    category58 = ET.SubElement(implementation_data_type25, 'CATEGORY')
    category58.text = 'STRUCTURE'
    sub_elements1 = ET.SubElement(implementation_data_type25, 'SUB-ELEMENTS')
    implementation_data_type_element1 = ET.SubElement(sub_elements1, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    short_name329 = ET.SubElement(implementation_data_type_element1, 'SHORT-NAME')
    short_name329.text = 'errorCode'
    category59 = ET.SubElement(implementation_data_type_element1, 'CATEGORY')
    category59.text = 'TYPE_REFERENCE'
    sw_data_def_props35 = ET.SubElement(implementation_data_type_element1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants35 = ET.SubElement(sw_data_def_props35, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional35 = ET.SubElement(sw_data_def_props_variants35, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref10 = ET.SubElement(sw_data_def_props_conditional35, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref10.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_TransformerErrorCode'
    implementation_data_type_ref10.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type_element2 = ET.SubElement(sub_elements1, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    short_name330 = ET.SubElement(implementation_data_type_element2, 'SHORT-NAME')
    short_name330.text = 'transformerClass'
    category60 = ET.SubElement(implementation_data_type_element2, 'CATEGORY')
    category60.text = 'TYPE_REFERENCE'
    sw_data_def_props36 = ET.SubElement(implementation_data_type_element2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants36 = ET.SubElement(sw_data_def_props36, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional36 = ET.SubElement(sw_data_def_props_variants36, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref11 = ET.SubElement(sw_data_def_props_conditional36, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref11.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_TransformerClass'
    implementation_data_type_ref11.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type26 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name331 = ET.SubElement(implementation_data_type26, 'SHORT-NAME')
    short_name331.text = 'Std_TransformerErrorCode'
    desc6 = ET.SubElement(implementation_data_type26, 'DESC')
    l_26 = ET.SubElement(desc6, 'L-2')
    l_26.text = 'The type of the Std_TransformerError.'
    l_26.attrib = {'L': 'EN'}
    category61 = ET.SubElement(implementation_data_type26, 'CATEGORY')
    category61.text = 'TYPE_REFERENCE'
    sw_data_def_props37 = ET.SubElement(implementation_data_type26, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants37 = ET.SubElement(sw_data_def_props37, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional37 = ET.SubElement(sw_data_def_props_variants37, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    data_constr_ref22 = ET.SubElement(sw_data_def_props_conditional37, 'DATA-CONSTR-REF')
    data_constr_ref22.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_TransformerErrorCode'
    data_constr_ref22.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type_ref12 = ET.SubElement(sw_data_def_props_conditional37, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref12.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref12.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type27 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name332 = ET.SubElement(implementation_data_type27, 'SHORT-NAME')
    short_name332.text = 'Std_TransformerForwardCode'
    category62 = ET.SubElement(implementation_data_type27, 'CATEGORY')
    category62.text = 'TYPE_REFERENCE'
    sw_data_def_props38 = ET.SubElement(implementation_data_type27, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants38 = ET.SubElement(sw_data_def_props38, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional38 = ET.SubElement(sw_data_def_props_variants38, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    compu_method_ref6 = ET.SubElement(sw_data_def_props_conditional38, 'COMPU-METHOD-REF')
    compu_method_ref6.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_TransformerForwardCode'
    compu_method_ref6.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref23 = ET.SubElement(sw_data_def_props_conditional38, 'DATA-CONSTR-REF')
    data_constr_ref23.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_TransformerForwardCode'
    data_constr_ref23.attrib = {'DEST': 'DATA-CONSTR'}
    implementation_data_type_ref13 = ET.SubElement(sw_data_def_props_conditional38, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref13.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref13.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type28 = ET.SubElement(elements11, 'IMPLEMENTATION-DATA-TYPE')
    short_name333 = ET.SubElement(implementation_data_type28, 'SHORT-NAME')
    short_name333.text = 'Std_VersionInfoType'
    desc7 = ET.SubElement(implementation_data_type28, 'DESC')
    l_27 = ET.SubElement(desc7, 'L-2')
    l_27.text = 'This type shall be used to request the version of a BSW module using the <Module name>_GetVersionInfo() function.'
    l_27.attrib = {'L': 'EN'}
    category63 = ET.SubElement(implementation_data_type28, 'CATEGORY')
    category63.text = 'STRUCTURE'
    sub_elements2 = ET.SubElement(implementation_data_type28, 'SUB-ELEMENTS')
    implementation_data_type_element3 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    short_name334 = ET.SubElement(implementation_data_type_element3, 'SHORT-NAME')
    short_name334.text = 'vendorID'
    category64 = ET.SubElement(implementation_data_type_element3, 'CATEGORY')
    category64.text = 'TYPE_REFERENCE'
    sw_data_def_props39 = ET.SubElement(implementation_data_type_element3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants39 = ET.SubElement(sw_data_def_props39, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional39 = ET.SubElement(sw_data_def_props_variants39, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref14 = ET.SubElement(sw_data_def_props_conditional39, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref14.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
    implementation_data_type_ref14.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type_element4 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    short_name335 = ET.SubElement(implementation_data_type_element4, 'SHORT-NAME')
    short_name335.text = 'moduleID'
    category65 = ET.SubElement(implementation_data_type_element4, 'CATEGORY')
    category65.text = 'TYPE_REFERENCE'
    sw_data_def_props40 = ET.SubElement(implementation_data_type_element4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants40 = ET.SubElement(sw_data_def_props40, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional40 = ET.SubElement(sw_data_def_props_variants40, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref15 = ET.SubElement(sw_data_def_props_conditional40, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref15.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
    implementation_data_type_ref15.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type_element5 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    short_name336 = ET.SubElement(implementation_data_type_element5, 'SHORT-NAME')
    short_name336.text = 'sw_major_version'
    category66 = ET.SubElement(implementation_data_type_element5, 'CATEGORY')
    category66.text = 'TYPE_REFERENCE'
    sw_data_def_props41 = ET.SubElement(implementation_data_type_element5, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants41 = ET.SubElement(sw_data_def_props41, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional41 = ET.SubElement(sw_data_def_props_variants41, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref16 = ET.SubElement(sw_data_def_props_conditional41, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref16.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref16.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type_element6 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    short_name337 = ET.SubElement(implementation_data_type_element6, 'SHORT-NAME')
    short_name337.text = 'sw_minor_version'
    category67 = ET.SubElement(implementation_data_type_element6, 'CATEGORY')
    category67.text = 'TYPE_REFERENCE'
    sw_data_def_props42 = ET.SubElement(implementation_data_type_element6, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants42 = ET.SubElement(sw_data_def_props42, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional42 = ET.SubElement(sw_data_def_props_variants42, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref17 = ET.SubElement(sw_data_def_props_conditional42, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref17.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref17.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type_element7 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    short_name338 = ET.SubElement(implementation_data_type_element7, 'SHORT-NAME')
    short_name338.text = 'sw_patch_version'
    category68 = ET.SubElement(implementation_data_type_element7, 'CATEGORY')
    category68.text = 'TYPE_REFERENCE'
    sw_data_def_props43 = ET.SubElement(implementation_data_type_element7, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants43 = ET.SubElement(sw_data_def_props43, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional43 = ET.SubElement(sw_data_def_props_variants43, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref18 = ET.SubElement(sw_data_def_props_conditional43, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref18.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref18.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    ar_package17 = ET.SubElement(ar_packages1, 'AR-PACKAGE')
    short_name339 = ET.SubElement(ar_package17, 'SHORT-NAME')
    short_name339.text = 'Communication'
    ar_packages7 = ET.SubElement(ar_package17, 'AR-PACKAGES')
    ar_package18 = ET.SubElement(ar_packages7, 'AR-PACKAGE')
    short_name340 = ET.SubElement(ar_package18, 'SHORT-NAME')
    short_name340.text = 'CommunicationClusters'
    ar_package19 = ET.SubElement(ar_packages7, 'AR-PACKAGE')
    short_name341 = ET.SubElement(ar_package19, 'SHORT-NAME')
    short_name341.text = 'Frames'
    ar_package20 = ET.SubElement(ar_packages7, 'AR-PACKAGE')
    short_name342 = ET.SubElement(ar_package20, 'SHORT-NAME')
    short_name342.text = 'ISignals'
    ar_package21 = ET.SubElement(ar_packages7, 'AR-PACKAGE')
    short_name343 = ET.SubElement(ar_package21, 'SHORT-NAME')
    short_name343.text = 'Pdus'
    ar_package22 = ET.SubElement(ar_packages7, 'AR-PACKAGE')
    short_name344 = ET.SubElement(ar_package22, 'SHORT-NAME')
    short_name344.text = 'SystemSignals'
    ar_package23 = ET.SubElement(ar_packages1, 'AR-PACKAGE')
    short_name345 = ET.SubElement(ar_package23, 'SHORT-NAME')
    short_name345.text = 'EcuInstances'
    ar_package24 = ET.SubElement(ar_packages1, 'AR-PACKAGE')
    ar_package24.attrib = {'UUID': '9ae99405-7be6-41c0-ad56-a5fa909a1e5c'}
    short_name346 = ET.SubElement(ar_package24, 'SHORT-NAME')
    short_name346.text = 'RootSWComposition'
    ar_package25 = ET.SubElement(ar_packages1, 'AR-PACKAGE')
    short_name347 = ET.SubElement(ar_package25, 'SHORT-NAME')
    short_name347.text = 'SharedElements'
    ar_packages8 = ET.SubElement(ar_package25, 'AR-PACKAGES')
    ar_package26 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    short_name348 = ET.SubElement(ar_package26, 'SHORT-NAME')
    short_name348.text = 'ApplicationDataTypes'
    ar_packages9 = ET.SubElement(ar_package26, 'AR-PACKAGES')
    ar_package27 = ET.SubElement(ar_packages9, 'AR-PACKAGE')
    ar_package27.attrib = {'UUID': '035a8ab9-015a-426c-8766-e4b58e5c5a98'}
    short_name349 = ET.SubElement(ar_package27, 'SHORT-NAME')
    short_name349.text = 'Array'
    elements12 = ET.SubElement(ar_package27, 'ELEMENTS')
    application_array_data_type1 = ET.SubElement(elements12, 'APPLICATION-ARRAY-DATA-TYPE')
    application_array_data_type1.attrib = {'UUID': '99540e2c-05ec-4a85-94bb-9a3999ac57fe'}
    short_name350 = ET.SubElement(application_array_data_type1, 'SHORT-NAME')
    short_name350.text = 'ApplicationArrayDataType_Fixed'
    category69 = ET.SubElement(application_array_data_type1, 'CATEGORY')
    category69.text = 'ARRAY'
    element1 = ET.SubElement(application_array_data_type1, 'ELEMENT')
    element1.attrib = {'UUID': '7391c5fe-50b6-4b88-bc63-ec1975221a4f'}
    short_name351 = ET.SubElement(element1, 'SHORT-NAME')
    short_name351.text = 'Element'
    category70 = ET.SubElement(element1, 'CATEGORY')
    category70.text = 'VALUE'
    type_tref1 = ET.SubElement(element1, 'TYPE-TREF')
    type_tref1.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref1.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    array_size_semantics1 = ET.SubElement(element1, 'ARRAY-SIZE-SEMANTICS')
    array_size_semantics1.text = 'FIXED-SIZE'
    max_number_of_elements1 = ET.SubElement(element1, 'MAX-NUMBER-OF-ELEMENTS')
    max_number_of_elements1.text = '15'
    application_array_data_type2 = ET.SubElement(elements12, 'APPLICATION-ARRAY-DATA-TYPE')
    application_array_data_type2.attrib = {'UUID': 'd5f3c7e9-dd94-4d37-888e-b6e44b01cc5a'}
    short_name352 = ET.SubElement(application_array_data_type2, 'SHORT-NAME')
    short_name352.text = 'ApplicationArrayDataType_Variable'
    category71 = ET.SubElement(application_array_data_type2, 'CATEGORY')
    category71.text = 'ARRAY'
    element2 = ET.SubElement(application_array_data_type2, 'ELEMENT')
    element2.attrib = {'UUID': 'fef3f4b8-d9bd-4cb1-94b8-4403e665c4fa'}
    short_name353 = ET.SubElement(element2, 'SHORT-NAME')
    short_name353.text = 'Element'
    category72 = ET.SubElement(element2, 'CATEGORY')
    category72.text = 'VALUE'
    type_tref2 = ET.SubElement(element2, 'TYPE-TREF')
    type_tref2.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref2.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    array_size_semantics2 = ET.SubElement(element2, 'ARRAY-SIZE-SEMANTICS')
    array_size_semantics2.text = 'VARIABLE-SIZE'
    max_number_of_elements2 = ET.SubElement(element2, 'MAX-NUMBER-OF-ELEMENTS')
    max_number_of_elements2.text = '15'
    ar_package28 = ET.SubElement(ar_packages9, 'AR-PACKAGE')
    ar_package28.attrib = {'UUID': 'b142aaa0-2671-41cd-bbc6-78cc30cf22c4'}
    short_name354 = ET.SubElement(ar_package28, 'SHORT-NAME')
    short_name354.text = 'Primitive'
    elements13 = ET.SubElement(ar_package28, 'ELEMENTS')
    application_primitive_data_type1 = ET.SubElement(elements13, 'APPLICATION-PRIMITIVE-DATA-TYPE')
    application_primitive_data_type1.attrib = {'UUID': '18357165-e774-4282-90db-fcb76c7c6727'}
    short_name355 = ET.SubElement(application_primitive_data_type1, 'SHORT-NAME')
    short_name355.text = 'ApplicationPrimitiveDataType'
    category73 = ET.SubElement(application_primitive_data_type1, 'CATEGORY')
    category73.text = 'VALUE'
    sw_data_def_props44 = ET.SubElement(application_primitive_data_type1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants44 = ET.SubElement(sw_data_def_props44, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional44 = ET.SubElement(sw_data_def_props_variants44, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access1 = ET.SubElement(sw_data_def_props_conditional44, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access1.text = 'NOT-ACCESSIBLE'
    compu_method_ref7 = ET.SubElement(sw_data_def_props_conditional44, 'COMPU-METHOD-REF')
    compu_method_ref7.text = '/SharedElements/CompuMethods/CompuMethod'
    compu_method_ref7.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref24 = ET.SubElement(sw_data_def_props_conditional44, 'DATA-CONSTR-REF')
    data_constr_ref24.text = '/SharedElements/DataConstr/DataConstr'
    data_constr_ref24.attrib = {'DEST': 'DATA-CONSTR'}
    invalid_value1 = ET.SubElement(sw_data_def_props_conditional44, 'INVALID-VALUE')
    application_value_specification1 = ET.SubElement(invalid_value1, 'APPLICATION-VALUE-SPECIFICATION')
    category74 = ET.SubElement(application_value_specification1, 'CATEGORY')
    category74.text = 'VALUE'
    sw_value_cont1 = ET.SubElement(application_value_specification1, 'SW-VALUE-CONT')
    sw_values_phys1 = ET.SubElement(sw_value_cont1, 'SW-VALUES-PHYS')
    v1 = ET.SubElement(sw_values_phys1, 'V')
    v1.text = '8'
    unit_ref1 = ET.SubElement(sw_data_def_props_conditional44, 'UNIT-REF')
    unit_ref1.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref1.attrib = {'DEST': 'UNIT'}
    application_primitive_data_type2 = ET.SubElement(elements13, 'APPLICATION-PRIMITIVE-DATA-TYPE')
    application_primitive_data_type2.attrib = {'UUID': '14c56edb-9cf8-48cc-92d7-4cc1ca683a0f'}
    short_name356 = ET.SubElement(application_primitive_data_type2, 'SHORT-NAME')
    short_name356.text = 'Bool_ApplicationPrimitiveDataType'
    category75 = ET.SubElement(application_primitive_data_type2, 'CATEGORY')
    category75.text = 'BOOLEAN'
    sw_data_def_props45 = ET.SubElement(application_primitive_data_type2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants45 = ET.SubElement(sw_data_def_props45, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional45 = ET.SubElement(sw_data_def_props_variants45, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access2 = ET.SubElement(sw_data_def_props_conditional45, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access2.text = 'NOT-ACCESSIBLE'
    compu_method_ref8 = ET.SubElement(sw_data_def_props_conditional45, 'COMPU-METHOD-REF')
    compu_method_ref8.text = '/SharedElements/CompuMethods/CompuMethod'
    compu_method_ref8.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref25 = ET.SubElement(sw_data_def_props_conditional45, 'DATA-CONSTR-REF')
    data_constr_ref25.text = '/SharedElements/DataConstr/DataConstr'
    data_constr_ref25.attrib = {'DEST': 'DATA-CONSTR'}
    unit_ref2 = ET.SubElement(sw_data_def_props_conditional45, 'UNIT-REF')
    unit_ref2.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref2.attrib = {'DEST': 'UNIT'}
    application_primitive_data_type3 = ET.SubElement(elements13, 'APPLICATION-PRIMITIVE-DATA-TYPE')
    application_primitive_data_type3.attrib = {'UUID': 'a799e394-8020-4e26-abaf-804ce312d6c0'}
    short_name357 = ET.SubElement(application_primitive_data_type3, 'SHORT-NAME')
    short_name357.text = 'Copy_ApplicationPrimitiveDataType'
    category76 = ET.SubElement(application_primitive_data_type3, 'CATEGORY')
    category76.text = 'VALUE'
    sw_data_def_props46 = ET.SubElement(application_primitive_data_type3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants46 = ET.SubElement(sw_data_def_props46, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional46 = ET.SubElement(sw_data_def_props_variants46, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access3 = ET.SubElement(sw_data_def_props_conditional46, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access3.text = 'NOT-ACCESSIBLE'
    compu_method_ref9 = ET.SubElement(sw_data_def_props_conditional46, 'COMPU-METHOD-REF')
    compu_method_ref9.text = '/SharedElements/CompuMethods/CompuMethod'
    compu_method_ref9.attrib = {'DEST': 'COMPU-METHOD'}
    data_constr_ref26 = ET.SubElement(sw_data_def_props_conditional46, 'DATA-CONSTR-REF')
    data_constr_ref26.text = '/SharedElements/DataConstr/DataConstr'
    data_constr_ref26.attrib = {'DEST': 'DATA-CONSTR'}
    unit_ref3 = ET.SubElement(sw_data_def_props_conditional46, 'UNIT-REF')
    unit_ref3.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref3.attrib = {'DEST': 'UNIT'}
    application_primitive_data_type4 = ET.SubElement(elements13, 'APPLICATION-PRIMITIVE-DATA-TYPE')
    application_primitive_data_type4.attrib = {'UUID': 'decc899e-e751-4907-998b-8769b6445a38'}
    short_name358 = ET.SubElement(application_primitive_data_type4, 'SHORT-NAME')
    short_name358.text = 'String_ApplicationPrimitiveDataType'
    category77 = ET.SubElement(application_primitive_data_type4, 'CATEGORY')
    category77.text = 'STRING'
    sw_data_def_props47 = ET.SubElement(application_primitive_data_type4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants47 = ET.SubElement(sw_data_def_props47, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional47 = ET.SubElement(sw_data_def_props_variants47, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access4 = ET.SubElement(sw_data_def_props_conditional47, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access4.text = 'NOT-ACCESSIBLE'
    sw_text_props1 = ET.SubElement(sw_data_def_props_conditional47, 'SW-TEXT-PROPS')
    array_size_semantics3 = ET.SubElement(sw_text_props1, 'ARRAY-SIZE-SEMANTICS')
    array_size_semantics3.text = 'VARIABLE-SIZE'
    sw_max_text_size1 = ET.SubElement(sw_text_props1, 'SW-MAX-TEXT-SIZE')
    sw_max_text_size1.text = '16'
    unit_ref4 = ET.SubElement(sw_data_def_props_conditional47, 'UNIT-REF')
    unit_ref4.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref4.attrib = {'DEST': 'UNIT'}
    ar_package29 = ET.SubElement(ar_packages9, 'AR-PACKAGE')
    ar_package29.attrib = {'UUID': '65217d8d-3662-4a20-a643-ec9ee94de7a0'}
    short_name359 = ET.SubElement(ar_package29, 'SHORT-NAME')
    short_name359.text = 'Record'
    elements14 = ET.SubElement(ar_package29, 'ELEMENTS')
    application_record_data_type1 = ET.SubElement(elements14, 'APPLICATION-RECORD-DATA-TYPE')
    application_record_data_type1.attrib = {'UUID': 'd20b1ec6-9940-43c7-beda-f773a805fab6'}
    short_name360 = ET.SubElement(application_record_data_type1, 'SHORT-NAME')
    short_name360.text = 'ApplicationRecordDataType'
    category78 = ET.SubElement(application_record_data_type1, 'CATEGORY')
    category78.text = 'STRUCTURE'
    elements15 = ET.SubElement(application_record_data_type1, 'ELEMENTS')
    application_record_element1 = ET.SubElement(elements15, 'APPLICATION-RECORD-ELEMENT')
    application_record_element1.attrib = {'UUID': 'bd5079b0-6ac0-4d72-a63a-afd373f2bcc5'}
    short_name361 = ET.SubElement(application_record_element1, 'SHORT-NAME')
    short_name361.text = 'Element'
    type_tref3 = ET.SubElement(application_record_element1, 'TYPE-TREF')
    type_tref3.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref3.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    application_record_element2 = ET.SubElement(elements15, 'APPLICATION-RECORD-ELEMENT')
    application_record_element2.attrib = {'UUID': '12021f0e-9ad1-4df2-bffa-197611387a0a'}
    short_name362 = ET.SubElement(application_record_element2, 'SHORT-NAME')
    short_name362.text = 'Element1'
    type_tref4 = ET.SubElement(application_record_element2, 'TYPE-TREF')
    type_tref4.text = '/SharedElements/ApplicationDataTypes/Array/ApplicationArrayDataType_Fixed'
    type_tref4.attrib = {'DEST': 'APPLICATION-ARRAY-DATA-TYPE'}
    ar_package30 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    short_name363 = ET.SubElement(ar_package30, 'SHORT-NAME')
    short_name363.text = 'CompuMethods'
    elements16 = ET.SubElement(ar_package30, 'ELEMENTS')
    compu_method7 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method7.attrib = {'UUID': 'e51fd87b-fe38-48d5-b94a-c11851da3006'}
    short_name364 = ET.SubElement(compu_method7, 'SHORT-NAME')
    short_name364.text = 'BITFIELD_TEXTTABLE_CompuMethod'
    category79 = ET.SubElement(compu_method7, 'CATEGORY')
    category79.text = 'BITFIELD_TEXTTABLE'
    unit_ref5 = ET.SubElement(compu_method7, 'UNIT-REF')
    unit_ref5.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref5.attrib = {'DEST': 'UNIT'}
    compu_internal_to_phys7 = ET.SubElement(compu_method7, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales7 = ET.SubElement(compu_internal_to_phys7, 'COMPU-SCALES')
    compu_scale18 = ET.SubElement(compu_scales7, 'COMPU-SCALE')
    mask1 = ET.SubElement(compu_scale18, 'MASK')
    mask1.text = '0'
    lower_limit41 = ET.SubElement(compu_scale18, 'LOWER-LIMIT')
    lower_limit41.text = '0'
    upper_limit41 = ET.SubElement(compu_scale18, 'UPPER-LIMIT')
    upper_limit41.text = '0'
    compu_const18 = ET.SubElement(compu_scale18, 'COMPU-CONST')
    vt18 = ET.SubElement(compu_const18, 'VT')
    vt18.text = 'xyz'
    compu_scale19 = ET.SubElement(compu_scales7, 'COMPU-SCALE')
    mask2 = ET.SubElement(compu_scale19, 'MASK')
    mask2.text = '0'
    lower_limit42 = ET.SubElement(compu_scale19, 'LOWER-LIMIT')
    lower_limit42.text = '1'
    upper_limit42 = ET.SubElement(compu_scale19, 'UPPER-LIMIT')
    upper_limit42.text = '1'
    compu_const19 = ET.SubElement(compu_scale19, 'COMPU-CONST')
    vt19 = ET.SubElement(compu_const19, 'VT')
    vt19.text = 'xyz1'
    compu_scale20 = ET.SubElement(compu_scales7, 'COMPU-SCALE')
    mask3 = ET.SubElement(compu_scale20, 'MASK')
    mask3.text = '0'
    lower_limit43 = ET.SubElement(compu_scale20, 'LOWER-LIMIT')
    lower_limit43.text = '2'
    upper_limit43 = ET.SubElement(compu_scale20, 'UPPER-LIMIT')
    upper_limit43.text = '2'
    compu_const20 = ET.SubElement(compu_scale20, 'COMPU-CONST')
    vt20 = ET.SubElement(compu_const20, 'VT')
    vt20.text = 'xyz2'
    compu_scale21 = ET.SubElement(compu_scales7, 'COMPU-SCALE')
    mask4 = ET.SubElement(compu_scale21, 'MASK')
    mask4.text = '0'
    lower_limit44 = ET.SubElement(compu_scale21, 'LOWER-LIMIT')
    lower_limit44.text = '3'
    upper_limit44 = ET.SubElement(compu_scale21, 'UPPER-LIMIT')
    upper_limit44.text = '3'
    compu_const21 = ET.SubElement(compu_scale21, 'COMPU-CONST')
    vt21 = ET.SubElement(compu_const21, 'VT')
    vt21.text = 'xyz3'
    compu_scale22 = ET.SubElement(compu_scales7, 'COMPU-SCALE')
    mask5 = ET.SubElement(compu_scale22, 'MASK')
    mask5.text = '0'
    lower_limit45 = ET.SubElement(compu_scale22, 'LOWER-LIMIT')
    lower_limit45.text = '4'
    upper_limit45 = ET.SubElement(compu_scale22, 'UPPER-LIMIT')
    upper_limit45.text = '4'
    compu_const22 = ET.SubElement(compu_scale22, 'COMPU-CONST')
    vt22 = ET.SubElement(compu_const22, 'VT')
    vt22.text = 'xyz4'
    compu_method8 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method8.attrib = {'UUID': 'a65ae6b6-3eab-43ff-907b-2c8276c8528b'}
    short_name365 = ET.SubElement(compu_method8, 'SHORT-NAME')
    short_name365.text = 'CompuMethod'
    category80 = ET.SubElement(compu_method8, 'CATEGORY')
    category80.text = 'IDENTICAL'
    unit_ref6 = ET.SubElement(compu_method8, 'UNIT-REF')
    unit_ref6.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref6.attrib = {'DEST': 'UNIT'}
    compu_method9 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method9.attrib = {'UUID': '386978fd-a90f-4003-b63e-f9e35b6d76b8'}
    short_name366 = ET.SubElement(compu_method9, 'SHORT-NAME')
    short_name366.text = 'LINEAR_CompuMethod'
    category81 = ET.SubElement(compu_method9, 'CATEGORY')
    category81.text = 'LINEAR'
    unit_ref7 = ET.SubElement(compu_method9, 'UNIT-REF')
    unit_ref7.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref7.attrib = {'DEST': 'UNIT'}
    compu_internal_to_phys8 = ET.SubElement(compu_method9, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales8 = ET.SubElement(compu_internal_to_phys8, 'COMPU-SCALES')
    compu_scale23 = ET.SubElement(compu_scales8, 'COMPU-SCALE')
    compu_rational_coeffs1 = ET.SubElement(compu_scale23, 'COMPU-RATIONAL-COEFFS')
    compu_numerator1 = ET.SubElement(compu_rational_coeffs1, 'COMPU-NUMERATOR')
    v2 = ET.SubElement(compu_numerator1, 'V')
    v2.text = '0'
    v3 = ET.SubElement(compu_numerator1, 'V')
    v3.text = '1'
    compu_denominator1 = ET.SubElement(compu_rational_coeffs1, 'COMPU-DENOMINATOR')
    v4 = ET.SubElement(compu_denominator1, 'V')
    v4.text = '1'
    compu_method10 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method10.attrib = {'UUID': '74ea35c5-6b05-40a2-b22c-3c1a179a095b'}
    short_name367 = ET.SubElement(compu_method10, 'SHORT-NAME')
    short_name367.text = 'RAT_FUNC_CompuMethod'
    category82 = ET.SubElement(compu_method10, 'CATEGORY')
    category82.text = 'RAT_FUNC'
    unit_ref8 = ET.SubElement(compu_method10, 'UNIT-REF')
    unit_ref8.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref8.attrib = {'DEST': 'UNIT'}
    compu_internal_to_phys9 = ET.SubElement(compu_method10, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales9 = ET.SubElement(compu_internal_to_phys9, 'COMPU-SCALES')
    compu_scale24 = ET.SubElement(compu_scales9, 'COMPU-SCALE')
    compu_rational_coeffs2 = ET.SubElement(compu_scale24, 'COMPU-RATIONAL-COEFFS')
    compu_numerator2 = ET.SubElement(compu_rational_coeffs2, 'COMPU-NUMERATOR')
    v5 = ET.SubElement(compu_numerator2, 'V')
    v5.text = '0'
    v6 = ET.SubElement(compu_numerator2, 'V')
    v6.text = '1'
    v7 = ET.SubElement(compu_numerator2, 'V')
    v7.text = '0'
    compu_denominator2 = ET.SubElement(compu_rational_coeffs2, 'COMPU-DENOMINATOR')
    v8 = ET.SubElement(compu_denominator2, 'V')
    v8.text = '1'
    v9 = ET.SubElement(compu_denominator2, 'V')
    v9.text = '0'
    v10 = ET.SubElement(compu_denominator2, 'V')
    v10.text = '0'
    compu_method11 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method11.attrib = {'UUID': 'cb57246c-cf48-448f-b8a5-5f319b76ee49'}
    short_name368 = ET.SubElement(compu_method11, 'SHORT-NAME')
    short_name368.text = 'SCALE_RATIONAL_AND_TEXTTABLE_CompuMethod'
    desc8 = ET.SubElement(compu_method11, 'DESC')
    l_28 = ET.SubElement(desc8, 'L-2')
    l_28.text = 'S'
    l_28.attrib = {'L': 'FOR-ALL'}
    category83 = ET.SubElement(compu_method11, 'CATEGORY')
    category83.text = 'SCALE_RATIONAL_AND_TEXTTABLE'
    unit_ref9 = ET.SubElement(compu_method11, 'UNIT-REF')
    unit_ref9.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref9.attrib = {'DEST': 'UNIT'}
    compu_internal_to_phys10 = ET.SubElement(compu_method11, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales10 = ET.SubElement(compu_internal_to_phys10, 'COMPU-SCALES')
    compu_scale25 = ET.SubElement(compu_scales10, 'COMPU-SCALE')
    lower_limit46 = ET.SubElement(compu_scale25, 'LOWER-LIMIT')
    lower_limit46.text = '0'
    upper_limit46 = ET.SubElement(compu_scale25, 'UPPER-LIMIT')
    upper_limit46.text = '15'
    compu_rational_coeffs3 = ET.SubElement(compu_scale25, 'COMPU-RATIONAL-COEFFS')
    compu_numerator3 = ET.SubElement(compu_rational_coeffs3, 'COMPU-NUMERATOR')
    v11 = ET.SubElement(compu_numerator3, 'V')
    v11.text = '0'
    v12 = ET.SubElement(compu_numerator3, 'V')
    v12.text = '1'
    v13 = ET.SubElement(compu_numerator3, 'V')
    v13.text = '0'
    compu_denominator3 = ET.SubElement(compu_rational_coeffs3, 'COMPU-DENOMINATOR')
    v14 = ET.SubElement(compu_denominator3, 'V')
    v14.text = '1'
    v15 = ET.SubElement(compu_denominator3, 'V')
    v15.text = '0'
    v16 = ET.SubElement(compu_denominator3, 'V')
    v16.text = '0'
    compu_scale26 = ET.SubElement(compu_scales10, 'COMPU-SCALE')
    lower_limit47 = ET.SubElement(compu_scale26, 'LOWER-LIMIT')
    lower_limit47.text = '16'
    upper_limit47 = ET.SubElement(compu_scale26, 'UPPER-LIMIT')
    upper_limit47.text = '16'
    compu_const23 = ET.SubElement(compu_scale26, 'COMPU-CONST')
    vt23 = ET.SubElement(compu_const23, 'VT')
    vt23.text = 'sdcd'
    compu_scale27 = ET.SubElement(compu_scales10, 'COMPU-SCALE')
    lower_limit48 = ET.SubElement(compu_scale27, 'LOWER-LIMIT')
    lower_limit48.text = '17'
    upper_limit48 = ET.SubElement(compu_scale27, 'UPPER-LIMIT')
    upper_limit48.text = '17'
    compu_const24 = ET.SubElement(compu_scale27, 'COMPU-CONST')
    vt24 = ET.SubElement(compu_const24, 'VT')
    vt24.text = 'sdcd1'
    compu_default_value1 = ET.SubElement(compu_internal_to_phys10, 'COMPU-DEFAULT-VALUE')
    v17 = ET.SubElement(compu_default_value1, 'V')
    v17.text = '17'
    compu_method12 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method12.attrib = {'UUID': '19ee54ef-4447-4987-bcbe-a9d2a743d569'}
    short_name369 = ET.SubElement(compu_method12, 'SHORT-NAME')
    short_name369.text = 'Scale_linear_And_texttable_CompuMethod'
    desc9 = ET.SubElement(compu_method12, 'DESC')
    l_29 = ET.SubElement(desc9, 'L-2')
    l_29.text = 'Scale_linear _And_texttable_CompuMethod'
    l_29.attrib = {'L': 'FOR-ALL'}
    category84 = ET.SubElement(compu_method12, 'CATEGORY')
    category84.text = 'SCALE_LINEAR_AND_TEXTTABLE'
    unit_ref10 = ET.SubElement(compu_method12, 'UNIT-REF')
    unit_ref10.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref10.attrib = {'DEST': 'UNIT'}
    compu_internal_to_phys11 = ET.SubElement(compu_method12, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales11 = ET.SubElement(compu_internal_to_phys11, 'COMPU-SCALES')
    compu_scale28 = ET.SubElement(compu_scales11, 'COMPU-SCALE')
    lower_limit49 = ET.SubElement(compu_scale28, 'LOWER-LIMIT')
    lower_limit49.text = '0'
    upper_limit49 = ET.SubElement(compu_scale28, 'UPPER-LIMIT')
    upper_limit49.text = '7'
    compu_rational_coeffs4 = ET.SubElement(compu_scale28, 'COMPU-RATIONAL-COEFFS')
    compu_numerator4 = ET.SubElement(compu_rational_coeffs4, 'COMPU-NUMERATOR')
    v18 = ET.SubElement(compu_numerator4, 'V')
    v18.text = '0'
    v19 = ET.SubElement(compu_numerator4, 'V')
    v19.text = '1'
    compu_denominator4 = ET.SubElement(compu_rational_coeffs4, 'COMPU-DENOMINATOR')
    v20 = ET.SubElement(compu_denominator4, 'V')
    v20.text = '1'
    compu_scale29 = ET.SubElement(compu_scales11, 'COMPU-SCALE')
    lower_limit50 = ET.SubElement(compu_scale29, 'LOWER-LIMIT')
    lower_limit50.text = '8'
    upper_limit50 = ET.SubElement(compu_scale29, 'UPPER-LIMIT')
    upper_limit50.text = '8'
    compu_const25 = ET.SubElement(compu_scale29, 'COMPU-CONST')
    vt25 = ET.SubElement(compu_const25, 'VT')
    vt25.text = 'abcd'
    compu_scale30 = ET.SubElement(compu_scales11, 'COMPU-SCALE')
    lower_limit51 = ET.SubElement(compu_scale30, 'LOWER-LIMIT')
    lower_limit51.text = '9'
    upper_limit51 = ET.SubElement(compu_scale30, 'UPPER-LIMIT')
    upper_limit51.text = '9'
    compu_const26 = ET.SubElement(compu_scale30, 'COMPU-CONST')
    vt26 = ET.SubElement(compu_const26, 'VT')
    vt26.text = 'abcd1'
    compu_default_value2 = ET.SubElement(compu_internal_to_phys11, 'COMPU-DEFAULT-VALUE')
    v21 = ET.SubElement(compu_default_value2, 'V')
    v21.text = '8'
    compu_method13 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method13.attrib = {'UUID': 'd4a62613-2238-4523-b274-2677c5a2235a'}
    short_name370 = ET.SubElement(compu_method13, 'SHORT-NAME')
    short_name370.text = 'TAB_NOINTP_CompuMethod'
    desc10 = ET.SubElement(compu_method13, 'DESC')
    category85 = ET.SubElement(compu_method13, 'CATEGORY')
    category85.text = 'TAB_NOINTP'
    unit_ref11 = ET.SubElement(compu_method13, 'UNIT-REF')
    unit_ref11.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref11.attrib = {'DEST': 'UNIT'}
    compu_internal_to_phys12 = ET.SubElement(compu_method13, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales12 = ET.SubElement(compu_internal_to_phys12, 'COMPU-SCALES')
    compu_scale31 = ET.SubElement(compu_scales12, 'COMPU-SCALE')
    desc11 = ET.SubElement(compu_scale31, 'DESC')
    l_210 = ET.SubElement(desc11, 'L-2')
    l_210.attrib = {'L': 'AA'}
    lower_limit52 = ET.SubElement(compu_scale31, 'LOWER-LIMIT')
    lower_limit52.text = '0'
    upper_limit52 = ET.SubElement(compu_scale31, 'UPPER-LIMIT')
    upper_limit52.text = '0'
    compu_const27 = ET.SubElement(compu_scale31, 'COMPU-CONST')
    v22 = ET.SubElement(compu_const27, 'V')
    v22.text = '10'
    compu_scale32 = ET.SubElement(compu_scales12, 'COMPU-SCALE')
    lower_limit53 = ET.SubElement(compu_scale32, 'LOWER-LIMIT')
    lower_limit53.text = '1'
    upper_limit53 = ET.SubElement(compu_scale32, 'UPPER-LIMIT')
    upper_limit53.text = '1'
    compu_const28 = ET.SubElement(compu_scale32, 'COMPU-CONST')
    v23 = ET.SubElement(compu_const28, 'V')
    v23.text = '9'
    compu_scale33 = ET.SubElement(compu_scales12, 'COMPU-SCALE')
    lower_limit54 = ET.SubElement(compu_scale33, 'LOWER-LIMIT')
    lower_limit54.text = '2'
    upper_limit54 = ET.SubElement(compu_scale33, 'UPPER-LIMIT')
    upper_limit54.text = '2'
    compu_const29 = ET.SubElement(compu_scale33, 'COMPU-CONST')
    v24 = ET.SubElement(compu_const29, 'V')
    v24.text = '8'
    compu_default_value3 = ET.SubElement(compu_internal_to_phys12, 'COMPU-DEFAULT-VALUE')
    vf1 = ET.SubElement(compu_default_value3, 'VF')
    vf1.text = '0'
    compu_method14 = ET.SubElement(elements16, 'COMPU-METHOD')
    compu_method14.attrib = {'UUID': '6ef51214-688c-4e48-a115-d80fcf62bffc'}
    short_name371 = ET.SubElement(compu_method14, 'SHORT-NAME')
    short_name371.text = 'TEXTTABLE_CompuMethod'
    category86 = ET.SubElement(compu_method14, 'CATEGORY')
    category86.text = 'TEXTTABLE'
    unit_ref12 = ET.SubElement(compu_method14, 'UNIT-REF')
    unit_ref12.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/Units/NoUnit'
    unit_ref12.attrib = {'DEST': 'UNIT'}
    compu_internal_to_phys13 = ET.SubElement(compu_method14, 'COMPU-INTERNAL-TO-PHYS')
    compu_scales13 = ET.SubElement(compu_internal_to_phys13, 'COMPU-SCALES')
    compu_scale34 = ET.SubElement(compu_scales13, 'COMPU-SCALE')
    lower_limit55 = ET.SubElement(compu_scale34, 'LOWER-LIMIT')
    lower_limit55.text = '0'
    upper_limit55 = ET.SubElement(compu_scale34, 'UPPER-LIMIT')
    upper_limit55.text = '0'
    compu_const30 = ET.SubElement(compu_scale34, 'COMPU-CONST')
    vt27 = ET.SubElement(compu_const30, 'VT')
    vt27.text = 'text1'
    compu_scale35 = ET.SubElement(compu_scales13, 'COMPU-SCALE')
    lower_limit56 = ET.SubElement(compu_scale35, 'LOWER-LIMIT')
    lower_limit56.text = '1'
    upper_limit56 = ET.SubElement(compu_scale35, 'UPPER-LIMIT')
    upper_limit56.text = '1'
    compu_const31 = ET.SubElement(compu_scale35, 'COMPU-CONST')
    vt28 = ET.SubElement(compu_const31, 'VT')
    vt28.text = 'text2'
    compu_scale36 = ET.SubElement(compu_scales13, 'COMPU-SCALE')
    lower_limit57 = ET.SubElement(compu_scale36, 'LOWER-LIMIT')
    lower_limit57.text = '2'
    upper_limit57 = ET.SubElement(compu_scale36, 'UPPER-LIMIT')
    upper_limit57.text = '2'
    compu_const32 = ET.SubElement(compu_scale36, 'COMPU-CONST')
    vt29 = ET.SubElement(compu_const32, 'VT')
    vt29.text = 'text3'
    compu_scale37 = ET.SubElement(compu_scales13, 'COMPU-SCALE')
    lower_limit58 = ET.SubElement(compu_scale37, 'LOWER-LIMIT')
    lower_limit58.text = '3'
    upper_limit58 = ET.SubElement(compu_scale37, 'UPPER-LIMIT')
    upper_limit58.text = '3'
    compu_const33 = ET.SubElement(compu_scale37, 'COMPU-CONST')
    vt30 = ET.SubElement(compu_const33, 'VT')
    vt30.text = 'text4'
    compu_default_value4 = ET.SubElement(compu_internal_to_phys13, 'COMPU-DEFAULT-VALUE')
    v25 = ET.SubElement(compu_default_value4, 'V')
    v25.text = '0'
    ar_package31 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    short_name372 = ET.SubElement(ar_package31, 'SHORT-NAME')
    short_name372.text = 'ConstantSpecifications'
    elements17 = ET.SubElement(ar_package31, 'ELEMENTS')
    constant_specification1 = ET.SubElement(elements17, 'CONSTANT-SPECIFICATION')
    constant_specification1.attrib = {'UUID': '5679b253-a22a-4532-8116-7ce8ac35a562'}
    short_name373 = ET.SubElement(constant_specification1, 'SHORT-NAME')
    short_name373.text = 'ApplicationSwComponentType_ExplicitInterRunnableVariable'
    value_spec1 = ET.SubElement(constant_specification1, 'VALUE-SPEC')
    numerical_value_specification1 = ET.SubElement(value_spec1, 'NUMERICAL-VALUE-SPECIFICATION')
    short_label2 = ET.SubElement(numerical_value_specification1, 'SHORT-LABEL')
    short_label2.text = 'Value'
    value1 = ET.SubElement(numerical_value_specification1, 'VALUE')
    value1.text = '0'
    constant_specification2 = ET.SubElement(elements17, 'CONSTANT-SPECIFICATION')
    constant_specification2.attrib = {'UUID': '82a61fa2-2547-4ce8-a0d4-c583629db923'}
    short_name374 = ET.SubElement(constant_specification2, 'SHORT-NAME')
    short_name374.text = 'ApplicationSwComponentType_SharedParameter'
    value_spec2 = ET.SubElement(constant_specification2, 'VALUE-SPEC')
    numerical_value_specification2 = ET.SubElement(value_spec2, 'NUMERICAL-VALUE-SPECIFICATION')
    short_label3 = ET.SubElement(numerical_value_specification2, 'SHORT-LABEL')
    short_label3.text = 'Value'
    value2 = ET.SubElement(numerical_value_specification2, 'VALUE')
    value2.text = '5.5'
    constant_specification3 = ET.SubElement(elements17, 'CONSTANT-SPECIFICATION')
    constant_specification3.attrib = {'UUID': 'e3a2b67f-9cda-465d-8b6f-f31127e7b3a1'}
    short_name375 = ET.SubElement(constant_specification3, 'SHORT-NAME')
    short_name375.text = 'ApplicationSwComponentType_StaticMemory'
    value_spec3 = ET.SubElement(constant_specification3, 'VALUE-SPEC')
    numerical_value_specification3 = ET.SubElement(value_spec3, 'NUMERICAL-VALUE-SPECIFICATION')
    short_label4 = ET.SubElement(numerical_value_specification3, 'SHORT-LABEL')
    short_label4.text = 'Value'
    value3 = ET.SubElement(numerical_value_specification3, 'VALUE')
    value3.text = '9'
    constant_specification4 = ET.SubElement(elements17, 'CONSTANT-SPECIFICATION')
    constant_specification4.attrib = {'UUID': '3c303401-cc30-49f7-a7cb-0cf2844a3f18'}
    short_name376 = ET.SubElement(constant_specification4, 'SHORT-NAME')
    short_name376.text = 'ConstantSpecification'
    ar_package32 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    ar_package32.attrib = {'UUID': '6fcb326d-7f82-4cd3-9429-fa90f212d1e8'}
    short_name377 = ET.SubElement(ar_package32, 'SHORT-NAME')
    short_name377.text = 'ConstantTypeMappingSets'
    elements18 = ET.SubElement(ar_package32, 'ELEMENTS')
    constant_specification_mapping_set1 = ET.SubElement(elements18, 'CONSTANT-SPECIFICATION-MAPPING-SET')
    constant_specification_mapping_set1.attrib = {'UUID': '4f3bdbd1-af02-46e6-a3ba-411118807380'}
    short_name378 = ET.SubElement(constant_specification_mapping_set1, 'SHORT-NAME')
    short_name378.text = 'ConstantSpecificationMappingSet'
    ar_package33 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    ar_package33.attrib = {'UUID': '5b7c99d1-d4ef-481b-95e4-0d6975de4f3b'}
    short_name379 = ET.SubElement(ar_package33, 'SHORT-NAME')
    short_name379.text = 'DataConstr'
    elements19 = ET.SubElement(ar_package33, 'ELEMENTS')
    data_constr24 = ET.SubElement(elements19, 'DATA-CONSTR')
    data_constr24.attrib = {'UUID': '78b9384e-7f45-4396-b617-a03a03aaf3ce'}
    short_name380 = ET.SubElement(data_constr24, 'SHORT-NAME')
    short_name380.text = 'DataConstr'
    data_constr_rules24 = ET.SubElement(data_constr24, 'DATA-CONSTR-RULES')
    data_constr_rule24 = ET.SubElement(data_constr_rules24, 'DATA-CONSTR-RULE')
    phys_constrs1 = ET.SubElement(data_constr_rule24, 'PHYS-CONSTRS')
    lower_limit59 = ET.SubElement(phys_constrs1, 'LOWER-LIMIT')
    lower_limit59.text = '0'
    upper_limit59 = ET.SubElement(phys_constrs1, 'UPPER-LIMIT')
    upper_limit59.text = '7'
    ar_package34 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    ar_package34.attrib = {'UUID': '463cbb86-4f8e-463e-8bb3-dafc528ccbdf'}
    short_name381 = ET.SubElement(ar_package34, 'SHORT-NAME')
    short_name381.text = 'DataTypemappingSets'
    elements20 = ET.SubElement(ar_package34, 'ELEMENTS')
    data_type_mapping_set1 = ET.SubElement(elements20, 'DATA-TYPE-MAPPING-SET')
    data_type_mapping_set1.attrib = {'UUID': '84bab728-8c47-495c-a5d4-5290c3551358'}
    short_name382 = ET.SubElement(data_type_mapping_set1, 'SHORT-NAME')
    short_name382.text = 'DataTypeMappingSet'
    data_type_maps1 = ET.SubElement(data_type_mapping_set1, 'DATA-TYPE-MAPS')
    data_type_map1 = ET.SubElement(data_type_maps1, 'DATA-TYPE-MAP')
    application_data_type_ref1 = ET.SubElement(data_type_map1, 'APPLICATION-DATA-TYPE-REF')
    application_data_type_ref1.text = '/SharedElements/ApplicationDataTypes/Array/ApplicationArrayDataType_Fixed'
    application_data_type_ref1.attrib = {'DEST': 'APPLICATION-ARRAY-DATA-TYPE'}
    implementation_data_type_ref19 = ET.SubElement(data_type_map1, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref19.text = '/SharedElements/ImplementationDataTypes/ARRAY_ImplementationDataType'
    implementation_data_type_ref19.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    data_type_map2 = ET.SubElement(data_type_maps1, 'DATA-TYPE-MAP')
    application_data_type_ref2 = ET.SubElement(data_type_map2, 'APPLICATION-DATA-TYPE-REF')
    application_data_type_ref2.text = '/SharedElements/ApplicationDataTypes/Record/ApplicationRecordDataType'
    application_data_type_ref2.attrib = {'DEST': 'APPLICATION-RECORD-DATA-TYPE'}
    implementation_data_type_ref20 = ET.SubElement(data_type_map2, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref20.text = '/SharedElements/ImplementationDataTypes/STRUCTURE_ImplementationDataType1'
    implementation_data_type_ref20.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    data_type_map3 = ET.SubElement(data_type_maps1, 'DATA-TYPE-MAP')
    application_data_type_ref3 = ET.SubElement(data_type_map3, 'APPLICATION-DATA-TYPE-REF')
    application_data_type_ref3.text = '/SharedElements/ApplicationDataTypes/Array/ApplicationArrayDataType_Variable'
    application_data_type_ref3.attrib = {'DEST': 'APPLICATION-ARRAY-DATA-TYPE'}
    implementation_data_type_ref21 = ET.SubElement(data_type_map3, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref21.text = '/SharedElements/ImplementationDataTypes/Struct_Array_ImplementationDataType'
    implementation_data_type_ref21.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    data_type_map4 = ET.SubElement(data_type_maps1, 'DATA-TYPE-MAP')
    application_data_type_ref4 = ET.SubElement(data_type_map4, 'APPLICATION-DATA-TYPE-REF')
    application_data_type_ref4.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    application_data_type_ref4.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    implementation_data_type_ref22 = ET.SubElement(data_type_map4, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref22.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
    implementation_data_type_ref22.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    ar_package35 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    short_name383 = ET.SubElement(ar_package35, 'SHORT-NAME')
    short_name383.text = 'ImplementationDataTypes'
    elements21 = ET.SubElement(ar_package35, 'ELEMENTS')
    implementation_data_type29 = ET.SubElement(elements21, 'IMPLEMENTATION-DATA-TYPE')
    implementation_data_type29.attrib = {'UUID': '21f9a013-317d-4a6a-8c1d-cdc72f7df8f5'}
    short_name384 = ET.SubElement(implementation_data_type29, 'SHORT-NAME')
    short_name384.text = 'ARRAY_ImplementationDataType'
    category87 = ET.SubElement(implementation_data_type29, 'CATEGORY')
    category87.text = 'ARRAY'
    sw_data_def_props48 = ET.SubElement(implementation_data_type29, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants48 = ET.SubElement(sw_data_def_props48, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional48 = ET.SubElement(sw_data_def_props_variants48, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sub_elements3 = ET.SubElement(implementation_data_type29, 'SUB-ELEMENTS')
    implementation_data_type_element8 = ET.SubElement(sub_elements3, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    implementation_data_type_element8.attrib = {'UUID': '5512b8b7-a43f-436f-bb18-47a903ad1e17'}
    short_name385 = ET.SubElement(implementation_data_type_element8, 'SHORT-NAME')
    short_name385.text = 'SubElement'
    category88 = ET.SubElement(implementation_data_type_element8, 'CATEGORY')
    category88.text = 'TYPE_REFERENCE'
    array_size1 = ET.SubElement(implementation_data_type_element8, 'ARRAY-SIZE')
    array_size1.text = '15'
    array_size_semantics4 = ET.SubElement(implementation_data_type_element8, 'ARRAY-SIZE-SEMANTICS')
    array_size_semantics4.text = 'FIXED-SIZE'
    sw_data_def_props49 = ET.SubElement(implementation_data_type_element8, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants49 = ET.SubElement(sw_data_def_props49, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional49 = ET.SubElement(sw_data_def_props_variants49, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref23 = ET.SubElement(sw_data_def_props_conditional49, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref23.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
    implementation_data_type_ref23.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type30 = ET.SubElement(elements21, 'IMPLEMENTATION-DATA-TYPE')
    implementation_data_type30.attrib = {'UUID': 'f01098ff-1c78-439e-9476-11d641870637'}
    short_name386 = ET.SubElement(implementation_data_type30, 'SHORT-NAME')
    short_name386.text = 'ARRAY_ImplementationDataType1'
    category89 = ET.SubElement(implementation_data_type30, 'CATEGORY')
    category89.text = 'ARRAY'
    sub_elements4 = ET.SubElement(implementation_data_type30, 'SUB-ELEMENTS')
    implementation_data_type_element9 = ET.SubElement(sub_elements4, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    implementation_data_type_element9.attrib = {'UUID': 'ee36cc86-25eb-4048-8698-d1ec326fda32'}
    short_name387 = ET.SubElement(implementation_data_type_element9, 'SHORT-NAME')
    short_name387.text = 'SubElement'
    category90 = ET.SubElement(implementation_data_type_element9, 'CATEGORY')
    category90.text = 'TYPE_REFERENCE'
    array_size2 = ET.SubElement(implementation_data_type_element9, 'ARRAY-SIZE')
    array_size2.text = '15'
    array_size_semantics5 = ET.SubElement(implementation_data_type_element9, 'ARRAY-SIZE-SEMANTICS')
    array_size_semantics5.text = 'VARIABLE-SIZE'
    sw_data_def_props50 = ET.SubElement(implementation_data_type_element9, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants50 = ET.SubElement(sw_data_def_props50, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional50 = ET.SubElement(sw_data_def_props_variants50, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref24 = ET.SubElement(sw_data_def_props_conditional50, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref24.text = '/SharedElements/ImplementationDataTypes/STRUCTURE_ImplementationDataType1'
    implementation_data_type_ref24.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type31 = ET.SubElement(elements21, 'IMPLEMENTATION-DATA-TYPE')
    implementation_data_type31.attrib = {'UUID': '77ef0bea-be4b-4dea-b5ea-114e5a3f3d26'}
    short_name388 = ET.SubElement(implementation_data_type31, 'SHORT-NAME')
    short_name388.text = 'ImplementationDataType'
    category91 = ET.SubElement(implementation_data_type31, 'CATEGORY')
    category91.text = 'VALUE'
    sw_data_def_props51 = ET.SubElement(implementation_data_type31, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants51 = ET.SubElement(sw_data_def_props51, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional51 = ET.SubElement(sw_data_def_props_variants51, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    base_type_ref14 = ET.SubElement(sw_data_def_props_conditional51, 'BASE-TYPE-REF')
    base_type_ref14.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint8'
    base_type_ref14.attrib = {'DEST': 'SW-BASE-TYPE'}
    implementation_data_type32 = ET.SubElement(elements21, 'IMPLEMENTATION-DATA-TYPE')
    implementation_data_type32.attrib = {'UUID': '53ec3bfc-5a92-4d42-b31b-8e29e99a2b46'}
    short_name389 = ET.SubElement(implementation_data_type32, 'SHORT-NAME')
    short_name389.text = 'STRUCTURE_ImplementationDataType1'
    category92 = ET.SubElement(implementation_data_type32, 'CATEGORY')
    category92.text = 'STRUCTURE'
    sub_elements5 = ET.SubElement(implementation_data_type32, 'SUB-ELEMENTS')
    implementation_data_type_element10 = ET.SubElement(sub_elements5, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    implementation_data_type_element10.attrib = {'UUID': '31f01782-3ce8-4dbe-81d1-0d5fb89bef99'}
    short_name390 = ET.SubElement(implementation_data_type_element10, 'SHORT-NAME')
    short_name390.text = 'SubElement'
    category93 = ET.SubElement(implementation_data_type_element10, 'CATEGORY')
    category93.text = 'TYPE_REFERENCE'
    sw_data_def_props52 = ET.SubElement(implementation_data_type_element10, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants52 = ET.SubElement(sw_data_def_props52, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional52 = ET.SubElement(sw_data_def_props_variants52, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref25 = ET.SubElement(sw_data_def_props_conditional52, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref25.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
    implementation_data_type_ref25.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type_element11 = ET.SubElement(sub_elements5, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    implementation_data_type_element11.attrib = {'UUID': '83bd06cb-a4ff-4d55-bd3d-1a691b582d46'}
    short_name391 = ET.SubElement(implementation_data_type_element11, 'SHORT-NAME')
    short_name391.text = 'SubElement1'
    category94 = ET.SubElement(implementation_data_type_element11, 'CATEGORY')
    category94.text = 'TYPE_REFERENCE'
    sw_data_def_props53 = ET.SubElement(implementation_data_type_element11, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants53 = ET.SubElement(sw_data_def_props53, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional53 = ET.SubElement(sw_data_def_props_variants53, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref26 = ET.SubElement(sw_data_def_props_conditional53, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref26.text = '/SharedElements/ImplementationDataTypes/ARRAY_ImplementationDataType'
    implementation_data_type_ref26.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type33 = ET.SubElement(elements21, 'IMPLEMENTATION-DATA-TYPE')
    implementation_data_type33.attrib = {'UUID': 'ccd15817-26a8-424d-8c87-3f3d70b5ee9d'}
    short_name392 = ET.SubElement(implementation_data_type33, 'SHORT-NAME')
    short_name392.text = 'Struct_Array_ImplementationDataType'
    category95 = ET.SubElement(implementation_data_type33, 'CATEGORY')
    category95.text = 'STRUCTURE'
    sub_elements6 = ET.SubElement(implementation_data_type33, 'SUB-ELEMENTS')
    implementation_data_type_element12 = ET.SubElement(sub_elements6, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    implementation_data_type_element12.attrib = {'UUID': '3f61bc0d-d829-4ab0-9e22-7de6a25972e3'}
    short_name393 = ET.SubElement(implementation_data_type_element12, 'SHORT-NAME')
    short_name393.text = 'SubElement1'
    category96 = ET.SubElement(implementation_data_type_element12, 'CATEGORY')
    category96.text = 'TYPE_REFERENCE'
    sw_data_def_props54 = ET.SubElement(implementation_data_type_element12, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants54 = ET.SubElement(sw_data_def_props54, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional54 = ET.SubElement(sw_data_def_props_variants54, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref27 = ET.SubElement(sw_data_def_props_conditional54, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref27.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    implementation_data_type_ref27.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    implementation_data_type_element13 = ET.SubElement(sub_elements6, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    implementation_data_type_element13.attrib = {'UUID': 'dc530c9c-3b65-4707-99c3-842e2d2b7788'}
    short_name394 = ET.SubElement(implementation_data_type_element13, 'SHORT-NAME')
    short_name394.text = 'SubElement'
    category97 = ET.SubElement(implementation_data_type_element13, 'CATEGORY')
    category97.text = 'ARRAY'
    sub_elements7 = ET.SubElement(implementation_data_type_element13, 'SUB-ELEMENTS')
    implementation_data_type_element14 = ET.SubElement(sub_elements7, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
    implementation_data_type_element14.attrib = {'UUID': 'af21d788-9aea-4789-b7d0-8665f2d0c8c7'}
    short_name395 = ET.SubElement(implementation_data_type_element14, 'SHORT-NAME')
    short_name395.text = 'SubElement'
    category98 = ET.SubElement(implementation_data_type_element14, 'CATEGORY')
    category98.text = 'TYPE_REFERENCE'
    array_size3 = ET.SubElement(implementation_data_type_element14, 'ARRAY-SIZE')
    array_size3.text = '15'
    array_size_semantics6 = ET.SubElement(implementation_data_type_element14, 'ARRAY-SIZE-SEMANTICS')
    array_size_semantics6.text = 'VARIABLE-SIZE'
    sw_data_def_props55 = ET.SubElement(implementation_data_type_element14, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants55 = ET.SubElement(sw_data_def_props55, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional55 = ET.SubElement(sw_data_def_props_variants55, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref28 = ET.SubElement(sw_data_def_props_conditional55, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref28.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
    implementation_data_type_ref28.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sw_data_def_props56 = ET.SubElement(implementation_data_type_element13, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants56 = ET.SubElement(sw_data_def_props56, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional56 = ET.SubElement(sw_data_def_props_variants56, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type34 = ET.SubElement(elements21, 'IMPLEMENTATION-DATA-TYPE')
    implementation_data_type34.attrib = {'UUID': '79fa9e8f-a805-43da-b4b5-ac42d2a23ff0'}
    short_name396 = ET.SubElement(implementation_data_type34, 'SHORT-NAME')
    short_name396.text = 'TypeTref_ImplementationDataType'
    category99 = ET.SubElement(implementation_data_type34, 'CATEGORY')
    category99.text = 'TYPE_REFERENCE'
    sw_data_def_props57 = ET.SubElement(implementation_data_type34, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants57 = ET.SubElement(sw_data_def_props57, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional57 = ET.SubElement(sw_data_def_props_variants57, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    implementation_data_type_ref29 = ET.SubElement(sw_data_def_props_conditional57, 'IMPLEMENTATION-DATA-TYPE-REF')
    implementation_data_type_ref29.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/float32'
    implementation_data_type_ref29.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    ar_package36 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    short_name397 = ET.SubElement(ar_package36, 'SHORT-NAME')
    short_name397.text = 'PortInterfaces'
    ar_packages10 = ET.SubElement(ar_package36, 'AR-PACKAGES')
    ar_package37 = ET.SubElement(ar_packages10, 'AR-PACKAGE')
    ar_package37.attrib = {'UUID': 'a0d0a13a-15e8-47a3-8169-5f11ad6c7d3f'}
    short_name398 = ET.SubElement(ar_package37, 'SHORT-NAME')
    short_name398.text = 'ClientServer'
    elements22 = ET.SubElement(ar_package37, 'ELEMENTS')
    client_server_interface1 = ET.SubElement(elements22, 'CLIENT-SERVER-INTERFACE')
    client_server_interface1.attrib = {'UUID': 'de068aa3-6af8-4bad-a17f-893dbfa6d08d'}
    short_name399 = ET.SubElement(client_server_interface1, 'SHORT-NAME')
    short_name399.text = 'ClientServerInterface'
    is_service1 = ET.SubElement(client_server_interface1, 'IS-SERVICE')
    is_service1.text = 'false'
    operations1 = ET.SubElement(client_server_interface1, 'OPERATIONS')
    client_server_operation1 = ET.SubElement(operations1, 'CLIENT-SERVER-OPERATION')
    client_server_operation1.attrib = {'UUID': 'f963f5c2-07f7-439d-be71-e8ffb77736cb'}
    short_name400 = ET.SubElement(client_server_operation1, 'SHORT-NAME')
    short_name400.text = 'Operation'
    arguments2 = ET.SubElement(client_server_operation1, 'ARGUMENTS')
    argument_data_prototype1 = ET.SubElement(arguments2, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype1.attrib = {'UUID': '0757643f-ef26-4951-9974-c0ad09b5c8d0'}
    short_name401 = ET.SubElement(argument_data_prototype1, 'SHORT-NAME')
    short_name401.text = 'Argument'
    sw_data_def_props58 = ET.SubElement(argument_data_prototype1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants58 = ET.SubElement(sw_data_def_props58, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional58 = ET.SubElement(sw_data_def_props_variants58, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy3 = ET.SubElement(sw_data_def_props_conditional58, 'SW-IMPL-POLICY')
    sw_impl_policy3.text = 'STANDARD'
    type_tref5 = ET.SubElement(argument_data_prototype1, 'TYPE-TREF')
    type_tref5.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref5.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    direction1 = ET.SubElement(argument_data_prototype1, 'DIRECTION')
    direction1.text = 'IN'
    server_argument_impl_policy1 = ET.SubElement(argument_data_prototype1, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy1.text = 'USE-ARGUMENT-TYPE'
    client_server_operation2 = ET.SubElement(operations1, 'CLIENT-SERVER-OPERATION')
    client_server_operation2.attrib = {'UUID': '9d946ffc-e827-4a3b-9217-80ae67bdce09'}
    short_name402 = ET.SubElement(client_server_operation2, 'SHORT-NAME')
    short_name402.text = 'Operation1'
    arguments3 = ET.SubElement(client_server_operation2, 'ARGUMENTS')
    argument_data_prototype2 = ET.SubElement(arguments3, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype2.attrib = {'UUID': 'fbd7c03a-e379-467c-9efb-5818113f5e64'}
    short_name403 = ET.SubElement(argument_data_prototype2, 'SHORT-NAME')
    short_name403.text = 'Argument'
    sw_data_def_props59 = ET.SubElement(argument_data_prototype2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants59 = ET.SubElement(sw_data_def_props59, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional59 = ET.SubElement(sw_data_def_props_variants59, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy4 = ET.SubElement(sw_data_def_props_conditional59, 'SW-IMPL-POLICY')
    sw_impl_policy4.text = 'STANDARD'
    type_tref6 = ET.SubElement(argument_data_prototype2, 'TYPE-TREF')
    type_tref6.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref6.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    direction2 = ET.SubElement(argument_data_prototype2, 'DIRECTION')
    direction2.text = 'OUT'
    server_argument_impl_policy2 = ET.SubElement(argument_data_prototype2, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy2.text = 'USE-ARGUMENT-TYPE'
    client_server_interface2 = ET.SubElement(elements22, 'CLIENT-SERVER-INTERFACE')
    client_server_interface2.attrib = {'UUID': '68861440-758d-43f6-92a2-fed7438de313'}
    short_name404 = ET.SubElement(client_server_interface2, 'SHORT-NAME')
    short_name404.text = 'Copy2_ClientServerInterface'
    is_service2 = ET.SubElement(client_server_interface2, 'IS-SERVICE')
    is_service2.text = 'false'
    operations2 = ET.SubElement(client_server_interface2, 'OPERATIONS')
    client_server_operation3 = ET.SubElement(operations2, 'CLIENT-SERVER-OPERATION')
    client_server_operation3.attrib = {'UUID': 'dd8cf435-bddb-45bb-a59d-cffcdd11cedd'}
    short_name405 = ET.SubElement(client_server_operation3, 'SHORT-NAME')
    short_name405.text = 'Operation'
    arguments4 = ET.SubElement(client_server_operation3, 'ARGUMENTS')
    argument_data_prototype3 = ET.SubElement(arguments4, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype3.attrib = {'UUID': '474b5949-0760-4780-9d06-6d2b549c40e3'}
    short_name406 = ET.SubElement(argument_data_prototype3, 'SHORT-NAME')
    short_name406.text = 'Argument'
    sw_data_def_props60 = ET.SubElement(argument_data_prototype3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants60 = ET.SubElement(sw_data_def_props60, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional60 = ET.SubElement(sw_data_def_props_variants60, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy5 = ET.SubElement(sw_data_def_props_conditional60, 'SW-IMPL-POLICY')
    sw_impl_policy5.text = 'STANDARD'
    type_tref7 = ET.SubElement(argument_data_prototype3, 'TYPE-TREF')
    type_tref7.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref7.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    direction3 = ET.SubElement(argument_data_prototype3, 'DIRECTION')
    direction3.text = 'IN'
    server_argument_impl_policy3 = ET.SubElement(argument_data_prototype3, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy3.text = 'USE-ARGUMENT-TYPE'
    client_server_operation4 = ET.SubElement(operations2, 'CLIENT-SERVER-OPERATION')
    client_server_operation4.attrib = {'UUID': 'ceba0008-a280-4915-acc8-c4b28afc10c4'}
    short_name407 = ET.SubElement(client_server_operation4, 'SHORT-NAME')
    short_name407.text = 'Operation1'
    arguments5 = ET.SubElement(client_server_operation4, 'ARGUMENTS')
    argument_data_prototype4 = ET.SubElement(arguments5, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype4.attrib = {'UUID': '48e7b87f-8674-441c-bc3e-b6143e20802e'}
    short_name408 = ET.SubElement(argument_data_prototype4, 'SHORT-NAME')
    short_name408.text = 'Argument'
    sw_data_def_props61 = ET.SubElement(argument_data_prototype4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants61 = ET.SubElement(sw_data_def_props61, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional61 = ET.SubElement(sw_data_def_props_variants61, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy6 = ET.SubElement(sw_data_def_props_conditional61, 'SW-IMPL-POLICY')
    sw_impl_policy6.text = 'STANDARD'
    type_tref8 = ET.SubElement(argument_data_prototype4, 'TYPE-TREF')
    type_tref8.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref8.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    direction4 = ET.SubElement(argument_data_prototype4, 'DIRECTION')
    direction4.text = 'OUT'
    server_argument_impl_policy4 = ET.SubElement(argument_data_prototype4, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy4.text = 'USE-ARGUMENT-TYPE'
    client_server_interface3 = ET.SubElement(elements22, 'CLIENT-SERVER-INTERFACE')
    client_server_interface3.attrib = {'UUID': '9b8ada7b-e7a9-49d6-a945-db726b3bd1f9'}
    short_name409 = ET.SubElement(client_server_interface3, 'SHORT-NAME')
    short_name409.text = 'Copy3_ClientServerInterface'
    is_service3 = ET.SubElement(client_server_interface3, 'IS-SERVICE')
    is_service3.text = 'false'
    operations3 = ET.SubElement(client_server_interface3, 'OPERATIONS')
    client_server_operation5 = ET.SubElement(operations3, 'CLIENT-SERVER-OPERATION')
    client_server_operation5.attrib = {'UUID': '8b64e196-a577-4332-a8f2-8e907214f2ac'}
    short_name410 = ET.SubElement(client_server_operation5, 'SHORT-NAME')
    short_name410.text = 'Operation'
    arguments6 = ET.SubElement(client_server_operation5, 'ARGUMENTS')
    argument_data_prototype5 = ET.SubElement(arguments6, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype5.attrib = {'UUID': 'cf106dae-c79b-4cea-a011-2d5ff268ac3e'}
    short_name411 = ET.SubElement(argument_data_prototype5, 'SHORT-NAME')
    short_name411.text = 'Argument'
    sw_data_def_props62 = ET.SubElement(argument_data_prototype5, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants62 = ET.SubElement(sw_data_def_props62, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional62 = ET.SubElement(sw_data_def_props_variants62, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy7 = ET.SubElement(sw_data_def_props_conditional62, 'SW-IMPL-POLICY')
    sw_impl_policy7.text = 'STANDARD'
    type_tref9 = ET.SubElement(argument_data_prototype5, 'TYPE-TREF')
    type_tref9.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref9.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    direction5 = ET.SubElement(argument_data_prototype5, 'DIRECTION')
    direction5.text = 'IN'
    server_argument_impl_policy5 = ET.SubElement(argument_data_prototype5, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy5.text = 'USE-ARGUMENT-TYPE'
    client_server_operation6 = ET.SubElement(operations3, 'CLIENT-SERVER-OPERATION')
    client_server_operation6.attrib = {'UUID': '03f0b7d8-222c-465d-9663-185446b9f092'}
    short_name412 = ET.SubElement(client_server_operation6, 'SHORT-NAME')
    short_name412.text = 'Operation1'
    arguments7 = ET.SubElement(client_server_operation6, 'ARGUMENTS')
    argument_data_prototype6 = ET.SubElement(arguments7, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype6.attrib = {'UUID': '9fe53cee-82db-4c74-887a-137d3260eae6'}
    short_name413 = ET.SubElement(argument_data_prototype6, 'SHORT-NAME')
    short_name413.text = 'Argument'
    sw_data_def_props63 = ET.SubElement(argument_data_prototype6, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants63 = ET.SubElement(sw_data_def_props63, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional63 = ET.SubElement(sw_data_def_props_variants63, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy8 = ET.SubElement(sw_data_def_props_conditional63, 'SW-IMPL-POLICY')
    sw_impl_policy8.text = 'STANDARD'
    type_tref10 = ET.SubElement(argument_data_prototype6, 'TYPE-TREF')
    type_tref10.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref10.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    direction6 = ET.SubElement(argument_data_prototype6, 'DIRECTION')
    direction6.text = 'OUT'
    server_argument_impl_policy6 = ET.SubElement(argument_data_prototype6, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy6.text = 'USE-ARGUMENT-TYPE'
    client_server_interface4 = ET.SubElement(elements22, 'CLIENT-SERVER-INTERFACE')
    client_server_interface4.attrib = {'UUID': 'bc94762b-35e3-49e1-ae8b-70bc63394d9c'}
    short_name414 = ET.SubElement(client_server_interface4, 'SHORT-NAME')
    short_name414.text = 'Copy4_ClientServerInterface'
    is_service4 = ET.SubElement(client_server_interface4, 'IS-SERVICE')
    is_service4.text = 'false'
    operations4 = ET.SubElement(client_server_interface4, 'OPERATIONS')
    client_server_operation7 = ET.SubElement(operations4, 'CLIENT-SERVER-OPERATION')
    client_server_operation7.attrib = {'UUID': '4f953ec5-5e57-4a1c-bcf2-9eba8fde4ddd'}
    short_name415 = ET.SubElement(client_server_operation7, 'SHORT-NAME')
    short_name415.text = 'Operation'
    arguments8 = ET.SubElement(client_server_operation7, 'ARGUMENTS')
    argument_data_prototype7 = ET.SubElement(arguments8, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype7.attrib = {'UUID': '573e55c4-304e-48a7-ae98-47c7744d4415'}
    short_name416 = ET.SubElement(argument_data_prototype7, 'SHORT-NAME')
    short_name416.text = 'Argument'
    sw_data_def_props64 = ET.SubElement(argument_data_prototype7, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants64 = ET.SubElement(sw_data_def_props64, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional64 = ET.SubElement(sw_data_def_props_variants64, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy9 = ET.SubElement(sw_data_def_props_conditional64, 'SW-IMPL-POLICY')
    sw_impl_policy9.text = 'STANDARD'
    type_tref11 = ET.SubElement(argument_data_prototype7, 'TYPE-TREF')
    type_tref11.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref11.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    direction7 = ET.SubElement(argument_data_prototype7, 'DIRECTION')
    direction7.text = 'IN'
    server_argument_impl_policy7 = ET.SubElement(argument_data_prototype7, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy7.text = 'USE-ARGUMENT-TYPE'
    client_server_operation8 = ET.SubElement(operations4, 'CLIENT-SERVER-OPERATION')
    client_server_operation8.attrib = {'UUID': '32dd33c4-e167-4858-93d3-bc02d325d12c'}
    short_name417 = ET.SubElement(client_server_operation8, 'SHORT-NAME')
    short_name417.text = 'Operation1'
    arguments9 = ET.SubElement(client_server_operation8, 'ARGUMENTS')
    argument_data_prototype8 = ET.SubElement(arguments9, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype8.attrib = {'UUID': '28cc5664-0a70-4275-b1a3-3cb7a40597db'}
    short_name418 = ET.SubElement(argument_data_prototype8, 'SHORT-NAME')
    short_name418.text = 'Argument'
    sw_data_def_props65 = ET.SubElement(argument_data_prototype8, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants65 = ET.SubElement(sw_data_def_props65, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional65 = ET.SubElement(sw_data_def_props_variants65, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy10 = ET.SubElement(sw_data_def_props_conditional65, 'SW-IMPL-POLICY')
    sw_impl_policy10.text = 'STANDARD'
    type_tref12 = ET.SubElement(argument_data_prototype8, 'TYPE-TREF')
    type_tref12.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref12.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    direction8 = ET.SubElement(argument_data_prototype8, 'DIRECTION')
    direction8.text = 'OUT'
    server_argument_impl_policy8 = ET.SubElement(argument_data_prototype8, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy8.text = 'USE-ARGUMENT-TYPE'
    client_server_interface5 = ET.SubElement(elements22, 'CLIENT-SERVER-INTERFACE')
    client_server_interface5.attrib = {'UUID': 'ad797ff8-41de-49b7-a6c3-c2dd864f60dd'}
    short_name419 = ET.SubElement(client_server_interface5, 'SHORT-NAME')
    short_name419.text = 'Copy_ClientServerInterface'
    is_service5 = ET.SubElement(client_server_interface5, 'IS-SERVICE')
    is_service5.text = 'false'
    operations5 = ET.SubElement(client_server_interface5, 'OPERATIONS')
    client_server_operation9 = ET.SubElement(operations5, 'CLIENT-SERVER-OPERATION')
    client_server_operation9.attrib = {'UUID': '5d536ac2-edd2-4788-b233-5b0ef32a2022'}
    short_name420 = ET.SubElement(client_server_operation9, 'SHORT-NAME')
    short_name420.text = 'Operation'
    arguments10 = ET.SubElement(client_server_operation9, 'ARGUMENTS')
    argument_data_prototype9 = ET.SubElement(arguments10, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype9.attrib = {'UUID': '174674f0-498e-41bc-9667-2459277f62ea'}
    short_name421 = ET.SubElement(argument_data_prototype9, 'SHORT-NAME')
    short_name421.text = 'Argument'
    sw_data_def_props66 = ET.SubElement(argument_data_prototype9, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants66 = ET.SubElement(sw_data_def_props66, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional66 = ET.SubElement(sw_data_def_props_variants66, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy11 = ET.SubElement(sw_data_def_props_conditional66, 'SW-IMPL-POLICY')
    sw_impl_policy11.text = 'STANDARD'
    type_tref13 = ET.SubElement(argument_data_prototype9, 'TYPE-TREF')
    type_tref13.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref13.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    direction9 = ET.SubElement(argument_data_prototype9, 'DIRECTION')
    direction9.text = 'IN'
    server_argument_impl_policy9 = ET.SubElement(argument_data_prototype9, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy9.text = 'USE-ARGUMENT-TYPE'
    client_server_operation10 = ET.SubElement(operations5, 'CLIENT-SERVER-OPERATION')
    client_server_operation10.attrib = {'UUID': 'be00c41e-3412-411d-ad74-a6a0feee0ecd'}
    short_name422 = ET.SubElement(client_server_operation10, 'SHORT-NAME')
    short_name422.text = 'Operation1'
    arguments11 = ET.SubElement(client_server_operation10, 'ARGUMENTS')
    argument_data_prototype10 = ET.SubElement(arguments11, 'ARGUMENT-DATA-PROTOTYPE')
    argument_data_prototype10.attrib = {'UUID': '8c68ce17-1680-4ec1-951d-9d9c871aca06'}
    short_name423 = ET.SubElement(argument_data_prototype10, 'SHORT-NAME')
    short_name423.text = 'Argument'
    sw_data_def_props67 = ET.SubElement(argument_data_prototype10, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants67 = ET.SubElement(sw_data_def_props67, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional67 = ET.SubElement(sw_data_def_props_variants67, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy12 = ET.SubElement(sw_data_def_props_conditional67, 'SW-IMPL-POLICY')
    sw_impl_policy12.text = 'STANDARD'
    type_tref14 = ET.SubElement(argument_data_prototype10, 'TYPE-TREF')
    type_tref14.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref14.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    direction10 = ET.SubElement(argument_data_prototype10, 'DIRECTION')
    direction10.text = 'OUT'
    server_argument_impl_policy10 = ET.SubElement(argument_data_prototype10, 'SERVER-ARGUMENT-IMPL-POLICY')
    server_argument_impl_policy10.text = 'USE-ARGUMENT-TYPE'
    ar_package38 = ET.SubElement(ar_packages10, 'AR-PACKAGE')
    ar_package38.attrib = {'UUID': '3503a605-12c8-44be-96cf-4ad548d5d58f'}
    short_name424 = ET.SubElement(ar_package38, 'SHORT-NAME')
    short_name424.text = 'ModeSwitch'
    elements23 = ET.SubElement(ar_package38, 'ELEMENTS')
    mode_declaration_group1 = ET.SubElement(elements23, 'MODE-DECLARATION-GROUP')
    mode_declaration_group1.attrib = {'UUID': 'd1db93d0-7154-468f-b3bc-872d23a7385f'}
    short_name425 = ET.SubElement(mode_declaration_group1, 'SHORT-NAME')
    short_name425.text = 'Copy_ModeDeclarationGroup'
    category100 = ET.SubElement(mode_declaration_group1, 'CATEGORY')
    category100.text = 'EXPLICIT_ORDER'
    initial_mode_ref1 = ET.SubElement(mode_declaration_group1, 'INITIAL-MODE-REF')
    initial_mode_ref1.text = '/SharedElements/PortInterfaces/ModeSwitch/Copy_ModeDeclarationGroup/ModeDeclaration'
    initial_mode_ref1.attrib = {'DEST': 'MODE-DECLARATION'}
    mode_declarations1 = ET.SubElement(mode_declaration_group1, 'MODE-DECLARATIONS')
    mode_declaration1 = ET.SubElement(mode_declarations1, 'MODE-DECLARATION')
    mode_declaration1.attrib = {'UUID': '2608f59c-87b0-47b2-8cee-8e9c3ba94cac'}
    short_name426 = ET.SubElement(mode_declaration1, 'SHORT-NAME')
    short_name426.text = 'ModeDeclaration'
    mode_declaration2 = ET.SubElement(mode_declarations1, 'MODE-DECLARATION')
    mode_declaration2.attrib = {'UUID': '7cc2e588-342f-40a3-ad77-b3d49457e996'}
    short_name427 = ET.SubElement(mode_declaration2, 'SHORT-NAME')
    short_name427.text = 'ModeDeclaration1'
    mode_declaration3 = ET.SubElement(mode_declarations1, 'MODE-DECLARATION')
    mode_declaration3.attrib = {'UUID': '278335ee-b40e-4f50-9fc3-164297dafbfd'}
    short_name428 = ET.SubElement(mode_declaration3, 'SHORT-NAME')
    short_name428.text = 'ModeDeclaration2'
    mode_switch_interface1 = ET.SubElement(elements23, 'MODE-SWITCH-INTERFACE')
    mode_switch_interface1.attrib = {'UUID': '359238c5-e830-44a4-b8a0-362c11b6864f'}
    short_name429 = ET.SubElement(mode_switch_interface1, 'SHORT-NAME')
    short_name429.text = 'Copy_ModeSwitchInterface'
    is_service6 = ET.SubElement(mode_switch_interface1, 'IS-SERVICE')
    is_service6.text = 'false'
    mode_group1 = ET.SubElement(mode_switch_interface1, 'MODE-GROUP')
    mode_group1.attrib = {'UUID': '5de6bb25-e952-4b16-ad52-f4692d7da6d9'}
    short_name430 = ET.SubElement(mode_group1, 'SHORT-NAME')
    short_name430.text = 'ModeGroup'
    type_tref15 = ET.SubElement(mode_group1, 'TYPE-TREF')
    type_tref15.text = '/SharedElements/PortInterfaces/ModeSwitch/Copy_ModeDeclarationGroup'
    type_tref15.attrib = {'DEST': 'MODE-DECLARATION-GROUP'}
    mode_declaration_group2 = ET.SubElement(elements23, 'MODE-DECLARATION-GROUP')
    mode_declaration_group2.attrib = {'UUID': 'b9ed1cc5-6caf-43d0-b094-3c763b6cbb9a'}
    short_name431 = ET.SubElement(mode_declaration_group2, 'SHORT-NAME')
    short_name431.text = 'ModeDeclarationGroup'
    category101 = ET.SubElement(mode_declaration_group2, 'CATEGORY')
    category101.text = 'ALPHABETIC_ORDER'
    initial_mode_ref2 = ET.SubElement(mode_declaration_group2, 'INITIAL-MODE-REF')
    initial_mode_ref2.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeDeclarationGroup/ModeDeclaration'
    initial_mode_ref2.attrib = {'DEST': 'MODE-DECLARATION'}
    mode_declarations2 = ET.SubElement(mode_declaration_group2, 'MODE-DECLARATIONS')
    mode_declaration4 = ET.SubElement(mode_declarations2, 'MODE-DECLARATION')
    mode_declaration4.attrib = {'UUID': 'c1fb19b0-d635-4deb-a718-37e3d20b8878'}
    short_name432 = ET.SubElement(mode_declaration4, 'SHORT-NAME')
    short_name432.text = 'ModeDeclaration'
    mode_declaration5 = ET.SubElement(mode_declarations2, 'MODE-DECLARATION')
    mode_declaration5.attrib = {'UUID': 'a586eb27-c099-42ab-b553-a0fd227d1fe5'}
    short_name433 = ET.SubElement(mode_declaration5, 'SHORT-NAME')
    short_name433.text = 'ModeDeclaration1'
    mode_declaration6 = ET.SubElement(mode_declarations2, 'MODE-DECLARATION')
    mode_declaration6.attrib = {'UUID': 'a891dd23-e1f6-41f0-b669-b383af7bd17e'}
    short_name434 = ET.SubElement(mode_declaration6, 'SHORT-NAME')
    short_name434.text = 'ModeDeclaration2'
    mode_switch_interface2 = ET.SubElement(elements23, 'MODE-SWITCH-INTERFACE')
    mode_switch_interface2.attrib = {'UUID': '949dcf4f-08eb-4d99-8504-1c613d93f5e9'}
    short_name435 = ET.SubElement(mode_switch_interface2, 'SHORT-NAME')
    short_name435.text = 'ModeSwitchInterface'
    is_service7 = ET.SubElement(mode_switch_interface2, 'IS-SERVICE')
    is_service7.text = 'false'
    mode_group2 = ET.SubElement(mode_switch_interface2, 'MODE-GROUP')
    mode_group2.attrib = {'UUID': '26ede937-ce36-4065-93e5-d8bca12d51cd'}
    short_name436 = ET.SubElement(mode_group2, 'SHORT-NAME')
    short_name436.text = 'ModeGroup'
    type_tref16 = ET.SubElement(mode_group2, 'TYPE-TREF')
    type_tref16.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeDeclarationGroup'
    type_tref16.attrib = {'DEST': 'MODE-DECLARATION-GROUP'}
    ar_package39 = ET.SubElement(ar_packages10, 'AR-PACKAGE')
    ar_package39.attrib = {'UUID': '07677b4a-bc79-4c7b-afa1-581ad642a3dd'}
    short_name437 = ET.SubElement(ar_package39, 'SHORT-NAME')
    short_name437.text = 'NvData'
    elements24 = ET.SubElement(ar_package39, 'ELEMENTS')
    nv_data_interface1 = ET.SubElement(elements24, 'NV-DATA-INTERFACE')
    nv_data_interface1.attrib = {'UUID': '8a4989b3-88e2-4e47-b98f-591e75c76b17'}
    short_name438 = ET.SubElement(nv_data_interface1, 'SHORT-NAME')
    short_name438.text = 'NvDataInterface'
    is_service8 = ET.SubElement(nv_data_interface1, 'IS-SERVICE')
    is_service8.text = 'false'
    nv_datas1 = ET.SubElement(nv_data_interface1, 'NV-DATAS')
    variable_data_prototype1 = ET.SubElement(nv_datas1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype1.attrib = {'UUID': '8a84bf2f-0e49-4923-bbc2-7a6606812ef4'}
    short_name439 = ET.SubElement(variable_data_prototype1, 'SHORT-NAME')
    short_name439.text = 'NvData'
    sw_data_def_props68 = ET.SubElement(variable_data_prototype1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants68 = ET.SubElement(sw_data_def_props68, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional68 = ET.SubElement(sw_data_def_props_variants68, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy13 = ET.SubElement(sw_data_def_props_conditional68, 'SW-IMPL-POLICY')
    sw_impl_policy13.text = 'STANDARD'
    type_tref17 = ET.SubElement(variable_data_prototype1, 'TYPE-TREF')
    type_tref17.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref17.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    variable_data_prototype2 = ET.SubElement(nv_datas1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype2.attrib = {'UUID': '4437f330-788c-4fb4-92e5-9545dfdbd9f0'}
    short_name440 = ET.SubElement(variable_data_prototype2, 'SHORT-NAME')
    short_name440.text = 'NvData1'
    sw_data_def_props69 = ET.SubElement(variable_data_prototype2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants69 = ET.SubElement(sw_data_def_props69, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional69 = ET.SubElement(sw_data_def_props_variants69, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy14 = ET.SubElement(sw_data_def_props_conditional69, 'SW-IMPL-POLICY')
    sw_impl_policy14.text = 'STANDARD'
    type_tref18 = ET.SubElement(variable_data_prototype2, 'TYPE-TREF')
    type_tref18.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/float64'
    type_tref18.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    ar_package40 = ET.SubElement(ar_packages10, 'AR-PACKAGE')
    ar_package40.attrib = {'UUID': '9b48ec34-87aa-4f84-9080-1d3f919ca090'}
    short_name441 = ET.SubElement(ar_package40, 'SHORT-NAME')
    short_name441.text = 'Parameter'
    elements25 = ET.SubElement(ar_package40, 'ELEMENTS')
    parameter_interface1 = ET.SubElement(elements25, 'PARAMETER-INTERFACE')
    parameter_interface1.attrib = {'UUID': '618ca0ee-adf8-43c1-b898-33ea5ca916d8'}
    short_name442 = ET.SubElement(parameter_interface1, 'SHORT-NAME')
    short_name442.text = 'ParameterInterface'
    is_service9 = ET.SubElement(parameter_interface1, 'IS-SERVICE')
    is_service9.text = 'false'
    parameters1 = ET.SubElement(parameter_interface1, 'PARAMETERS')
    parameter_data_prototype1 = ET.SubElement(parameters1, 'PARAMETER-DATA-PROTOTYPE')
    parameter_data_prototype1.attrib = {'UUID': 'd359a294-51b2-461a-b7fb-0de80cf2598a'}
    short_name443 = ET.SubElement(parameter_data_prototype1, 'SHORT-NAME')
    short_name443.text = 'Parameter'
    sw_data_def_props70 = ET.SubElement(parameter_data_prototype1, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants70 = ET.SubElement(sw_data_def_props70, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional70 = ET.SubElement(sw_data_def_props_variants70, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access5 = ET.SubElement(sw_data_def_props_conditional70, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access5.text = 'READ-WRITE'
    sw_impl_policy15 = ET.SubElement(sw_data_def_props_conditional70, 'SW-IMPL-POLICY')
    sw_impl_policy15.text = 'STANDARD'
    type_tref19 = ET.SubElement(parameter_data_prototype1, 'TYPE-TREF')
    type_tref19.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/float32'
    type_tref19.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    parameter_data_prototype2 = ET.SubElement(parameters1, 'PARAMETER-DATA-PROTOTYPE')
    parameter_data_prototype2.attrib = {'UUID': 'a60e4821-63b4-4fa4-9f04-983264b2a55f'}
    short_name444 = ET.SubElement(parameter_data_prototype2, 'SHORT-NAME')
    short_name444.text = 'Parameter1'
    sw_data_def_props71 = ET.SubElement(parameter_data_prototype2, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants71 = ET.SubElement(sw_data_def_props71, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional71 = ET.SubElement(sw_data_def_props_variants71, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access6 = ET.SubElement(sw_data_def_props_conditional71, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access6.text = 'READ-WRITE'
    sw_impl_policy16 = ET.SubElement(sw_data_def_props_conditional71, 'SW-IMPL-POLICY')
    sw_impl_policy16.text = 'STANDARD'
    type_tref20 = ET.SubElement(parameter_data_prototype2, 'TYPE-TREF')
    type_tref20.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref20.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    ar_package41 = ET.SubElement(ar_packages10, 'AR-PACKAGE')
    ar_package41.attrib = {'UUID': '304f7bbd-15e6-4f85-b22f-4b02c9a5631c'}
    short_name445 = ET.SubElement(ar_package41, 'SHORT-NAME')
    short_name445.text = 'SenderReceiver'
    elements26 = ET.SubElement(ar_package41, 'ELEMENTS')
    sender_receiver_interface1 = ET.SubElement(elements26, 'SENDER-RECEIVER-INTERFACE')
    sender_receiver_interface1.attrib = {'UUID': '5301b51c-ab80-4717-880a-f53963ebb47d'}
    short_name446 = ET.SubElement(sender_receiver_interface1, 'SHORT-NAME')
    short_name446.text = 'Copy2_SenderReceiverInterface'
    is_service10 = ET.SubElement(sender_receiver_interface1, 'IS-SERVICE')
    is_service10.text = 'false'
    data_elements1 = ET.SubElement(sender_receiver_interface1, 'DATA-ELEMENTS')
    variable_data_prototype3 = ET.SubElement(data_elements1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype3.attrib = {'UUID': 'd071c034-64ed-44d0-81f0-a0735e373ce3'}
    short_name447 = ET.SubElement(variable_data_prototype3, 'SHORT-NAME')
    short_name447.text = 'DataElement'
    sw_data_def_props72 = ET.SubElement(variable_data_prototype3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants72 = ET.SubElement(sw_data_def_props72, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional72 = ET.SubElement(sw_data_def_props_variants72, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access7 = ET.SubElement(sw_data_def_props_conditional72, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access7.text = 'READ-WRITE'
    sw_impl_policy17 = ET.SubElement(sw_data_def_props_conditional72, 'SW-IMPL-POLICY')
    sw_impl_policy17.text = 'STANDARD'
    type_tref21 = ET.SubElement(variable_data_prototype3, 'TYPE-TREF')
    type_tref21.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/boolean'
    type_tref21.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    variable_data_prototype4 = ET.SubElement(data_elements1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype4.attrib = {'UUID': '3afe6629-f986-4006-9ecf-b2902644f64e'}
    short_name448 = ET.SubElement(variable_data_prototype4, 'SHORT-NAME')
    short_name448.text = 'DataElement1'
    sw_data_def_props73 = ET.SubElement(variable_data_prototype4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants73 = ET.SubElement(sw_data_def_props73, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional73 = ET.SubElement(sw_data_def_props_variants73, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy18 = ET.SubElement(sw_data_def_props_conditional73, 'SW-IMPL-POLICY')
    sw_impl_policy18.text = 'STANDARD'
    type_tref22 = ET.SubElement(variable_data_prototype4, 'TYPE-TREF')
    type_tref22.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
    type_tref22.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sender_receiver_interface2 = ET.SubElement(elements26, 'SENDER-RECEIVER-INTERFACE')
    sender_receiver_interface2.attrib = {'UUID': 'b4591ad1-c21f-4706-8eac-55f6169b8c96'}
    short_name449 = ET.SubElement(sender_receiver_interface2, 'SHORT-NAME')
    short_name449.text = 'Copy3_SenderReceiverInterface'
    is_service11 = ET.SubElement(sender_receiver_interface2, 'IS-SERVICE')
    is_service11.text = 'false'
    data_elements2 = ET.SubElement(sender_receiver_interface2, 'DATA-ELEMENTS')
    variable_data_prototype5 = ET.SubElement(data_elements2, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype5.attrib = {'UUID': 'dd322790-2f29-43dc-93a0-10c5addc7871'}
    short_name450 = ET.SubElement(variable_data_prototype5, 'SHORT-NAME')
    short_name450.text = 'DataElement'
    sw_data_def_props74 = ET.SubElement(variable_data_prototype5, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants74 = ET.SubElement(sw_data_def_props74, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional74 = ET.SubElement(sw_data_def_props_variants74, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access8 = ET.SubElement(sw_data_def_props_conditional74, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access8.text = 'READ-WRITE'
    sw_impl_policy19 = ET.SubElement(sw_data_def_props_conditional74, 'SW-IMPL-POLICY')
    sw_impl_policy19.text = 'STANDARD'
    type_tref23 = ET.SubElement(variable_data_prototype5, 'TYPE-TREF')
    type_tref23.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/boolean'
    type_tref23.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    variable_data_prototype6 = ET.SubElement(data_elements2, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype6.attrib = {'UUID': '27292aab-8793-404f-b1d0-3128a4ab29bf'}
    short_name451 = ET.SubElement(variable_data_prototype6, 'SHORT-NAME')
    short_name451.text = 'DataElement1'
    sw_data_def_props75 = ET.SubElement(variable_data_prototype6, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants75 = ET.SubElement(sw_data_def_props75, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional75 = ET.SubElement(sw_data_def_props_variants75, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy20 = ET.SubElement(sw_data_def_props_conditional75, 'SW-IMPL-POLICY')
    sw_impl_policy20.text = 'STANDARD'
    type_tref24 = ET.SubElement(variable_data_prototype6, 'TYPE-TREF')
    type_tref24.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
    type_tref24.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sender_receiver_interface3 = ET.SubElement(elements26, 'SENDER-RECEIVER-INTERFACE')
    sender_receiver_interface3.attrib = {'UUID': 'e5b1f8fc-9e46-4d58-b278-cb3461917783'}
    short_name452 = ET.SubElement(sender_receiver_interface3, 'SHORT-NAME')
    short_name452.text = 'Copy4_SenderReceiverInterface'
    is_service12 = ET.SubElement(sender_receiver_interface3, 'IS-SERVICE')
    is_service12.text = 'false'
    data_elements3 = ET.SubElement(sender_receiver_interface3, 'DATA-ELEMENTS')
    variable_data_prototype7 = ET.SubElement(data_elements3, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype7.attrib = {'UUID': '81fa7709-76a3-4e64-8ab6-0302340d9596'}
    short_name453 = ET.SubElement(variable_data_prototype7, 'SHORT-NAME')
    short_name453.text = 'DataElement'
    sw_data_def_props76 = ET.SubElement(variable_data_prototype7, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants76 = ET.SubElement(sw_data_def_props76, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional76 = ET.SubElement(sw_data_def_props_variants76, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access9 = ET.SubElement(sw_data_def_props_conditional76, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access9.text = 'READ-WRITE'
    sw_impl_policy21 = ET.SubElement(sw_data_def_props_conditional76, 'SW-IMPL-POLICY')
    sw_impl_policy21.text = 'STANDARD'
    type_tref25 = ET.SubElement(variable_data_prototype7, 'TYPE-TREF')
    type_tref25.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/boolean'
    type_tref25.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    variable_data_prototype8 = ET.SubElement(data_elements3, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype8.attrib = {'UUID': '4139b239-b260-44f9-a1b9-26592a9702b7'}
    short_name454 = ET.SubElement(variable_data_prototype8, 'SHORT-NAME')
    short_name454.text = 'DataElement1'
    sw_data_def_props77 = ET.SubElement(variable_data_prototype8, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants77 = ET.SubElement(sw_data_def_props77, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional77 = ET.SubElement(sw_data_def_props_variants77, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy22 = ET.SubElement(sw_data_def_props_conditional77, 'SW-IMPL-POLICY')
    sw_impl_policy22.text = 'STANDARD'
    type_tref26 = ET.SubElement(variable_data_prototype8, 'TYPE-TREF')
    type_tref26.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
    type_tref26.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sender_receiver_interface4 = ET.SubElement(elements26, 'SENDER-RECEIVER-INTERFACE')
    sender_receiver_interface4.attrib = {'UUID': '67583438-372e-4f89-aad7-44d221ba987e'}
    short_name455 = ET.SubElement(sender_receiver_interface4, 'SHORT-NAME')
    short_name455.text = 'Copy5_SenderReceiverInterface'
    is_service13 = ET.SubElement(sender_receiver_interface4, 'IS-SERVICE')
    is_service13.text = 'false'
    data_elements4 = ET.SubElement(sender_receiver_interface4, 'DATA-ELEMENTS')
    variable_data_prototype9 = ET.SubElement(data_elements4, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype9.attrib = {'UUID': 'b67450ea-eee7-49cd-9e1b-696114cdc06b'}
    short_name456 = ET.SubElement(variable_data_prototype9, 'SHORT-NAME')
    short_name456.text = 'DataElement'
    sw_data_def_props78 = ET.SubElement(variable_data_prototype9, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants78 = ET.SubElement(sw_data_def_props78, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional78 = ET.SubElement(sw_data_def_props_variants78, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access10 = ET.SubElement(sw_data_def_props_conditional78, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access10.text = 'READ-WRITE'
    sw_impl_policy23 = ET.SubElement(sw_data_def_props_conditional78, 'SW-IMPL-POLICY')
    sw_impl_policy23.text = 'STANDARD'
    type_tref27 = ET.SubElement(variable_data_prototype9, 'TYPE-TREF')
    type_tref27.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/boolean'
    type_tref27.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    variable_data_prototype10 = ET.SubElement(data_elements4, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype10.attrib = {'UUID': '6616174f-78ab-48e5-b54f-f0ac623eefa6'}
    short_name457 = ET.SubElement(variable_data_prototype10, 'SHORT-NAME')
    short_name457.text = 'DataElement1'
    sw_data_def_props79 = ET.SubElement(variable_data_prototype10, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants79 = ET.SubElement(sw_data_def_props79, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional79 = ET.SubElement(sw_data_def_props_variants79, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy24 = ET.SubElement(sw_data_def_props_conditional79, 'SW-IMPL-POLICY')
    sw_impl_policy24.text = 'STANDARD'
    type_tref28 = ET.SubElement(variable_data_prototype10, 'TYPE-TREF')
    type_tref28.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
    type_tref28.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sender_receiver_interface5 = ET.SubElement(elements26, 'SENDER-RECEIVER-INTERFACE')
    sender_receiver_interface5.attrib = {'UUID': 'c0a51d5f-0a8c-4bdc-a77d-03a338508c6b'}
    short_name458 = ET.SubElement(sender_receiver_interface5, 'SHORT-NAME')
    short_name458.text = 'Copy_SenderReceiverInterface'
    is_service14 = ET.SubElement(sender_receiver_interface5, 'IS-SERVICE')
    is_service14.text = 'false'
    data_elements5 = ET.SubElement(sender_receiver_interface5, 'DATA-ELEMENTS')
    variable_data_prototype11 = ET.SubElement(data_elements5, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype11.attrib = {'UUID': 'b7a89eaf-844f-4e6d-b357-dc9976ba211e'}
    short_name459 = ET.SubElement(variable_data_prototype11, 'SHORT-NAME')
    short_name459.text = 'DataElement'
    sw_data_def_props80 = ET.SubElement(variable_data_prototype11, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants80 = ET.SubElement(sw_data_def_props80, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional80 = ET.SubElement(sw_data_def_props_variants80, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access11 = ET.SubElement(sw_data_def_props_conditional80, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access11.text = 'READ-WRITE'
    sw_impl_policy25 = ET.SubElement(sw_data_def_props_conditional80, 'SW-IMPL-POLICY')
    sw_impl_policy25.text = 'STANDARD'
    type_tref29 = ET.SubElement(variable_data_prototype11, 'TYPE-TREF')
    type_tref29.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/boolean'
    type_tref29.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    variable_data_prototype12 = ET.SubElement(data_elements5, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype12.attrib = {'UUID': '373c6d56-b664-4bba-b6bf-37630aed9fef'}
    short_name460 = ET.SubElement(variable_data_prototype12, 'SHORT-NAME')
    short_name460.text = 'DataElement1'
    sw_data_def_props81 = ET.SubElement(variable_data_prototype12, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants81 = ET.SubElement(sw_data_def_props81, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional81 = ET.SubElement(sw_data_def_props_variants81, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy26 = ET.SubElement(sw_data_def_props_conditional81, 'SW-IMPL-POLICY')
    sw_impl_policy26.text = 'STANDARD'
    type_tref30 = ET.SubElement(variable_data_prototype12, 'TYPE-TREF')
    type_tref30.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
    type_tref30.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    sender_receiver_interface6 = ET.SubElement(elements26, 'SENDER-RECEIVER-INTERFACE')
    sender_receiver_interface6.attrib = {'UUID': '5f56a3f5-0f22-429f-a8b9-003d68bbc759'}
    short_name461 = ET.SubElement(sender_receiver_interface6, 'SHORT-NAME')
    short_name461.text = 'SenderReceiverInterface'
    is_service15 = ET.SubElement(sender_receiver_interface6, 'IS-SERVICE')
    is_service15.text = 'false'
    data_elements6 = ET.SubElement(sender_receiver_interface6, 'DATA-ELEMENTS')
    variable_data_prototype13 = ET.SubElement(data_elements6, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype13.attrib = {'UUID': 'c448fbc4-20d2-443d-bb7a-87585742cfcf'}
    short_name462 = ET.SubElement(variable_data_prototype13, 'SHORT-NAME')
    short_name462.text = 'DataElement'
    sw_data_def_props82 = ET.SubElement(variable_data_prototype13, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants82 = ET.SubElement(sw_data_def_props82, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional82 = ET.SubElement(sw_data_def_props_variants82, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access12 = ET.SubElement(sw_data_def_props_conditional82, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access12.text = 'READ-WRITE'
    sw_impl_policy27 = ET.SubElement(sw_data_def_props_conditional82, 'SW-IMPL-POLICY')
    sw_impl_policy27.text = 'STANDARD'
    type_tref31 = ET.SubElement(variable_data_prototype13, 'TYPE-TREF')
    type_tref31.text = '/SharedElements/ApplicationDataTypes/Primitive/ApplicationPrimitiveDataType'
    type_tref31.attrib = {'DEST': 'APPLICATION-PRIMITIVE-DATA-TYPE'}
    variable_data_prototype14 = ET.SubElement(data_elements6, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype14.attrib = {'UUID': '6862a5ea-8794-4906-9f54-50624e9d6044'}
    short_name463 = ET.SubElement(variable_data_prototype14, 'SHORT-NAME')
    short_name463.text = 'DataElement1'
    sw_data_def_props83 = ET.SubElement(variable_data_prototype14, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants83 = ET.SubElement(sw_data_def_props83, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional83 = ET.SubElement(sw_data_def_props_variants83, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy28 = ET.SubElement(sw_data_def_props_conditional83, 'SW-IMPL-POLICY')
    sw_impl_policy28.text = 'STANDARD'
    type_tref32 = ET.SubElement(variable_data_prototype14, 'TYPE-TREF')
    type_tref32.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
    type_tref32.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    invalidation_policys1 = ET.SubElement(sender_receiver_interface6, 'INVALIDATION-POLICYS')
    invalidation_policy1 = ET.SubElement(invalidation_policys1, 'INVALIDATION-POLICY')
    data_element_ref1 = ET.SubElement(invalidation_policy1, 'DATA-ELEMENT-REF')
    data_element_ref1.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement'
    data_element_ref1.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    handle_invalid1 = ET.SubElement(invalidation_policy1, 'HANDLE-INVALID')
    handle_invalid1.text = 'KEEP'
    ar_package42 = ET.SubElement(ar_packages10, 'AR-PACKAGE')
    ar_package42.attrib = {'UUID': '00421379-584f-4dbb-8c9f-d70ad66b8e41'}
    short_name464 = ET.SubElement(ar_package42, 'SHORT-NAME')
    short_name464.text = 'Trigger'
    elements27 = ET.SubElement(ar_package42, 'ELEMENTS')
    trigger_interface1 = ET.SubElement(elements27, 'TRIGGER-INTERFACE')
    trigger_interface1.attrib = {'UUID': '97d54491-56c6-49b9-9812-bb5eadaefa82'}
    short_name465 = ET.SubElement(trigger_interface1, 'SHORT-NAME')
    short_name465.text = 'TriggerInterface'
    is_service16 = ET.SubElement(trigger_interface1, 'IS-SERVICE')
    is_service16.text = 'false'
    triggers1 = ET.SubElement(trigger_interface1, 'TRIGGERS')
    trigger1 = ET.SubElement(triggers1, 'TRIGGER')
    trigger1.attrib = {'UUID': '06d545dc-664d-45fb-be23-8a076bded4b5'}
    short_name466 = ET.SubElement(trigger1, 'SHORT-NAME')
    short_name466.text = 'Trigger'
    trigger_period1 = ET.SubElement(trigger1, 'TRIGGER-PERIOD')
    cse_code1 = ET.SubElement(trigger_period1, 'CSE-CODE')
    cse_code1.text = '6'
    cse_code_factor1 = ET.SubElement(trigger_period1, 'CSE-CODE-FACTOR')
    cse_code_factor1.text = '15'
    ar_package43 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    ar_package43.attrib = {'UUID': 'a21c4095-c5dd-41b4-8a15-aa23a460a3e9'}
    short_name467 = ET.SubElement(ar_package43, 'SHORT-NAME')
    short_name467.text = 'SWCImpl'
    elements28 = ET.SubElement(ar_package43, 'ELEMENTS')
    swc_implementation1 = ET.SubElement(elements28, 'SWC-IMPLEMENTATION')
    swc_implementation1.attrib = {'UUID': 'a8e1b9bd-bc2d-4bba-8d84-7fb588da487b'}
    short_name468 = ET.SubElement(swc_implementation1, 'SHORT-NAME')
    short_name468.text = 'SwcImplementation'
    programming_language1 = ET.SubElement(swc_implementation1, 'PROGRAMMING-LANGUAGE')
    programming_language1.text = 'C'
    resource_consumption1 = ET.SubElement(swc_implementation1, 'RESOURCE-CONSUMPTION')
    resource_consumption1.attrib = {'UUID': '664bf3d9-9efc-49d1-a4fd-9936922aa5f9'}
    short_name469 = ET.SubElement(resource_consumption1, 'SHORT-NAME')
    short_name469.text = 'ResourceConsumption'
    sw_version1 = ET.SubElement(swc_implementation1, 'SW-VERSION')
    sw_version1.text = '1.0.0.0'
    behavior_ref1 = ET.SubElement(swc_implementation1, 'BEHAVIOR-REF')
    behavior_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl'
    behavior_ref1.attrib = {'DEST': 'SWC-INTERNAL-BEHAVIOR'}
    ar_package44 = ET.SubElement(ar_packages8, 'AR-PACKAGE')
    ar_package44.attrib = {'UUID': 'fc8b946c-31d4-49d6-8e0c-ff6847ede7f5'}
    short_name470 = ET.SubElement(ar_package44, 'SHORT-NAME')
    short_name470.text = 'SwAddrMethods'
    elements29 = ET.SubElement(ar_package44, 'ELEMENTS')
    sw_addr_method1 = ET.SubElement(elements29, 'SW-ADDR-METHOD')
    sw_addr_method1.attrib = {'UUID': '8a973d95-6644-4157-ab41-c78f7ccbcb2c'}
    short_name471 = ET.SubElement(sw_addr_method1, 'SHORT-NAME')
    short_name471.text = 'Copy2_SwAddrMethod'
    memory_allocation_keyword_policy1 = ET.SubElement(sw_addr_method1, 'MEMORY-ALLOCATION-KEYWORD-POLICY')
    memory_allocation_keyword_policy1.text = 'ADDR-METHOD-SHORT-NAME'
    section_type1 = ET.SubElement(sw_addr_method1, 'SECTION-TYPE')
    section_type1.text = 'CODE'
    sw_addr_method2 = ET.SubElement(elements29, 'SW-ADDR-METHOD')
    sw_addr_method2.attrib = {'UUID': '73ccfb92-d7eb-4aee-b724-b520ed1a3e84'}
    short_name472 = ET.SubElement(sw_addr_method2, 'SHORT-NAME')
    short_name472.text = 'Copy_SwAddrMethod'
    memory_allocation_keyword_policy2 = ET.SubElement(sw_addr_method2, 'MEMORY-ALLOCATION-KEYWORD-POLICY')
    memory_allocation_keyword_policy2.text = 'ADDR-METHOD-SHORT-NAME-AND-ALIGNMENT'
    section_type2 = ET.SubElement(sw_addr_method2, 'SECTION-TYPE')
    section_type2.text = 'CALIBRATION-VARIABLES'
    sw_addr_method3 = ET.SubElement(elements29, 'SW-ADDR-METHOD')
    sw_addr_method3.attrib = {'UUID': '59a8a159-68d8-4804-8d3b-76f1a5d48b3c'}
    short_name473 = ET.SubElement(sw_addr_method3, 'SHORT-NAME')
    short_name473.text = 'SwAddrMethod'
    memory_allocation_keyword_policy3 = ET.SubElement(sw_addr_method3, 'MEMORY-ALLOCATION-KEYWORD-POLICY')
    memory_allocation_keyword_policy3.text = 'ADDR-METHOD-SHORT-NAME'
    section_type3 = ET.SubElement(sw_addr_method3, 'SECTION-TYPE')
    section_type3.text = 'CALIBRATION-VARIABLES'
    ar_package45 = ET.SubElement(ar_packages1, 'AR-PACKAGE')
    short_name474 = ET.SubElement(ar_package45, 'SHORT-NAME')
    short_name474.text = 'SwComponentTypes'
    ar_packages11 = ET.SubElement(ar_package45, 'AR-PACKAGES')
    ar_package46 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package46.attrib = {'UUID': '7e1cfec7-fc85-4615-9df0-46ddc1fdaa09'}
    short_name475 = ET.SubElement(ar_package46, 'SHORT-NAME')
    short_name475.text = 'ApplSWC'
    elements30 = ET.SubElement(ar_package46, 'ELEMENTS')
    application_sw_component_type1 = ET.SubElement(elements30, 'APPLICATION-SW-COMPONENT-TYPE')
    application_sw_component_type1.attrib = {'UUID': 'e74b1e65-d39d-460c-8d4d-d95c8a9e12dd'}
    short_name476 = ET.SubElement(application_sw_component_type1, 'SHORT-NAME')
    short_name476.text = 'ApplicationSwComponentType'
    ports1 = ET.SubElement(application_sw_component_type1, 'PORTS')
    r_port_prototype1 = ET.SubElement(ports1, 'R-PORT-PROTOTYPE')
    r_port_prototype1.attrib = {'UUID': '1ecadefd-df18-4c05-a2d5-803778e62ae1'}
    short_name477 = ET.SubElement(r_port_prototype1, 'SHORT-NAME')
    short_name477.text = 'RPort_SR'
    required_interface_tref1 = ET.SubElement(r_port_prototype1, 'REQUIRED-INTERFACE-TREF')
    required_interface_tref1.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface'
    required_interface_tref1.attrib = {'DEST': 'SENDER-RECEIVER-INTERFACE'}
    p_port_prototype1 = ET.SubElement(ports1, 'P-PORT-PROTOTYPE')
    p_port_prototype1.attrib = {'UUID': 'a3e8969f-1dde-4749-af9a-f337b0f053d8'}
    short_name478 = ET.SubElement(p_port_prototype1, 'SHORT-NAME')
    short_name478.text = 'PPort_SR'
    provided_interface_tref1 = ET.SubElement(p_port_prototype1, 'PROVIDED-INTERFACE-TREF')
    provided_interface_tref1.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface'
    provided_interface_tref1.attrib = {'DEST': 'SENDER-RECEIVER-INTERFACE'}
    r_port_prototype2 = ET.SubElement(ports1, 'R-PORT-PROTOTYPE')
    r_port_prototype2.attrib = {'UUID': '933a7736-19ea-4662-8301-3fe9991367bc'}
    short_name479 = ET.SubElement(r_port_prototype2, 'SHORT-NAME')
    short_name479.text = 'RPort_CS'
    required_interface_tref2 = ET.SubElement(r_port_prototype2, 'REQUIRED-INTERFACE-TREF')
    required_interface_tref2.text = '/SharedElements/PortInterfaces/ClientServer/ClientServerInterface'
    required_interface_tref2.attrib = {'DEST': 'CLIENT-SERVER-INTERFACE'}
    p_port_prototype2 = ET.SubElement(ports1, 'P-PORT-PROTOTYPE')
    p_port_prototype2.attrib = {'UUID': '38b3145f-1dd8-4a0f-943b-2f6b2d0a4221'}
    short_name480 = ET.SubElement(p_port_prototype2, 'SHORT-NAME')
    short_name480.text = 'PPort_CS'
    provided_interface_tref2 = ET.SubElement(p_port_prototype2, 'PROVIDED-INTERFACE-TREF')
    provided_interface_tref2.text = '/SharedElements/PortInterfaces/ClientServer/ClientServerInterface'
    provided_interface_tref2.attrib = {'DEST': 'CLIENT-SERVER-INTERFACE'}
    r_port_prototype3 = ET.SubElement(ports1, 'R-PORT-PROTOTYPE')
    r_port_prototype3.attrib = {'UUID': '08e53a34-e89a-4c1c-a2d4-9536c0e123af'}
    short_name481 = ET.SubElement(r_port_prototype3, 'SHORT-NAME')
    short_name481.text = 'RPort_msi'
    required_interface_tref3 = ET.SubElement(r_port_prototype3, 'REQUIRED-INTERFACE-TREF')
    required_interface_tref3.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeSwitchInterface'
    required_interface_tref3.attrib = {'DEST': 'MODE-SWITCH-INTERFACE'}
    p_port_prototype3 = ET.SubElement(ports1, 'P-PORT-PROTOTYPE')
    p_port_prototype3.attrib = {'UUID': '8ed933c7-270b-45cf-8a3e-206782153f61'}
    short_name482 = ET.SubElement(p_port_prototype3, 'SHORT-NAME')
    short_name482.text = 'PPort_msi'
    provided_interface_tref3 = ET.SubElement(p_port_prototype3, 'PROVIDED-INTERFACE-TREF')
    provided_interface_tref3.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeSwitchInterface'
    provided_interface_tref3.attrib = {'DEST': 'MODE-SWITCH-INTERFACE'}
    r_port_prototype4 = ET.SubElement(ports1, 'R-PORT-PROTOTYPE')
    r_port_prototype4.attrib = {'UUID': '52c8bb91-6599-4bdd-a556-e2b22ab9c73b'}
    short_name483 = ET.SubElement(r_port_prototype4, 'SHORT-NAME')
    short_name483.text = 'RPort_nvd'
    required_interface_tref4 = ET.SubElement(r_port_prototype4, 'REQUIRED-INTERFACE-TREF')
    required_interface_tref4.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface'
    required_interface_tref4.attrib = {'DEST': 'NV-DATA-INTERFACE'}
    p_port_prototype4 = ET.SubElement(ports1, 'P-PORT-PROTOTYPE')
    p_port_prototype4.attrib = {'UUID': 'a69f810c-0a9d-4729-9b49-5b4be2f55ffa'}
    short_name484 = ET.SubElement(p_port_prototype4, 'SHORT-NAME')
    short_name484.text = 'PPort_nvd'
    provided_interface_tref4 = ET.SubElement(p_port_prototype4, 'PROVIDED-INTERFACE-TREF')
    provided_interface_tref4.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface'
    provided_interface_tref4.attrib = {'DEST': 'NV-DATA-INTERFACE'}
    r_port_prototype5 = ET.SubElement(ports1, 'R-PORT-PROTOTYPE')
    r_port_prototype5.attrib = {'UUID': '7bee2832-df48-4712-a0cf-9b2f095db921'}
    short_name485 = ET.SubElement(r_port_prototype5, 'SHORT-NAME')
    short_name485.text = 'RPort_prm'
    required_interface_tref5 = ET.SubElement(r_port_prototype5, 'REQUIRED-INTERFACE-TREF')
    required_interface_tref5.text = '/SharedElements/PortInterfaces/Parameter/ParameterInterface'
    required_interface_tref5.attrib = {'DEST': 'PARAMETER-INTERFACE'}
    r_port_prototype6 = ET.SubElement(ports1, 'R-PORT-PROTOTYPE')
    r_port_prototype6.attrib = {'UUID': '9194fa9f-f535-4ef4-ad71-379f00251a5f'}
    short_name486 = ET.SubElement(r_port_prototype6, 'SHORT-NAME')
    short_name486.text = 'RPort_trigger'
    required_interface_tref6 = ET.SubElement(r_port_prototype6, 'REQUIRED-INTERFACE-TREF')
    required_interface_tref6.text = '/SharedElements/PortInterfaces/Trigger/TriggerInterface'
    required_interface_tref6.attrib = {'DEST': 'TRIGGER-INTERFACE'}
    internal_behaviors1 = ET.SubElement(application_sw_component_type1, 'INTERNAL-BEHAVIORS')
    swc_internal_behavior1 = ET.SubElement(internal_behaviors1, 'SWC-INTERNAL-BEHAVIOR')
    swc_internal_behavior1.attrib = {'UUID': 'd0c29733-8863-4bcd-af6a-1579e0a29746'}
    short_name487 = ET.SubElement(swc_internal_behavior1, 'SHORT-NAME')
    short_name487.text = 'IB_Appl'
    constant_memorys1 = ET.SubElement(swc_internal_behavior1, 'CONSTANT-MEMORYS')
    parameter_data_prototype3 = ET.SubElement(constant_memorys1, 'PARAMETER-DATA-PROTOTYPE')
    parameter_data_prototype3.attrib = {'UUID': '666c53b0-408c-4084-8002-71810ad2bea7'}
    short_name488 = ET.SubElement(parameter_data_prototype3, 'SHORT-NAME')
    short_name488.text = 'ConstantMemory'
    sw_data_def_props84 = ET.SubElement(parameter_data_prototype3, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants84 = ET.SubElement(sw_data_def_props84, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional84 = ET.SubElement(sw_data_def_props_variants84, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access13 = ET.SubElement(sw_data_def_props_conditional84, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access13.text = 'READ-WRITE'
    sw_impl_policy29 = ET.SubElement(sw_data_def_props_conditional84, 'SW-IMPL-POLICY')
    sw_impl_policy29.text = 'STANDARD'
    type_tref33 = ET.SubElement(parameter_data_prototype3, 'TYPE-TREF')
    type_tref33.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint64'
    type_tref33.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    init_value1 = ET.SubElement(parameter_data_prototype3, 'INIT-VALUE')
    numerical_value_specification4 = ET.SubElement(init_value1, 'NUMERICAL-VALUE-SPECIFICATION')
    short_label5 = ET.SubElement(numerical_value_specification4, 'SHORT-LABEL')
    short_label5.text = 'Value'
    value4 = ET.SubElement(numerical_value_specification4, 'VALUE')
    value4.text = '3'
    data_type_mapping_refs1 = ET.SubElement(swc_internal_behavior1, 'DATA-TYPE-MAPPING-REFS')
    data_type_mapping_ref1 = ET.SubElement(data_type_mapping_refs1, 'DATA-TYPE-MAPPING-REF')
    data_type_mapping_ref1.text = '/SharedElements/DataTypemappingSets/DataTypeMappingSet'
    data_type_mapping_ref1.attrib = {'DEST': 'DATA-TYPE-MAPPING-SET'}
    static_memorys1 = ET.SubElement(swc_internal_behavior1, 'STATIC-MEMORYS')
    variable_data_prototype15 = ET.SubElement(static_memorys1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype15.attrib = {'UUID': '0a83fe83-959c-49d2-abf1-981ac4641b7d'}
    short_name489 = ET.SubElement(variable_data_prototype15, 'SHORT-NAME')
    short_name489.text = 'StaticMemory'
    sw_data_def_props85 = ET.SubElement(variable_data_prototype15, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants85 = ET.SubElement(sw_data_def_props85, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional85 = ET.SubElement(sw_data_def_props_variants85, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy30 = ET.SubElement(sw_data_def_props_conditional85, 'SW-IMPL-POLICY')
    sw_impl_policy30.text = 'STANDARD'
    type_tref34 = ET.SubElement(variable_data_prototype15, 'TYPE-TREF')
    type_tref34.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref34.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    init_value2 = ET.SubElement(variable_data_prototype15, 'INIT-VALUE')
    constant_reference1 = ET.SubElement(init_value2, 'CONSTANT-REFERENCE')
    short_label6 = ET.SubElement(constant_reference1, 'SHORT-LABEL')
    short_label6.text = 'ReferenceToConstant'
    constant_ref1 = ET.SubElement(constant_reference1, 'CONSTANT-REF')
    constant_ref1.text = '/SharedElements/ConstantSpecifications/ApplicationSwComponentType_StaticMemory'
    constant_ref1.attrib = {'DEST': 'CONSTANT-SPECIFICATION'}
    ar_typed_per_instance_memorys1 = ET.SubElement(swc_internal_behavior1, 'AR-TYPED-PER-INSTANCE-MEMORYS')
    variable_data_prototype16 = ET.SubElement(ar_typed_per_instance_memorys1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype16.attrib = {'UUID': 'c2401b62-709c-4a61-a9d7-5f540d144075'}
    short_name490 = ET.SubElement(variable_data_prototype16, 'SHORT-NAME')
    short_name490.text = 'ArTypedPerInstanceMemory'
    sw_data_def_props86 = ET.SubElement(variable_data_prototype16, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants86 = ET.SubElement(sw_data_def_props86, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional86 = ET.SubElement(sw_data_def_props_variants86, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy31 = ET.SubElement(sw_data_def_props_conditional86, 'SW-IMPL-POLICY')
    sw_impl_policy31.text = 'STANDARD'
    type_tref35 = ET.SubElement(variable_data_prototype16, 'TYPE-TREF')
    type_tref35.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/sint16'
    type_tref35.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    init_value3 = ET.SubElement(variable_data_prototype16, 'INIT-VALUE')
    numerical_value_specification5 = ET.SubElement(init_value3, 'NUMERICAL-VALUE-SPECIFICATION')
    short_label7 = ET.SubElement(numerical_value_specification5, 'SHORT-LABEL')
    short_label7.text = 'Value'
    value5 = ET.SubElement(numerical_value_specification5, 'VALUE')
    value5.text = '-3'
    events1 = ET.SubElement(swc_internal_behavior1, 'EVENTS')
    asynchronous_server_call_returns_event1 = ET.SubElement(events1, 'ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT')
    asynchronous_server_call_returns_event1.attrib = {'UUID': '98e66756-7475-4549-94ba-bd68dca85e27'}
    short_name491 = ET.SubElement(asynchronous_server_call_returns_event1, 'SHORT-NAME')
    short_name491.text = 'AsynchronousServerCallReturnsEvent'
    start_on_event_ref1 = ET.SubElement(asynchronous_server_call_returns_event1, 'START-ON-EVENT-REF')
    start_on_event_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable'
    start_on_event_ref1.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    event_source_ref1 = ET.SubElement(asynchronous_server_call_returns_event1, 'EVENT-SOURCE-REF')
    event_source_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable/AsynchronousServerCallResultPoint'
    event_source_ref1.attrib = {'DEST': 'ASYNCHRONOUS-SERVER-CALL-RESULT-POINT'}
    background_event1 = ET.SubElement(events1, 'BACKGROUND-EVENT')
    background_event1.attrib = {'UUID': '878975ea-f390-4f62-a34f-05ca7fd73896'}
    short_name492 = ET.SubElement(background_event1, 'SHORT-NAME')
    short_name492.text = 'BackgroundEvent'
    start_on_event_ref2 = ET.SubElement(background_event1, 'START-ON-EVENT-REF')
    start_on_event_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable1'
    start_on_event_ref2.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    data_receive_error_event1 = ET.SubElement(events1, 'DATA-RECEIVE-ERROR-EVENT')
    data_receive_error_event1.attrib = {'UUID': '733de305-2dc6-4ac2-be25-134d242372ad'}
    short_name493 = ET.SubElement(data_receive_error_event1, 'SHORT-NAME')
    short_name493.text = 'DataReceiveErrorEvent'
    start_on_event_ref3 = ET.SubElement(data_receive_error_event1, 'START-ON-EVENT-REF')
    start_on_event_ref3.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable2'
    start_on_event_ref3.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    data_iref1 = ET.SubElement(data_receive_error_event1, 'DATA-IREF')
    context_r_port_ref1 = ET.SubElement(data_iref1, 'CONTEXT-R-PORT-REF')
    context_r_port_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_SR'
    context_r_port_ref1.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_element_ref1 = ET.SubElement(data_iref1, 'TARGET-DATA-ELEMENT-REF')
    target_data_element_ref1.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement'
    target_data_element_ref1.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    data_received_event1 = ET.SubElement(events1, 'DATA-RECEIVED-EVENT')
    data_received_event1.attrib = {'UUID': '30fc9c83-5302-44fc-a25d-0d77e2b3d112'}
    short_name494 = ET.SubElement(data_received_event1, 'SHORT-NAME')
    short_name494.text = 'DataReceivedEvent'
    start_on_event_ref4 = ET.SubElement(data_received_event1, 'START-ON-EVENT-REF')
    start_on_event_ref4.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable3'
    start_on_event_ref4.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    data_iref2 = ET.SubElement(data_received_event1, 'DATA-IREF')
    context_r_port_ref2 = ET.SubElement(data_iref2, 'CONTEXT-R-PORT-REF')
    context_r_port_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_SR'
    context_r_port_ref2.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_element_ref2 = ET.SubElement(data_iref2, 'TARGET-DATA-ELEMENT-REF')
    target_data_element_ref2.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement1'
    target_data_element_ref2.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    data_send_completed_event1 = ET.SubElement(events1, 'DATA-SEND-COMPLETED-EVENT')
    data_send_completed_event1.attrib = {'UUID': 'aefde323-2cf9-4226-aedb-0a1a33876a55'}
    short_name495 = ET.SubElement(data_send_completed_event1, 'SHORT-NAME')
    short_name495.text = 'DataSendCompletedEvent'
    start_on_event_ref5 = ET.SubElement(data_send_completed_event1, 'START-ON-EVENT-REF')
    start_on_event_ref5.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable4'
    start_on_event_ref5.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    event_source_ref2 = ET.SubElement(data_send_completed_event1, 'EVENT-SOURCE-REF')
    event_source_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable4/DSP_PPort_SR_DataElement'
    event_source_ref2.attrib = {'DEST': 'VARIABLE-ACCESS'}
    data_write_completed_event1 = ET.SubElement(events1, 'DATA-WRITE-COMPLETED-EVENT')
    data_write_completed_event1.attrib = {'UUID': '0da70404-5ab6-4651-ad56-e1c3adab06e5'}
    short_name496 = ET.SubElement(data_write_completed_event1, 'SHORT-NAME')
    short_name496.text = 'DataWriteCompletedEvent'
    start_on_event_ref6 = ET.SubElement(data_write_completed_event1, 'START-ON-EVENT-REF')
    start_on_event_ref6.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable5'
    start_on_event_ref6.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    event_source_ref3 = ET.SubElement(data_write_completed_event1, 'EVENT-SOURCE-REF')
    event_source_ref3.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable5/DWA_PPort_SR_DataElement1'
    event_source_ref3.attrib = {'DEST': 'VARIABLE-ACCESS'}
    external_trigger_occurred_event1 = ET.SubElement(events1, 'EXTERNAL-TRIGGER-OCCURRED-EVENT')
    external_trigger_occurred_event1.attrib = {'UUID': '7f122189-5a69-4e28-af84-b5a1e73c9206'}
    short_name497 = ET.SubElement(external_trigger_occurred_event1, 'SHORT-NAME')
    short_name497.text = 'ExternalTriggerOccurredEvent'
    start_on_event_ref7 = ET.SubElement(external_trigger_occurred_event1, 'START-ON-EVENT-REF')
    start_on_event_ref7.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable6'
    start_on_event_ref7.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    trigger_iref1 = ET.SubElement(external_trigger_occurred_event1, 'TRIGGER-IREF')
    context_r_port_ref3 = ET.SubElement(trigger_iref1, 'CONTEXT-R-PORT-REF')
    context_r_port_ref3.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_trigger'
    context_r_port_ref3.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_trigger_ref1 = ET.SubElement(trigger_iref1, 'TARGET-TRIGGER-REF')
    target_trigger_ref1.text = '/SharedElements/PortInterfaces/Trigger/TriggerInterface/Trigger'
    target_trigger_ref1.attrib = {'DEST': 'TRIGGER'}
    mode_switched_ack_event1 = ET.SubElement(events1, 'MODE-SWITCHED-ACK-EVENT')
    mode_switched_ack_event1.attrib = {'UUID': '2f5c24be-60cf-4249-bfde-ceabef6d00d4'}
    short_name498 = ET.SubElement(mode_switched_ack_event1, 'SHORT-NAME')
    short_name498.text = 'ModeSwitchedAckEvent'
    start_on_event_ref8 = ET.SubElement(mode_switched_ack_event1, 'START-ON-EVENT-REF')
    start_on_event_ref8.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable9'
    start_on_event_ref8.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    event_source_ref4 = ET.SubElement(mode_switched_ack_event1, 'EVENT-SOURCE-REF')
    event_source_ref4.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable9/MSP_PPort_msi_ModeGroup'
    event_source_ref4.attrib = {'DEST': 'MODE-SWITCH-POINT'}
    operation_invoked_event1 = ET.SubElement(events1, 'OPERATION-INVOKED-EVENT')
    operation_invoked_event1.attrib = {'UUID': '02646a86-1109-43a4-8e09-cb8878e932a5'}
    short_name499 = ET.SubElement(operation_invoked_event1, 'SHORT-NAME')
    short_name499.text = 'OperationInvokedEvent'
    start_on_event_ref9 = ET.SubElement(operation_invoked_event1, 'START-ON-EVENT-REF')
    start_on_event_ref9.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable10'
    start_on_event_ref9.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    operation_iref1 = ET.SubElement(operation_invoked_event1, 'OPERATION-IREF')
    context_p_port_ref1 = ET.SubElement(operation_iref1, 'CONTEXT-P-PORT-REF')
    context_p_port_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_CS'
    context_p_port_ref1.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_provided_operation_ref1 = ET.SubElement(operation_iref1, 'TARGET-PROVIDED-OPERATION-REF')
    target_provided_operation_ref1.text = '/SharedElements/PortInterfaces/ClientServer/ClientServerInterface/Operation1'
    target_provided_operation_ref1.attrib = {'DEST': 'CLIENT-SERVER-OPERATION'}
    swc_mode_switch_event1 = ET.SubElement(events1, 'SWC-MODE-SWITCH-EVENT')
    swc_mode_switch_event1.attrib = {'UUID': '5bebf915-dc23-4d8d-ac15-4af9a83cb9f1'}
    short_name500 = ET.SubElement(swc_mode_switch_event1, 'SHORT-NAME')
    short_name500.text = 'SwcModeSwitchEvent'
    start_on_event_ref10 = ET.SubElement(swc_mode_switch_event1, 'START-ON-EVENT-REF')
    start_on_event_ref10.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable12'
    start_on_event_ref10.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    activation1 = ET.SubElement(swc_mode_switch_event1, 'ACTIVATION')
    activation1.text = 'ON-TRANSITION'
    mode_irefs1 = ET.SubElement(swc_mode_switch_event1, 'MODE-IREFS')
    mode_iref1 = ET.SubElement(mode_irefs1, 'MODE-IREF')
    context_port_ref1 = ET.SubElement(mode_iref1, 'CONTEXT-PORT-REF')
    context_port_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_msi'
    context_port_ref1.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    context_mode_declaration_group_prototype_ref1 = ET.SubElement(mode_iref1, 'CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF')
    context_mode_declaration_group_prototype_ref1.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeSwitchInterface/ModeGroup'
    context_mode_declaration_group_prototype_ref1.attrib = {'DEST': 'MODE-DECLARATION-GROUP-PROTOTYPE'}
    target_mode_declaration_ref1 = ET.SubElement(mode_iref1, 'TARGET-MODE-DECLARATION-REF')
    target_mode_declaration_ref1.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeDeclarationGroup/ModeDeclaration2'
    target_mode_declaration_ref1.attrib = {'DEST': 'MODE-DECLARATION'}
    mode_iref2 = ET.SubElement(mode_irefs1, 'MODE-IREF')
    context_port_ref2 = ET.SubElement(mode_iref2, 'CONTEXT-PORT-REF')
    context_port_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_msi'
    context_port_ref2.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    context_mode_declaration_group_prototype_ref2 = ET.SubElement(mode_iref2, 'CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF')
    context_mode_declaration_group_prototype_ref2.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeSwitchInterface/ModeGroup'
    context_mode_declaration_group_prototype_ref2.attrib = {'DEST': 'MODE-DECLARATION-GROUP-PROTOTYPE'}
    target_mode_declaration_ref2 = ET.SubElement(mode_iref2, 'TARGET-MODE-DECLARATION-REF')
    target_mode_declaration_ref2.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeDeclarationGroup/ModeDeclaration'
    target_mode_declaration_ref2.attrib = {'DEST': 'MODE-DECLARATION'}
    timing_event1 = ET.SubElement(events1, 'TIMING-EVENT')
    timing_event1.attrib = {'UUID': 'a761b6cb-cd31-4a99-b2f8-21c5a132097e'}
    short_name501 = ET.SubElement(timing_event1, 'SHORT-NAME')
    short_name501.text = 'TimingEvent'
    start_on_event_ref11 = ET.SubElement(timing_event1, 'START-ON-EVENT-REF')
    start_on_event_ref11.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable13'
    start_on_event_ref11.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    period1 = ET.SubElement(timing_event1, 'PERIOD')
    period1.text = '0.01'
    timing_event2 = ET.SubElement(events1, 'TIMING-EVENT')
    timing_event2.attrib = {'UUID': '0faaa505-7947-4b84-b8ea-4086fa60a54c'}
    short_name502 = ET.SubElement(timing_event2, 'SHORT-NAME')
    short_name502.text = 'TimingEvent1'
    start_on_event_ref12 = ET.SubElement(timing_event2, 'START-ON-EVENT-REF')
    start_on_event_ref12.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable15'
    start_on_event_ref12.attrib = {'DEST': 'RUNNABLE-ENTITY'}
    period2 = ET.SubElement(timing_event2, 'PERIOD')
    period2.text = '0.01'
    explicit_inter_runnable_variables1 = ET.SubElement(swc_internal_behavior1, 'EXPLICIT-INTER-RUNNABLE-VARIABLES')
    variable_data_prototype17 = ET.SubElement(explicit_inter_runnable_variables1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype17.attrib = {'UUID': '46bf0c15-16f3-428f-92de-ce374a9faf1c'}
    short_name503 = ET.SubElement(variable_data_prototype17, 'SHORT-NAME')
    short_name503.text = 'ExplicitInterRunnableVariable'
    sw_data_def_props87 = ET.SubElement(variable_data_prototype17, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants87 = ET.SubElement(sw_data_def_props87, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional87 = ET.SubElement(sw_data_def_props_variants87, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy32 = ET.SubElement(sw_data_def_props_conditional87, 'SW-IMPL-POLICY')
    sw_impl_policy32.text = 'STANDARD'
    type_tref36 = ET.SubElement(variable_data_prototype17, 'TYPE-TREF')
    type_tref36.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/boolean'
    type_tref36.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    init_value4 = ET.SubElement(variable_data_prototype17, 'INIT-VALUE')
    constant_reference2 = ET.SubElement(init_value4, 'CONSTANT-REFERENCE')
    short_label8 = ET.SubElement(constant_reference2, 'SHORT-LABEL')
    short_label8.text = 'ReferenceToConstant'
    constant_ref2 = ET.SubElement(constant_reference2, 'CONSTANT-REF')
    constant_ref2.text = '/SharedElements/ConstantSpecifications/ApplicationSwComponentType_ExplicitInterRunnableVariable'
    constant_ref2.attrib = {'DEST': 'CONSTANT-SPECIFICATION'}
    handle_termination_and_restart1 = ET.SubElement(swc_internal_behavior1, 'HANDLE-TERMINATION-AND-RESTART')
    handle_termination_and_restart1.text = 'NO-SUPPORT'
    implicit_inter_runnable_variables1 = ET.SubElement(swc_internal_behavior1, 'IMPLICIT-INTER-RUNNABLE-VARIABLES')
    variable_data_prototype18 = ET.SubElement(implicit_inter_runnable_variables1, 'VARIABLE-DATA-PROTOTYPE')
    variable_data_prototype18.attrib = {'UUID': '100df329-69ca-4527-945c-b23a59017964'}
    short_name504 = ET.SubElement(variable_data_prototype18, 'SHORT-NAME')
    short_name504.text = 'ImplicitInterRunnableVariable'
    sw_data_def_props88 = ET.SubElement(variable_data_prototype18, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants88 = ET.SubElement(sw_data_def_props88, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional88 = ET.SubElement(sw_data_def_props_variants88, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_impl_policy33 = ET.SubElement(sw_data_def_props_conditional88, 'SW-IMPL-POLICY')
    sw_impl_policy33.text = 'STANDARD'
    type_tref37 = ET.SubElement(variable_data_prototype18, 'TYPE-TREF')
    type_tref37.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/sint16'
    type_tref37.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    init_value5 = ET.SubElement(variable_data_prototype18, 'INIT-VALUE')
    numerical_value_specification6 = ET.SubElement(init_value5, 'NUMERICAL-VALUE-SPECIFICATION')
    short_label9 = ET.SubElement(numerical_value_specification6, 'SHORT-LABEL')
    short_label9.text = 'Value'
    value6 = ET.SubElement(numerical_value_specification6, 'VALUE')
    value6.text = '0'
    per_instance_parameters1 = ET.SubElement(swc_internal_behavior1, 'PER-INSTANCE-PARAMETERS')
    parameter_data_prototype4 = ET.SubElement(per_instance_parameters1, 'PARAMETER-DATA-PROTOTYPE')
    parameter_data_prototype4.attrib = {'UUID': 'a2509010-a816-4ea4-b0ed-c5ba10c3ca78'}
    short_name505 = ET.SubElement(parameter_data_prototype4, 'SHORT-NAME')
    short_name505.text = 'PerInstanceParameter'
    sw_data_def_props89 = ET.SubElement(parameter_data_prototype4, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants89 = ET.SubElement(sw_data_def_props89, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional89 = ET.SubElement(sw_data_def_props_variants89, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access14 = ET.SubElement(sw_data_def_props_conditional89, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access14.text = 'READ-WRITE'
    sw_impl_policy34 = ET.SubElement(sw_data_def_props_conditional89, 'SW-IMPL-POLICY')
    sw_impl_policy34.text = 'STANDARD'
    type_tref38 = ET.SubElement(parameter_data_prototype4, 'TYPE-TREF')
    type_tref38.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
    type_tref38.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    init_value6 = ET.SubElement(parameter_data_prototype4, 'INIT-VALUE')
    numerical_value_specification7 = ET.SubElement(init_value6, 'NUMERICAL-VALUE-SPECIFICATION')
    short_label10 = ET.SubElement(numerical_value_specification7, 'SHORT-LABEL')
    short_label10.text = 'Value'
    value7 = ET.SubElement(numerical_value_specification7, 'VALUE')
    value7.text = '5'
    runnables1 = ET.SubElement(swc_internal_behavior1, 'RUNNABLES')
    runnable_entity1 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity1.attrib = {'UUID': 'bfb2d01b-9082-4a58-a929-6d7a860a2d9a'}
    short_name506 = ET.SubElement(runnable_entity1, 'SHORT-NAME')
    short_name506.text = 'Runnable'
    minimum_start_interval1 = ET.SubElement(runnable_entity1, 'MINIMUM-START-INTERVAL')
    minimum_start_interval1.text = '0'
    sw_addr_method_ref1 = ET.SubElement(runnable_entity1, 'SW-ADDR-METHOD-REF')
    sw_addr_method_ref1.text = '/SharedElements/SwAddrMethods/Copy2_SwAddrMethod'
    sw_addr_method_ref1.attrib = {'DEST': 'SW-ADDR-METHOD'}
    asynchronous_server_call_result_points1 = ET.SubElement(runnable_entity1, 'ASYNCHRONOUS-SERVER-CALL-RESULT-POINTS')
    asynchronous_server_call_result_point1 = ET.SubElement(asynchronous_server_call_result_points1, 'ASYNCHRONOUS-SERVER-CALL-RESULT-POINT')
    asynchronous_server_call_result_point1.attrib = {'UUID': 'f857d505-3c25-43b2-b929-36e0e40f1177'}
    short_name507 = ET.SubElement(asynchronous_server_call_result_point1, 'SHORT-NAME')
    short_name507.text = 'AsynchronousServerCallResultPoint'
    asynchronous_server_call_point_ref1 = ET.SubElement(asynchronous_server_call_result_point1, 'ASYNCHRONOUS-SERVER-CALL-POINT-REF')
    asynchronous_server_call_point_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/Runnable/ASCP_RPort_CS_Operation'
    asynchronous_server_call_point_ref1.attrib = {'DEST': 'ASYNCHRONOUS-SERVER-CALL-POINT'}
    can_be_invoked_concurrently1 = ET.SubElement(runnable_entity1, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently1.text = 'false'
    server_call_points1 = ET.SubElement(runnable_entity1, 'SERVER-CALL-POINTS')
    asynchronous_server_call_point1 = ET.SubElement(server_call_points1, 'ASYNCHRONOUS-SERVER-CALL-POINT')
    asynchronous_server_call_point1.attrib = {'UUID': 'e7aacef3-56e7-4964-b0b6-5569dd4abc09'}
    short_name508 = ET.SubElement(asynchronous_server_call_point1, 'SHORT-NAME')
    short_name508.text = 'ASCP_RPort_CS_Operation'
    operation_iref2 = ET.SubElement(asynchronous_server_call_point1, 'OPERATION-IREF')
    context_r_port_ref4 = ET.SubElement(operation_iref2, 'CONTEXT-R-PORT-REF')
    context_r_port_ref4.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_CS'
    context_r_port_ref4.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_required_operation_ref1 = ET.SubElement(operation_iref2, 'TARGET-REQUIRED-OPERATION-REF')
    target_required_operation_ref1.text = '/SharedElements/PortInterfaces/ClientServer/ClientServerInterface/Operation'
    target_required_operation_ref1.attrib = {'DEST': 'CLIENT-SERVER-OPERATION'}
    timeout1 = ET.SubElement(asynchronous_server_call_point1, 'TIMEOUT')
    timeout1.text = '0'
    symbol1 = ET.SubElement(runnable_entity1, 'SYMBOL')
    symbol1.text = 'ApplicationSwComponentType_Runnable'
    runnable_entity2 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity2.attrib = {'UUID': '4a40f3ec-f4dd-4ab0-8562-6a5174f2901e'}
    short_name509 = ET.SubElement(runnable_entity2, 'SHORT-NAME')
    short_name509.text = 'Runnable1'
    minimum_start_interval2 = ET.SubElement(runnable_entity2, 'MINIMUM-START-INTERVAL')
    minimum_start_interval2.text = '0'
    can_be_invoked_concurrently2 = ET.SubElement(runnable_entity2, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently2.text = 'false'
    symbol2 = ET.SubElement(runnable_entity2, 'SYMBOL')
    symbol2.text = 'ApplicationSwComponentType_Runnable1'
    runnable_entity3 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity3.attrib = {'UUID': '83eca00a-85d5-4f04-9573-3d997cd29b67'}
    short_name510 = ET.SubElement(runnable_entity3, 'SHORT-NAME')
    short_name510.text = 'Runnable2'
    minimum_start_interval3 = ET.SubElement(runnable_entity3, 'MINIMUM-START-INTERVAL')
    minimum_start_interval3.text = '0'
    can_be_invoked_concurrently3 = ET.SubElement(runnable_entity3, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently3.text = 'false'
    symbol3 = ET.SubElement(runnable_entity3, 'SYMBOL')
    symbol3.text = 'ApplicationSwComponentType_Runnable2'
    runnable_entity4 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity4.attrib = {'UUID': '20bfd5e2-a118-4324-97fd-dcd5bf5f0a46'}
    short_name511 = ET.SubElement(runnable_entity4, 'SHORT-NAME')
    short_name511.text = 'Runnable3'
    minimum_start_interval4 = ET.SubElement(runnable_entity4, 'MINIMUM-START-INTERVAL')
    minimum_start_interval4.text = '0'
    can_be_invoked_concurrently4 = ET.SubElement(runnable_entity4, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently4.text = 'false'
    symbol4 = ET.SubElement(runnable_entity4, 'SYMBOL')
    symbol4.text = 'ApplicationSwComponentType_Runnable3'
    runnable_entity5 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity5.attrib = {'UUID': 'ae315d13-a18a-4515-b02d-f1b207f85e47'}
    short_name512 = ET.SubElement(runnable_entity5, 'SHORT-NAME')
    short_name512.text = 'Runnable4'
    minimum_start_interval5 = ET.SubElement(runnable_entity5, 'MINIMUM-START-INTERVAL')
    minimum_start_interval5.text = '0'
    can_be_invoked_concurrently5 = ET.SubElement(runnable_entity5, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently5.text = 'false'
    data_send_points1 = ET.SubElement(runnable_entity5, 'DATA-SEND-POINTS')
    variable_access1 = ET.SubElement(data_send_points1, 'VARIABLE-ACCESS')
    variable_access1.attrib = {'UUID': '2a04aecc-a1b6-494f-838e-29671adb5210'}
    short_name513 = ET.SubElement(variable_access1, 'SHORT-NAME')
    short_name513.text = 'DSP_PPort_SR_DataElement'
    accessed_variable1 = ET.SubElement(variable_access1, 'ACCESSED-VARIABLE')
    autosar_variable_iref1 = ET.SubElement(accessed_variable1, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref1 = ET.SubElement(autosar_variable_iref1, 'PORT-PROTOTYPE-REF')
    port_prototype_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_SR'
    port_prototype_ref1.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref1 = ET.SubElement(autosar_variable_iref1, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref1.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement'
    target_data_prototype_ref1.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    symbol5 = ET.SubElement(runnable_entity5, 'SYMBOL')
    symbol5.text = 'ApplicationSwComponentType_Runnable4'
    runnable_entity6 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity6.attrib = {'UUID': '3ea0641c-9d79-4f93-8287-e34956b5c134'}
    short_name514 = ET.SubElement(runnable_entity6, 'SHORT-NAME')
    short_name514.text = 'Runnable5'
    minimum_start_interval6 = ET.SubElement(runnable_entity6, 'MINIMUM-START-INTERVAL')
    minimum_start_interval6.text = '0'
    can_be_invoked_concurrently6 = ET.SubElement(runnable_entity6, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently6.text = 'false'
    data_write_accesss1 = ET.SubElement(runnable_entity6, 'DATA-WRITE-ACCESSS')
    variable_access2 = ET.SubElement(data_write_accesss1, 'VARIABLE-ACCESS')
    variable_access2.attrib = {'UUID': '326a474d-8d28-41bc-bd9e-91de9802f682'}
    short_name515 = ET.SubElement(variable_access2, 'SHORT-NAME')
    short_name515.text = 'DWA_PPort_SR_DataElement1'
    accessed_variable2 = ET.SubElement(variable_access2, 'ACCESSED-VARIABLE')
    autosar_variable_iref2 = ET.SubElement(accessed_variable2, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref2 = ET.SubElement(autosar_variable_iref2, 'PORT-PROTOTYPE-REF')
    port_prototype_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_SR'
    port_prototype_ref2.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref2 = ET.SubElement(autosar_variable_iref2, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref2.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement1'
    target_data_prototype_ref2.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    symbol6 = ET.SubElement(runnable_entity6, 'SYMBOL')
    symbol6.text = 'ApplicationSwComponentType_Runnable5'
    runnable_entity7 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity7.attrib = {'UUID': 'd7adad0b-22d1-4b37-9691-0677036197aa'}
    short_name516 = ET.SubElement(runnable_entity7, 'SHORT-NAME')
    short_name516.text = 'Runnable6'
    minimum_start_interval7 = ET.SubElement(runnable_entity7, 'MINIMUM-START-INTERVAL')
    minimum_start_interval7.text = '0'
    can_be_invoked_concurrently7 = ET.SubElement(runnable_entity7, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently7.text = 'false'
    symbol7 = ET.SubElement(runnable_entity7, 'SYMBOL')
    symbol7.text = 'ApplicationSwComponentType_Runnable6'
    runnable_entity8 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity8.attrib = {'UUID': '98d30ebd-bbcb-4780-bc4a-27e6fd798a5a'}
    short_name517 = ET.SubElement(runnable_entity8, 'SHORT-NAME')
    short_name517.text = 'Runnable7'
    minimum_start_interval8 = ET.SubElement(runnable_entity8, 'MINIMUM-START-INTERVAL')
    minimum_start_interval8.text = '0'
    can_be_invoked_concurrently8 = ET.SubElement(runnable_entity8, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently8.text = 'false'
    symbol8 = ET.SubElement(runnable_entity8, 'SYMBOL')
    symbol8.text = 'ApplicationSwComponentType_Runnable7'
    runnable_entity9 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity9.attrib = {'UUID': 'a6d9d7cb-1d57-45f2-b36a-1e1ab717fb1e'}
    short_name518 = ET.SubElement(runnable_entity9, 'SHORT-NAME')
    short_name518.text = 'Runnable9'
    minimum_start_interval9 = ET.SubElement(runnable_entity9, 'MINIMUM-START-INTERVAL')
    minimum_start_interval9.text = '0'
    can_be_invoked_concurrently9 = ET.SubElement(runnable_entity9, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently9.text = 'false'
    mode_switch_points1 = ET.SubElement(runnable_entity9, 'MODE-SWITCH-POINTS')
    mode_switch_point1 = ET.SubElement(mode_switch_points1, 'MODE-SWITCH-POINT')
    mode_switch_point1.attrib = {'UUID': 'dd700e44-3e29-4b21-901f-c2e36c719f6a'}
    short_name519 = ET.SubElement(mode_switch_point1, 'SHORT-NAME')
    short_name519.text = 'MSP_PPort_msi_ModeGroup'
    mode_group_iref1 = ET.SubElement(mode_switch_point1, 'MODE-GROUP-IREF')
    context_p_port_ref2 = ET.SubElement(mode_group_iref1, 'CONTEXT-P-PORT-REF')
    context_p_port_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_msi'
    context_p_port_ref2.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_mode_group_ref1 = ET.SubElement(mode_group_iref1, 'TARGET-MODE-GROUP-REF')
    target_mode_group_ref1.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeSwitchInterface/ModeGroup'
    target_mode_group_ref1.attrib = {'DEST': 'MODE-DECLARATION-GROUP-PROTOTYPE'}
    symbol9 = ET.SubElement(runnable_entity9, 'SYMBOL')
    symbol9.text = 'ApplicationSwComponentType_Runnable9'
    runnable_entity10 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity10.attrib = {'UUID': '3d515ac9-9c51-4cb8-a6af-ea16d3afd01d'}
    short_name520 = ET.SubElement(runnable_entity10, 'SHORT-NAME')
    short_name520.text = 'Runnable10'
    minimum_start_interval10 = ET.SubElement(runnable_entity10, 'MINIMUM-START-INTERVAL')
    minimum_start_interval10.text = '0'
    can_be_invoked_concurrently10 = ET.SubElement(runnable_entity10, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently10.text = 'false'
    symbol10 = ET.SubElement(runnable_entity10, 'SYMBOL')
    symbol10.text = 'ApplicationSwComponentType_Runnable10'
    runnable_entity11 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity11.attrib = {'UUID': '9bddd887-575d-463b-b09d-d1b63ec1352b'}
    short_name521 = ET.SubElement(runnable_entity11, 'SHORT-NAME')
    short_name521.text = 'Runnable11'
    minimum_start_interval11 = ET.SubElement(runnable_entity11, 'MINIMUM-START-INTERVAL')
    minimum_start_interval11.text = '0'
    can_be_invoked_concurrently11 = ET.SubElement(runnable_entity11, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently11.text = 'false'
    symbol11 = ET.SubElement(runnable_entity11, 'SYMBOL')
    symbol11.text = 'ApplicationSwComponentType_Runnable11'
    runnable_entity12 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity12.attrib = {'UUID': 'fa96688f-7ffe-4b3b-aa43-c124847e2efd'}
    short_name522 = ET.SubElement(runnable_entity12, 'SHORT-NAME')
    short_name522.text = 'Runnable12'
    minimum_start_interval12 = ET.SubElement(runnable_entity12, 'MINIMUM-START-INTERVAL')
    minimum_start_interval12.text = '0'
    can_be_invoked_concurrently12 = ET.SubElement(runnable_entity12, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently12.text = 'false'
    symbol12 = ET.SubElement(runnable_entity12, 'SYMBOL')
    symbol12.text = 'ApplicationSwComponentType_Runnable12'
    runnable_entity13 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity13.attrib = {'UUID': 'e967670f-46d8-4d91-b4b9-62c85a17843e'}
    short_name523 = ET.SubElement(runnable_entity13, 'SHORT-NAME')
    short_name523.text = 'Runnable13'
    minimum_start_interval13 = ET.SubElement(runnable_entity13, 'MINIMUM-START-INTERVAL')
    minimum_start_interval13.text = '0'
    can_be_invoked_concurrently13 = ET.SubElement(runnable_entity13, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently13.text = 'false'
    data_read_accesss1 = ET.SubElement(runnable_entity13, 'DATA-READ-ACCESSS')
    variable_access3 = ET.SubElement(data_read_accesss1, 'VARIABLE-ACCESS')
    variable_access3.attrib = {'UUID': '9bf42611-5276-4ce4-92b5-36c024121479'}
    short_name524 = ET.SubElement(variable_access3, 'SHORT-NAME')
    short_name524.text = 'DRA_RPort_SR_DataElement'
    accessed_variable3 = ET.SubElement(variable_access3, 'ACCESSED-VARIABLE')
    autosar_variable_iref3 = ET.SubElement(accessed_variable3, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref3 = ET.SubElement(autosar_variable_iref3, 'PORT-PROTOTYPE-REF')
    port_prototype_ref3.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_SR'
    port_prototype_ref3.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref3 = ET.SubElement(autosar_variable_iref3, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref3.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement'
    target_data_prototype_ref3.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access4 = ET.SubElement(data_read_accesss1, 'VARIABLE-ACCESS')
    variable_access4.attrib = {'UUID': '9eef2638-b3d9-47c1-9e18-37822b089dd4'}
    short_name525 = ET.SubElement(variable_access4, 'SHORT-NAME')
    short_name525.text = 'DRA_RPort_SR_DataElement1'
    accessed_variable4 = ET.SubElement(variable_access4, 'ACCESSED-VARIABLE')
    autosar_variable_iref4 = ET.SubElement(accessed_variable4, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref4 = ET.SubElement(autosar_variable_iref4, 'PORT-PROTOTYPE-REF')
    port_prototype_ref4.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_SR'
    port_prototype_ref4.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref4 = ET.SubElement(autosar_variable_iref4, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref4.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement1'
    target_data_prototype_ref4.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access5 = ET.SubElement(data_read_accesss1, 'VARIABLE-ACCESS')
    variable_access5.attrib = {'UUID': '26ad84a0-bc71-4cae-92f7-69d3d1bc91ff'}
    short_name526 = ET.SubElement(variable_access5, 'SHORT-NAME')
    short_name526.text = 'DRA_RPort_nvd_NvData'
    accessed_variable5 = ET.SubElement(variable_access5, 'ACCESSED-VARIABLE')
    autosar_variable_iref5 = ET.SubElement(accessed_variable5, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref5 = ET.SubElement(autosar_variable_iref5, 'PORT-PROTOTYPE-REF')
    port_prototype_ref5.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_nvd'
    port_prototype_ref5.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref5 = ET.SubElement(autosar_variable_iref5, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref5.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData'
    target_data_prototype_ref5.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access6 = ET.SubElement(data_read_accesss1, 'VARIABLE-ACCESS')
    variable_access6.attrib = {'UUID': '067aa426-f94d-4f7c-b471-a3631398a8a6'}
    short_name527 = ET.SubElement(variable_access6, 'SHORT-NAME')
    short_name527.text = 'DRA_RPort_nvd_NvData1'
    accessed_variable6 = ET.SubElement(variable_access6, 'ACCESSED-VARIABLE')
    autosar_variable_iref6 = ET.SubElement(accessed_variable6, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref6 = ET.SubElement(autosar_variable_iref6, 'PORT-PROTOTYPE-REF')
    port_prototype_ref6.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_nvd'
    port_prototype_ref6.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref6 = ET.SubElement(autosar_variable_iref6, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref6.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData1'
    target_data_prototype_ref6.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    data_write_accesss2 = ET.SubElement(runnable_entity13, 'DATA-WRITE-ACCESSS')
    variable_access7 = ET.SubElement(data_write_accesss2, 'VARIABLE-ACCESS')
    variable_access7.attrib = {'UUID': 'a0b4f337-7b3c-4ade-bc28-db75b0882305'}
    short_name528 = ET.SubElement(variable_access7, 'SHORT-NAME')
    short_name528.text = 'DWA_PPort_SR_DataElement'
    accessed_variable7 = ET.SubElement(variable_access7, 'ACCESSED-VARIABLE')
    autosar_variable_iref7 = ET.SubElement(accessed_variable7, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref7 = ET.SubElement(autosar_variable_iref7, 'PORT-PROTOTYPE-REF')
    port_prototype_ref7.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_SR'
    port_prototype_ref7.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref7 = ET.SubElement(autosar_variable_iref7, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref7.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement'
    target_data_prototype_ref7.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access8 = ET.SubElement(data_write_accesss2, 'VARIABLE-ACCESS')
    variable_access8.attrib = {'UUID': '839b63ac-ec02-4b70-aca8-f974d2ab728c'}
    short_name529 = ET.SubElement(variable_access8, 'SHORT-NAME')
    short_name529.text = 'DWA_PPort_SR_DataElement1'
    accessed_variable8 = ET.SubElement(variable_access8, 'ACCESSED-VARIABLE')
    autosar_variable_iref8 = ET.SubElement(accessed_variable8, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref8 = ET.SubElement(autosar_variable_iref8, 'PORT-PROTOTYPE-REF')
    port_prototype_ref8.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_SR'
    port_prototype_ref8.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref8 = ET.SubElement(autosar_variable_iref8, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref8.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement1'
    target_data_prototype_ref8.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access9 = ET.SubElement(data_write_accesss2, 'VARIABLE-ACCESS')
    variable_access9.attrib = {'UUID': 'b68d4be0-8b3f-4259-9c8a-2901c17454d7'}
    short_name530 = ET.SubElement(variable_access9, 'SHORT-NAME')
    short_name530.text = 'DWA_PPort_nvd_NvData'
    accessed_variable9 = ET.SubElement(variable_access9, 'ACCESSED-VARIABLE')
    autosar_variable_iref9 = ET.SubElement(accessed_variable9, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref9 = ET.SubElement(autosar_variable_iref9, 'PORT-PROTOTYPE-REF')
    port_prototype_ref9.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_nvd'
    port_prototype_ref9.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref9 = ET.SubElement(autosar_variable_iref9, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref9.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData'
    target_data_prototype_ref9.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access10 = ET.SubElement(data_write_accesss2, 'VARIABLE-ACCESS')
    variable_access10.attrib = {'UUID': '3e84de24-a491-4152-b344-8c5e44e9197e'}
    short_name531 = ET.SubElement(variable_access10, 'SHORT-NAME')
    short_name531.text = 'DWA_PPort_nvd_NvData1'
    accessed_variable10 = ET.SubElement(variable_access10, 'ACCESSED-VARIABLE')
    autosar_variable_iref10 = ET.SubElement(accessed_variable10, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref10 = ET.SubElement(autosar_variable_iref10, 'PORT-PROTOTYPE-REF')
    port_prototype_ref10.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_nvd'
    port_prototype_ref10.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref10 = ET.SubElement(autosar_variable_iref10, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref10.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData1'
    target_data_prototype_ref10.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    read_local_variables1 = ET.SubElement(runnable_entity13, 'READ-LOCAL-VARIABLES')
    variable_access11 = ET.SubElement(read_local_variables1, 'VARIABLE-ACCESS')
    variable_access11.attrib = {'UUID': 'c8972fdb-f78a-4e12-9a30-4faf0daa6c23'}
    short_name532 = ET.SubElement(variable_access11, 'SHORT-NAME')
    short_name532.text = 'IRVRA_ExplicitInterRunnableVariable'
    accessed_variable11 = ET.SubElement(variable_access11, 'ACCESSED-VARIABLE')
    local_variable_ref1 = ET.SubElement(accessed_variable11, 'LOCAL-VARIABLE-REF')
    local_variable_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/ExplicitInterRunnableVariable'
    local_variable_ref1.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access12 = ET.SubElement(read_local_variables1, 'VARIABLE-ACCESS')
    variable_access12.attrib = {'UUID': 'bf16d1d1-6833-4572-8830-6e31aa069454'}
    short_name533 = ET.SubElement(variable_access12, 'SHORT-NAME')
    short_name533.text = 'IRVRA_ImplicitInterRunnableVariable'
    accessed_variable12 = ET.SubElement(variable_access12, 'ACCESSED-VARIABLE')
    local_variable_ref2 = ET.SubElement(accessed_variable12, 'LOCAL-VARIABLE-REF')
    local_variable_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/ImplicitInterRunnableVariable'
    local_variable_ref2.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    symbol13 = ET.SubElement(runnable_entity13, 'SYMBOL')
    symbol13.text = 'ApplicationSwComponentType_Runnable13'
    runnable_entity14 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity14.attrib = {'UUID': '1c2e8cb0-fdf5-45ee-9257-dee6f42d2ad4'}
    short_name534 = ET.SubElement(runnable_entity14, 'SHORT-NAME')
    short_name534.text = 'Runnable14'
    minimum_start_interval14 = ET.SubElement(runnable_entity14, 'MINIMUM-START-INTERVAL')
    minimum_start_interval14.text = '0'
    can_be_invoked_concurrently14 = ET.SubElement(runnable_entity14, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently14.text = 'false'
    symbol14 = ET.SubElement(runnable_entity14, 'SYMBOL')
    symbol14.text = 'ApplicationSwComponentType_Runnable14'
    runnable_entity15 = ET.SubElement(runnables1, 'RUNNABLE-ENTITY')
    runnable_entity15.attrib = {'UUID': '6debf2b3-9c4c-455e-9cbc-0c7cfaca4d43'}
    short_name535 = ET.SubElement(runnable_entity15, 'SHORT-NAME')
    short_name535.text = 'Runnable15'
    minimum_start_interval15 = ET.SubElement(runnable_entity15, 'MINIMUM-START-INTERVAL')
    minimum_start_interval15.text = '0'
    can_be_invoked_concurrently15 = ET.SubElement(runnable_entity15, 'CAN-BE-INVOKED-CONCURRENTLY')
    can_be_invoked_concurrently15.text = 'false'
    data_read_accesss2 = ET.SubElement(runnable_entity15, 'DATA-READ-ACCESSS')
    variable_access13 = ET.SubElement(data_read_accesss2, 'VARIABLE-ACCESS')
    variable_access13.attrib = {'UUID': '5648b05b-23f8-4729-9fdd-25a617e2d17b'}
    short_name536 = ET.SubElement(variable_access13, 'SHORT-NAME')
    short_name536.text = 'DRA_RPort_nvd_NvData'
    accessed_variable13 = ET.SubElement(variable_access13, 'ACCESSED-VARIABLE')
    autosar_variable_iref11 = ET.SubElement(accessed_variable13, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref11 = ET.SubElement(autosar_variable_iref11, 'PORT-PROTOTYPE-REF')
    port_prototype_ref11.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_nvd'
    port_prototype_ref11.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref11 = ET.SubElement(autosar_variable_iref11, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref11.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData'
    target_data_prototype_ref11.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access14 = ET.SubElement(data_read_accesss2, 'VARIABLE-ACCESS')
    variable_access14.attrib = {'UUID': 'b355b0ac-1fa9-43f7-b5ab-240eae2c3694'}
    short_name537 = ET.SubElement(variable_access14, 'SHORT-NAME')
    short_name537.text = 'DRA_RPort_nvd_NvData1'
    accessed_variable14 = ET.SubElement(variable_access14, 'ACCESSED-VARIABLE')
    autosar_variable_iref12 = ET.SubElement(accessed_variable14, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref12 = ET.SubElement(autosar_variable_iref12, 'PORT-PROTOTYPE-REF')
    port_prototype_ref12.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_nvd'
    port_prototype_ref12.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref12 = ET.SubElement(autosar_variable_iref12, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref12.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData1'
    target_data_prototype_ref12.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    data_receive_point_by_arguments1 = ET.SubElement(runnable_entity15, 'DATA-RECEIVE-POINT-BY-ARGUMENTS')
    variable_access15 = ET.SubElement(data_receive_point_by_arguments1, 'VARIABLE-ACCESS')
    variable_access15.attrib = {'UUID': '86796258-06a6-480e-8a39-e01411743a56'}
    short_name538 = ET.SubElement(variable_access15, 'SHORT-NAME')
    short_name538.text = 'DRP_RPort_SR_DataElement'
    accessed_variable15 = ET.SubElement(variable_access15, 'ACCESSED-VARIABLE')
    autosar_variable_iref13 = ET.SubElement(accessed_variable15, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref13 = ET.SubElement(autosar_variable_iref13, 'PORT-PROTOTYPE-REF')
    port_prototype_ref13.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_SR'
    port_prototype_ref13.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref13 = ET.SubElement(autosar_variable_iref13, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref13.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement'
    target_data_prototype_ref13.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access16 = ET.SubElement(data_receive_point_by_arguments1, 'VARIABLE-ACCESS')
    variable_access16.attrib = {'UUID': '88c27605-b9a2-4db7-af10-2a0953c5110b'}
    short_name539 = ET.SubElement(variable_access16, 'SHORT-NAME')
    short_name539.text = 'DRP_RPort_nvd_NvData'
    accessed_variable16 = ET.SubElement(variable_access16, 'ACCESSED-VARIABLE')
    autosar_variable_iref14 = ET.SubElement(accessed_variable16, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref14 = ET.SubElement(autosar_variable_iref14, 'PORT-PROTOTYPE-REF')
    port_prototype_ref14.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_nvd'
    port_prototype_ref14.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref14 = ET.SubElement(autosar_variable_iref14, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref14.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData'
    target_data_prototype_ref14.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access17 = ET.SubElement(data_receive_point_by_arguments1, 'VARIABLE-ACCESS')
    variable_access17.attrib = {'UUID': 'b69ad602-c226-42a5-9bbb-acbbc5c16743'}
    short_name540 = ET.SubElement(variable_access17, 'SHORT-NAME')
    short_name540.text = 'DRP_RPort_nvd_NvData1'
    accessed_variable17 = ET.SubElement(variable_access17, 'ACCESSED-VARIABLE')
    autosar_variable_iref15 = ET.SubElement(accessed_variable17, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref15 = ET.SubElement(autosar_variable_iref15, 'PORT-PROTOTYPE-REF')
    port_prototype_ref15.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_nvd'
    port_prototype_ref15.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref15 = ET.SubElement(autosar_variable_iref15, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref15.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData1'
    target_data_prototype_ref15.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    data_receive_point_by_values1 = ET.SubElement(runnable_entity15, 'DATA-RECEIVE-POINT-BY-VALUES')
    variable_access18 = ET.SubElement(data_receive_point_by_values1, 'VARIABLE-ACCESS')
    variable_access18.attrib = {'UUID': '38ed8447-65f1-48a9-b075-fa613c1267d2'}
    short_name541 = ET.SubElement(variable_access18, 'SHORT-NAME')
    short_name541.text = 'DRPV_RPort_SR_DataElement1'
    accessed_variable18 = ET.SubElement(variable_access18, 'ACCESSED-VARIABLE')
    autosar_variable_iref16 = ET.SubElement(accessed_variable18, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref16 = ET.SubElement(autosar_variable_iref16, 'PORT-PROTOTYPE-REF')
    port_prototype_ref16.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_SR'
    port_prototype_ref16.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref16 = ET.SubElement(autosar_variable_iref16, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref16.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement1'
    target_data_prototype_ref16.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access19 = ET.SubElement(data_receive_point_by_values1, 'VARIABLE-ACCESS')
    variable_access19.attrib = {'UUID': 'd07d7e6b-0d9c-4475-bbb9-2ccfc3e60c33'}
    short_name542 = ET.SubElement(variable_access19, 'SHORT-NAME')
    short_name542.text = 'DRPV_RPort_nvd_NvData'
    accessed_variable19 = ET.SubElement(variable_access19, 'ACCESSED-VARIABLE')
    autosar_variable_iref17 = ET.SubElement(accessed_variable19, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref17 = ET.SubElement(autosar_variable_iref17, 'PORT-PROTOTYPE-REF')
    port_prototype_ref17.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_nvd'
    port_prototype_ref17.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref17 = ET.SubElement(autosar_variable_iref17, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref17.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData'
    target_data_prototype_ref17.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    data_send_points2 = ET.SubElement(runnable_entity15, 'DATA-SEND-POINTS')
    variable_access20 = ET.SubElement(data_send_points2, 'VARIABLE-ACCESS')
    variable_access20.attrib = {'UUID': '2fc872c8-d598-4d11-8502-1a70e9104bc9'}
    short_name543 = ET.SubElement(variable_access20, 'SHORT-NAME')
    short_name543.text = 'DSP_PPort_SR_DataElement'
    accessed_variable20 = ET.SubElement(variable_access20, 'ACCESSED-VARIABLE')
    autosar_variable_iref18 = ET.SubElement(accessed_variable20, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref18 = ET.SubElement(autosar_variable_iref18, 'PORT-PROTOTYPE-REF')
    port_prototype_ref18.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_SR'
    port_prototype_ref18.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref18 = ET.SubElement(autosar_variable_iref18, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref18.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement'
    target_data_prototype_ref18.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access21 = ET.SubElement(data_send_points2, 'VARIABLE-ACCESS')
    variable_access21.attrib = {'UUID': 'a2f22836-4cd0-4c2e-8040-1abdf8935ac0'}
    short_name544 = ET.SubElement(variable_access21, 'SHORT-NAME')
    short_name544.text = 'DSP_PPort_SR_DataElement1'
    accessed_variable21 = ET.SubElement(variable_access21, 'ACCESSED-VARIABLE')
    autosar_variable_iref19 = ET.SubElement(accessed_variable21, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref19 = ET.SubElement(autosar_variable_iref19, 'PORT-PROTOTYPE-REF')
    port_prototype_ref19.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_SR'
    port_prototype_ref19.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref19 = ET.SubElement(autosar_variable_iref19, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref19.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement1'
    target_data_prototype_ref19.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access22 = ET.SubElement(data_send_points2, 'VARIABLE-ACCESS')
    variable_access22.attrib = {'UUID': 'c0c41eb1-b5bf-4e30-9569-24d7316b64c8'}
    short_name545 = ET.SubElement(variable_access22, 'SHORT-NAME')
    short_name545.text = 'DSP_PPort_nvd_NvData'
    accessed_variable22 = ET.SubElement(variable_access22, 'ACCESSED-VARIABLE')
    autosar_variable_iref20 = ET.SubElement(accessed_variable22, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref20 = ET.SubElement(autosar_variable_iref20, 'PORT-PROTOTYPE-REF')
    port_prototype_ref20.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_nvd'
    port_prototype_ref20.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref20 = ET.SubElement(autosar_variable_iref20, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref20.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData'
    target_data_prototype_ref20.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access23 = ET.SubElement(data_send_points2, 'VARIABLE-ACCESS')
    variable_access23.attrib = {'UUID': '96f66382-5f86-4a47-bd5b-9f95f81fc3c9'}
    short_name546 = ET.SubElement(variable_access23, 'SHORT-NAME')
    short_name546.text = 'DSP_PPort_nvd_NvData1'
    accessed_variable23 = ET.SubElement(variable_access23, 'ACCESSED-VARIABLE')
    autosar_variable_iref21 = ET.SubElement(accessed_variable23, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref21 = ET.SubElement(autosar_variable_iref21, 'PORT-PROTOTYPE-REF')
    port_prototype_ref21.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_nvd'
    port_prototype_ref21.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref21 = ET.SubElement(autosar_variable_iref21, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref21.text = '/SharedElements/PortInterfaces/NvData/NvDataInterface/NvData1'
    target_data_prototype_ref21.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    data_write_accesss3 = ET.SubElement(runnable_entity15, 'DATA-WRITE-ACCESSS')
    variable_access24 = ET.SubElement(data_write_accesss3, 'VARIABLE-ACCESS')
    variable_access24.attrib = {'UUID': 'd40a6e94-d8e5-48e5-8a1a-c7debe02592f'}
    short_name547 = ET.SubElement(variable_access24, 'SHORT-NAME')
    short_name547.text = 'DWA_PPort_SR_DataElement1'
    accessed_variable24 = ET.SubElement(variable_access24, 'ACCESSED-VARIABLE')
    autosar_variable_iref22 = ET.SubElement(accessed_variable24, 'AUTOSAR-VARIABLE-IREF')
    port_prototype_ref22 = ET.SubElement(autosar_variable_iref22, 'PORT-PROTOTYPE-REF')
    port_prototype_ref22.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_SR'
    port_prototype_ref22.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_data_prototype_ref22 = ET.SubElement(autosar_variable_iref22, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref22.text = '/SharedElements/PortInterfaces/SenderReceiver/SenderReceiverInterface/DataElement1'
    target_data_prototype_ref22.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    mode_switch_points2 = ET.SubElement(runnable_entity15, 'MODE-SWITCH-POINTS')
    mode_switch_point2 = ET.SubElement(mode_switch_points2, 'MODE-SWITCH-POINT')
    mode_switch_point2.attrib = {'UUID': '8f7d9801-a32d-4e5f-85cd-fbcf669d921a'}
    short_name548 = ET.SubElement(mode_switch_point2, 'SHORT-NAME')
    short_name548.text = 'MSP_PPort_msi_ModeGroup'
    mode_group_iref2 = ET.SubElement(mode_switch_point2, 'MODE-GROUP-IREF')
    context_p_port_ref3 = ET.SubElement(mode_group_iref2, 'CONTEXT-P-PORT-REF')
    context_p_port_ref3.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/PPort_msi'
    context_p_port_ref3.attrib = {'DEST': 'P-PORT-PROTOTYPE'}
    target_mode_group_ref2 = ET.SubElement(mode_group_iref2, 'TARGET-MODE-GROUP-REF')
    target_mode_group_ref2.text = '/SharedElements/PortInterfaces/ModeSwitch/ModeSwitchInterface/ModeGroup'
    target_mode_group_ref2.attrib = {'DEST': 'MODE-DECLARATION-GROUP-PROTOTYPE'}
    parameter_accesss1 = ET.SubElement(runnable_entity15, 'PARAMETER-ACCESSS')
    parameter_access1 = ET.SubElement(parameter_accesss1, 'PARAMETER-ACCESS')
    parameter_access1.attrib = {'UUID': '92d672aa-34ea-4fcb-a0a2-ab2431d59c0a'}
    short_name549 = ET.SubElement(parameter_access1, 'SHORT-NAME')
    short_name549.text = 'ParameterAccess'
    accessed_parameter1 = ET.SubElement(parameter_access1, 'ACCESSED-PARAMETER')
    local_parameter_ref1 = ET.SubElement(accessed_parameter1, 'LOCAL-PARAMETER-REF')
    local_parameter_ref1.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/ConstantMemory'
    local_parameter_ref1.attrib = {'DEST': 'PARAMETER-DATA-PROTOTYPE'}
    parameter_access2 = ET.SubElement(parameter_accesss1, 'PARAMETER-ACCESS')
    parameter_access2.attrib = {'UUID': '391726ca-20e2-4c02-b063-65244a9e523a'}
    short_name550 = ET.SubElement(parameter_access2, 'SHORT-NAME')
    short_name550.text = 'PICPVA_PerInstanceParameter'
    accessed_parameter2 = ET.SubElement(parameter_access2, 'ACCESSED-PARAMETER')
    local_parameter_ref2 = ET.SubElement(accessed_parameter2, 'LOCAL-PARAMETER-REF')
    local_parameter_ref2.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/PerInstanceParameter'
    local_parameter_ref2.attrib = {'DEST': 'PARAMETER-DATA-PROTOTYPE'}
    parameter_access3 = ET.SubElement(parameter_accesss1, 'PARAMETER-ACCESS')
    parameter_access3.attrib = {'UUID': '19d7aee6-82b8-4233-a787-b84bdb562167'}
    short_name551 = ET.SubElement(parameter_access3, 'SHORT-NAME')
    short_name551.text = 'CPA_RPort_prm_Parameter'
    accessed_parameter3 = ET.SubElement(parameter_access3, 'ACCESSED-PARAMETER')
    autosar_parameter_iref1 = ET.SubElement(accessed_parameter3, 'AUTOSAR-PARAMETER-IREF')
    port_prototype_ref23 = ET.SubElement(autosar_parameter_iref1, 'PORT-PROTOTYPE-REF')
    port_prototype_ref23.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_prm'
    port_prototype_ref23.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref23 = ET.SubElement(autosar_parameter_iref1, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref23.text = '/SharedElements/PortInterfaces/Parameter/ParameterInterface/Parameter'
    target_data_prototype_ref23.attrib = {'DEST': 'PARAMETER-DATA-PROTOTYPE'}
    parameter_access4 = ET.SubElement(parameter_accesss1, 'PARAMETER-ACCESS')
    parameter_access4.attrib = {'UUID': 'ab7c5c59-47f3-4fee-a310-f64cb2c00c48'}
    short_name552 = ET.SubElement(parameter_access4, 'SHORT-NAME')
    short_name552.text = 'CPA_RPort_prm_Parameter1'
    accessed_parameter4 = ET.SubElement(parameter_access4, 'ACCESSED-PARAMETER')
    autosar_parameter_iref2 = ET.SubElement(accessed_parameter4, 'AUTOSAR-PARAMETER-IREF')
    port_prototype_ref24 = ET.SubElement(autosar_parameter_iref2, 'PORT-PROTOTYPE-REF')
    port_prototype_ref24.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_prm'
    port_prototype_ref24.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_data_prototype_ref24 = ET.SubElement(autosar_parameter_iref2, 'TARGET-DATA-PROTOTYPE-REF')
    target_data_prototype_ref24.text = '/SharedElements/PortInterfaces/Parameter/ParameterInterface/Parameter1'
    target_data_prototype_ref24.attrib = {'DEST': 'PARAMETER-DATA-PROTOTYPE'}
    parameter_access5 = ET.SubElement(parameter_accesss1, 'PARAMETER-ACCESS')
    parameter_access5.attrib = {'UUID': 'f7d2bfa9-92c5-4627-b238-86aadd05585b'}
    short_name553 = ET.SubElement(parameter_access5, 'SHORT-NAME')
    short_name553.text = 'SCPVA_SharedParameter'
    accessed_parameter5 = ET.SubElement(parameter_access5, 'ACCESSED-PARAMETER')
    local_parameter_ref3 = ET.SubElement(accessed_parameter5, 'LOCAL-PARAMETER-REF')
    local_parameter_ref3.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/SharedParameter'
    local_parameter_ref3.attrib = {'DEST': 'PARAMETER-DATA-PROTOTYPE'}
    server_call_points2 = ET.SubElement(runnable_entity15, 'SERVER-CALL-POINTS')
    synchronous_server_call_point1 = ET.SubElement(server_call_points2, 'SYNCHRONOUS-SERVER-CALL-POINT')
    synchronous_server_call_point1.attrib = {'UUID': 'd6a93f51-be57-4a77-bd8f-e25d3e0ba149'}
    short_name554 = ET.SubElement(synchronous_server_call_point1, 'SHORT-NAME')
    short_name554.text = 'SSCP_RPort_CS_Operation1'
    operation_iref3 = ET.SubElement(synchronous_server_call_point1, 'OPERATION-IREF')
    context_r_port_ref5 = ET.SubElement(operation_iref3, 'CONTEXT-R-PORT-REF')
    context_r_port_ref5.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/RPort_CS'
    context_r_port_ref5.attrib = {'DEST': 'R-PORT-PROTOTYPE'}
    target_required_operation_ref2 = ET.SubElement(operation_iref3, 'TARGET-REQUIRED-OPERATION-REF')
    target_required_operation_ref2.text = '/SharedElements/PortInterfaces/ClientServer/ClientServerInterface/Operation1'
    target_required_operation_ref2.attrib = {'DEST': 'CLIENT-SERVER-OPERATION'}
    timeout2 = ET.SubElement(synchronous_server_call_point1, 'TIMEOUT')
    timeout2.text = '0'
    symbol15 = ET.SubElement(runnable_entity15, 'SYMBOL')
    symbol15.text = 'ApplicationSwComponentType_Runnable15'
    written_local_variables1 = ET.SubElement(runnable_entity15, 'WRITTEN-LOCAL-VARIABLES')
    variable_access25 = ET.SubElement(written_local_variables1, 'VARIABLE-ACCESS')
    variable_access25.attrib = {'UUID': '7e246e9c-b78a-47be-8798-02887c881e6e'}
    short_name555 = ET.SubElement(variable_access25, 'SHORT-NAME')
    short_name555.text = 'IRVWA_ExplicitInterRunnableVariable'
    accessed_variable25 = ET.SubElement(variable_access25, 'ACCESSED-VARIABLE')
    local_variable_ref3 = ET.SubElement(accessed_variable25, 'LOCAL-VARIABLE-REF')
    local_variable_ref3.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/ExplicitInterRunnableVariable'
    local_variable_ref3.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    variable_access26 = ET.SubElement(written_local_variables1, 'VARIABLE-ACCESS')
    variable_access26.attrib = {'UUID': 'd976bba9-3132-4e15-ac45-88b85facf508'}
    short_name556 = ET.SubElement(variable_access26, 'SHORT-NAME')
    short_name556.text = 'IRVWA_ImplicitInterRunnableVariable'
    accessed_variable26 = ET.SubElement(variable_access26, 'ACCESSED-VARIABLE')
    local_variable_ref4 = ET.SubElement(accessed_variable26, 'LOCAL-VARIABLE-REF')
    local_variable_ref4.text = '/SwComponentTypes/ApplSWC/ApplicationSwComponentType/IB_Appl/ImplicitInterRunnableVariable'
    local_variable_ref4.attrib = {'DEST': 'VARIABLE-DATA-PROTOTYPE'}
    shared_parameters1 = ET.SubElement(swc_internal_behavior1, 'SHARED-PARAMETERS')
    parameter_data_prototype5 = ET.SubElement(shared_parameters1, 'PARAMETER-DATA-PROTOTYPE')
    parameter_data_prototype5.attrib = {'UUID': 'edf877b4-19ea-4e47-8180-a74099cfff0f'}
    short_name557 = ET.SubElement(parameter_data_prototype5, 'SHORT-NAME')
    short_name557.text = 'SharedParameter'
    sw_data_def_props90 = ET.SubElement(parameter_data_prototype5, 'SW-DATA-DEF-PROPS')
    sw_data_def_props_variants90 = ET.SubElement(sw_data_def_props90, 'SW-DATA-DEF-PROPS-VARIANTS')
    sw_data_def_props_conditional90 = ET.SubElement(sw_data_def_props_variants90, 'SW-DATA-DEF-PROPS-CONDITIONAL')
    sw_calibration_access15 = ET.SubElement(sw_data_def_props_conditional90, 'SW-CALIBRATION-ACCESS')
    sw_calibration_access15.text = 'READ-WRITE'
    sw_impl_policy35 = ET.SubElement(sw_data_def_props_conditional90, 'SW-IMPL-POLICY')
    sw_impl_policy35.text = 'STANDARD'
    type_tref39 = ET.SubElement(parameter_data_prototype5, 'TYPE-TREF')
    type_tref39.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/float32'
    type_tref39.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
    init_value7 = ET.SubElement(parameter_data_prototype5, 'INIT-VALUE')
    constant_reference3 = ET.SubElement(init_value7, 'CONSTANT-REFERENCE')
    short_label11 = ET.SubElement(constant_reference3, 'SHORT-LABEL')
    short_label11.text = 'ReferenceToConstant'
    constant_ref3 = ET.SubElement(constant_reference3, 'CONSTANT-REF')
    constant_ref3.text = '/SharedElements/ConstantSpecifications/ApplicationSwComponentType_SharedParameter'
    constant_ref3.attrib = {'DEST': 'CONSTANT-SPECIFICATION'}
    supports_multiple_instantiation1 = ET.SubElement(swc_internal_behavior1, 'SUPPORTS-MULTIPLE-INSTANTIATION')
    supports_multiple_instantiation1.text = 'false'
    ar_packages12 = ET.SubElement(ar_package46, 'AR-PACKAGES')
    ar_package47 = ET.SubElement(ar_packages12, 'AR-PACKAGE')
    ar_package47.attrib = {'UUID': '0f00b99f-27e3-434f-9d85-398fc7c29067'}
    short_name558 = ET.SubElement(ar_package47, 'SHORT-NAME')
    short_name558.text = 'ConstantSpecifications'
    ar_package48 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package48.attrib = {'UUID': '7f0b665f-81ab-462f-aeab-1777b0f9dfd8'}
    short_name559 = ET.SubElement(ar_package48, 'SHORT-NAME')
    short_name559.text = 'CddSWC'
    elements31 = ET.SubElement(ar_package48, 'ELEMENTS')
    complex_device_driver_sw_component_type1 = ET.SubElement(elements31, 'COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE')
    complex_device_driver_sw_component_type1.attrib = {'UUID': '27755bdf-1bfe-447f-bfdf-54402e4f4db3'}
    short_name560 = ET.SubElement(complex_device_driver_sw_component_type1, 'SHORT-NAME')
    short_name560.text = 'ComplexDeviceDriverSwComponentType'
    ar_package49 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package49.attrib = {'UUID': 'a9d129de-eda4-4cda-9025-70a56f38fb59'}
    short_name561 = ET.SubElement(ar_package49, 'SHORT-NAME')
    short_name561.text = 'CompSWC'
    elements32 = ET.SubElement(ar_package49, 'ELEMENTS')
    composition_sw_component_type1 = ET.SubElement(elements32, 'COMPOSITION-SW-COMPONENT-TYPE')
    composition_sw_component_type1.attrib = {'UUID': '9e886193-6d1b-454f-98b2-d0347db57ace'}
    short_name562 = ET.SubElement(composition_sw_component_type1, 'SHORT-NAME')
    short_name562.text = 'CompositionSwComponentType'
    ar_package50 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package50.attrib = {'UUID': '28aa9cf2-4118-4878-8504-271a3ed4600b'}
    short_name563 = ET.SubElement(ar_package50, 'SHORT-NAME')
    short_name563.text = 'EcuAbSWC'
    elements33 = ET.SubElement(ar_package50, 'ELEMENTS')
    ecu_abstraction_sw_component_type1 = ET.SubElement(elements33, 'ECU-ABSTRACTION-SW-COMPONENT-TYPE')
    ecu_abstraction_sw_component_type1.attrib = {'UUID': '0dc33c67-8b23-4896-b6a3-8a537f1cd166'}
    short_name564 = ET.SubElement(ecu_abstraction_sw_component_type1, 'SHORT-NAME')
    short_name564.text = 'EcuAbstractionSwComponentType'
    ar_package51 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package51.attrib = {'UUID': '8562405a-26a1-4c3d-861f-eb0745310572'}
    short_name565 = ET.SubElement(ar_package51, 'SHORT-NAME')
    short_name565.text = 'NvDataSWC'
    elements34 = ET.SubElement(ar_package51, 'ELEMENTS')
    nv_block_sw_component_type1 = ET.SubElement(elements34, 'NV-BLOCK-SW-COMPONENT-TYPE')
    nv_block_sw_component_type1.attrib = {'UUID': '9a2c1578-3f64-4af0-b953-7b81f28434cf'}
    short_name566 = ET.SubElement(nv_block_sw_component_type1, 'SHORT-NAME')
    short_name566.text = 'NvBlockSwComponentType'
    ar_package52 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package52.attrib = {'UUID': '0a54c44d-f71e-4ec3-bbf1-410c0b885915'}
    short_name567 = ET.SubElement(ar_package52, 'SHORT-NAME')
    short_name567.text = 'PrmSWC'
    elements35 = ET.SubElement(ar_package52, 'ELEMENTS')
    parameter_sw_component_type1 = ET.SubElement(elements35, 'PARAMETER-SW-COMPONENT-TYPE')
    parameter_sw_component_type1.attrib = {'UUID': 'c21a6d07-19ae-40ac-affe-f4aa3b5acb25'}
    short_name568 = ET.SubElement(parameter_sw_component_type1, 'SHORT-NAME')
    short_name568.text = 'ParameterSwComponentType'
    ar_package53 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package53.attrib = {'UUID': 'f142ef66-4dce-4750-8568-a7e836f462da'}
    short_name569 = ET.SubElement(ar_package53, 'SHORT-NAME')
    short_name569.text = 'SnsrActSWC'
    elements36 = ET.SubElement(ar_package53, 'ELEMENTS')
    sensor_actuator_sw_component_type1 = ET.SubElement(elements36, 'SENSOR-ACTUATOR-SW-COMPONENT-TYPE')
    sensor_actuator_sw_component_type1.attrib = {'UUID': 'e631e3e3-9a52-4bbe-a762-4311d8f45934'}
    short_name570 = ET.SubElement(sensor_actuator_sw_component_type1, 'SHORT-NAME')
    short_name570.text = 'SensorActuatorSwComponentType'
    ar_package54 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package54.attrib = {'UUID': '60bb3f96-0a5c-4e30-bdda-5205f3a1cdb6'}
    short_name571 = ET.SubElement(ar_package54, 'SHORT-NAME')
    short_name571.text = 'SrvcPrxySWC'
    elements37 = ET.SubElement(ar_package54, 'ELEMENTS')
    service_proxy_sw_component_type1 = ET.SubElement(elements37, 'SERVICE-PROXY-SW-COMPONENT-TYPE')
    service_proxy_sw_component_type1.attrib = {'UUID': '7e09780f-aad2-4f70-8c22-e5e19f1a82e8'}
    short_name572 = ET.SubElement(service_proxy_sw_component_type1, 'SHORT-NAME')
    short_name572.text = 'ServiceProxySwComponentType'
    ar_package55 = ET.SubElement(ar_packages11, 'AR-PACKAGE')
    ar_package55.attrib = {'UUID': '2ed6bb1a-c9d6-46c0-ae8b-0743080405b6'}
    short_name573 = ET.SubElement(ar_package55, 'SHORT-NAME')
    short_name573.text = 'SrvcSWC'
    elements38 = ET.SubElement(ar_package55, 'ELEMENTS')
    service_sw_component_type1 = ET.SubElement(elements38, 'SERVICE-SW-COMPONENT-TYPE')
    service_sw_component_type1.attrib = {'UUID': '1da8de22-a6ec-4cab-829a-56300097c5ac'}
    short_name574 = ET.SubElement(service_sw_component_type1, 'SHORT-NAME')
    short_name574.text = 'ServiceSwComponentType'
    ar_package56 = ET.SubElement(ar_packages1, 'AR-PACKAGE')
    short_name575 = ET.SubElement(ar_package56, 'SHORT-NAME')
    short_name575.text = 'Systems'

    # Save the XML tree to an ARXML file
    tree = ET.ElementTree(root)
    # tree.write('output.arxml', encoding='utf-8', xml_declaration=True)
    try:
        root1 = tree.getroot()

        # Remove namespaces
        root2 = remove_namespaces(root1)

        # Add indentation
        indent(root2)

        # Write the XML declaration with double quotes
        with open("output_402.arxml", "wb") as f:
            f.write(b'<?xml version="1.0" encoding="utf-8"?>\n')
            tree.write(f, encoding="utf-8", xml_declaration=False)

        print(f"Successfully created with proper indentation and XML declaration.")

    except FileNotFoundError as e:
        print(f"Error: {e}. Please enter a valid ARXML file path.")

if __name__ == '__main__':
    create_arxml()
