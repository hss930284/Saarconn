class ARXMLStructure:
    def __init__(self):
        self.variables = {}
    def Default_Pkg_Struct(self, root):
        """Creates an ARXML file with the specified structure."""
        '\n    Creates an ARXML file with the specified structure.\n    '
        self.root_folders = ET.SubElement(root, 'AR-PACKAGES')
        self.autosar_folder = ET.SubElement(root_folders, 'AR-PACKAGE')
        autosar_folder.attrib = {'UUID': '5983c226-f5b2-4ba1-958d-32fe5f2fde51'}
        self.autosar_folder_short_name = ET.SubElement(autosar_folder, 'SHORT-NAME')
        autosar_folder_short_name.text = 'AUTOSAR'
        self.autosar_subfolders = ET.SubElement(autosar_folder, 'AR-PACKAGES')
        self.AUTOSAR_GenDef_folder = ET.SubElement(autosar_subfolders, 'AR-PACKAGE')
        self.AUTOSAR_GenDef_folder_short_name = ET.SubElement(AUTOSAR_GenDef_folder, 'SHORT-NAME')
        AUTOSAR_GenDef_folder_short_name.text = 'AUTOSAR_GenDef'
        self.AUTOSAR_GenDef_subfolders = ET.SubElement(AUTOSAR_GenDef_folder, 'AR-PACKAGES')
        self.BaseTypes_folder = ET.SubElement(AUTOSAR_GenDef_subfolders, 'AR-PACKAGE')
        self.BaseTypes_folder_short_name = ET.SubElement(BaseTypes_folder, 'SHORT-NAME')
        BaseTypes_folder_short_name.text = 'BaseTypes'
        self.BaseTypes_folder_category = ET.SubElement(BaseTypes_folder, 'CATEGORY')
        BaseTypes_folder_category.text = 'STANDARD'
        self.BaseTypes_folder_elements = ET.SubElement(BaseTypes_folder, 'ELEMENTS')
        self.Void_basetype = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.Void_basetype_short_name = ET.SubElement(Void_basetype, 'SHORT-NAME')
        Void_basetype_short_name.text = 'void'
        self.Void_basetype_long_name = ET.SubElement(Void_basetype, 'LONG-NAME')
        self.Void_basetype_l_4 = ET.SubElement(Void_basetype_long_name, 'L-4')
        Void_basetype_l_4.text = 'void'
        Void_basetype_l_4.attrib = {'L': 'EN'}
        self.Void_basetype_category = ET.SubElement(Void_basetype, 'CATEGORY')
        Void_basetype_category.text = 'VOID'
        self.Void_basetype_base_type_encoding = ET.SubElement(Void_basetype, 'BASE-TYPE-ENCODING')
        Void_basetype_base_type_encoding.text = 'VOID'
        self.Void_basetype_native_declaration = ET.SubElement(Void_basetype, 'NATIVE-DECLARATION')
        Void_basetype_native_declaration.text = 'void'
        self.AUTOSAR_PhysicalUnits_folder = ET.SubElement(autosar_subfolders, 'AR-PACKAGE')
        self.AUTOSAR_PhysicalUnits_folder_short_name = ET.SubElement(AUTOSAR_PhysicalUnits_folder, 'SHORT-NAME')
        AUTOSAR_PhysicalUnits_folder_short_name.text = 'AUTOSAR_PhysicalUnits'
        self.AUTOSAR_PhysicalUnits_folder_long_name = ET.SubElement(AUTOSAR_PhysicalUnits_folder, 'LONG-NAME')
        self.AUTOSAR_PhysicalUnits_folder_l_4 = ET.SubElement(AUTOSAR_PhysicalUnits_folder_long_name, 'L-4')
        AUTOSAR_PhysicalUnits_folder_l_4.text = 'AUTOSAR'
        AUTOSAR_PhysicalUnits_folder_l_4.attrib = {'L': 'EN'}
        self.AUTOSAR_PhysicalUnits_subfolder = ET.SubElement(AUTOSAR_PhysicalUnits_folder, 'AR-PACKAGES')
        self.PhysicalDimensions_folder = ET.SubElement(AUTOSAR_PhysicalUnits_subfolder, 'AR-PACKAGE')
        self.PhysicalDimensions_folder_short_name = ET.SubElement(PhysicalDimensions_folder, 'SHORT-NAME')
        PhysicalDimensions_folder_short_name.text = 'PhysicalDimensions'
        self.PhysicalDimensions_folder_category = ET.SubElement(PhysicalDimensions_folder, 'CATEGORY')
        PhysicalDimensions_folder_category.text = 'STANDARD'
        self.PhysicalDimensions_folder_elements = ET.SubElement(PhysicalDimensions_folder, 'ELEMENTS')
        self.physical_dimension_Amnt1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Amnt1_short_name = ET.SubElement(physical_dimension_Amnt1, 'SHORT-NAME')
        physical_dimension_Amnt1_short_name.text = 'Amnt1'
        self.physical_dimension_Amnt1_long_name = ET.SubElement(physical_dimension_Amnt1, 'LONG-NAME')
        self.physical_dimension_Amnt1_l_4 = ET.SubElement(physical_dimension_Amnt1_long_name, 'L-4')
        physical_dimension_Amnt1_l_4.text = 'Quantity of substance'
        physical_dimension_Amnt1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Amnt1_length_exp = ET.SubElement(physical_dimension_Amnt1, 'LENGTH-EXP')
        physical_dimension_Amnt1_length_exp.text = '0'
        self.physical_dimension_Amnt1_mass_exp = ET.SubElement(physical_dimension_Amnt1, 'MASS-EXP')
        physical_dimension_Amnt1_mass_exp.text = '0'
        self.physical_dimension_Amnt1_time_exp = ET.SubElement(physical_dimension_Amnt1, 'TIME-EXP')
        physical_dimension_Amnt1_time_exp.text = '0'
        self.physical_dimension_Amnt1_current_exp = ET.SubElement(physical_dimension_Amnt1, 'CURRENT-EXP')
        physical_dimension_Amnt1_current_exp.text = '0'
        self.physical_dimension_Amnt1_temperature_exp = ET.SubElement(physical_dimension_Amnt1, 'TEMPERATURE-EXP')
        physical_dimension_Amnt1_temperature_exp.text = '0'
        self.physical_dimension_Amnt1_molar_amount_exp = ET.SubElement(physical_dimension_Amnt1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Amnt1_molar_amount_exp.text = '1'
        self.physical_dimension_Amnt1_luminous_intensity_exp = ET.SubElement(physical_dimension_Amnt1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Amnt1_luminous_intensity_exp.text = '0'
        self.physical_dimension_I1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_I1_short_name = ET.SubElement(physical_dimension_I1, 'SHORT-NAME')
        physical_dimension_I1_short_name.text = 'I1'
        self.physical_dimension_I1_long_name = ET.SubElement(physical_dimension_I1, 'LONG-NAME')
        self.physical_dimension_I1_l_4 = ET.SubElement(physical_dimension_I1_long_name, 'L-4')
        physical_dimension_I1_l_4.text = 'Electric Current'
        physical_dimension_I1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_I1_length_exp = ET.SubElement(physical_dimension_I1, 'LENGTH-EXP')
        physical_dimension_I1_length_exp.text = '0'
        self.physical_dimension_I1_mass_exp = ET.SubElement(physical_dimension_I1, 'MASS-EXP')
        physical_dimension_I1_mass_exp.text = '0'
        self.physical_dimension_I1_time_exp = ET.SubElement(physical_dimension_I1, 'TIME-EXP')
        physical_dimension_I1_time_exp.text = '0'
        self.physical_dimension_I1_current_exp = ET.SubElement(physical_dimension_I1, 'CURRENT-EXP')
        physical_dimension_I1_current_exp.text = '1'
        self.physical_dimension_I1_temperature_exp = ET.SubElement(physical_dimension_I1, 'TEMPERATURE-EXP')
        physical_dimension_I1_temperature_exp.text = '0'
        self.physical_dimension_I1_molar_amount_exp = ET.SubElement(physical_dimension_I1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_I1_molar_amount_exp.text = '0'
        self.physical_dimension_I1_luminous_intensity_exp = ET.SubElement(physical_dimension_I1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_I1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Illmn1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Illmn1_short_name = ET.SubElement(physical_dimension_Illmn1, 'SHORT-NAME')
        physical_dimension_Illmn1_short_name.text = 'Illmn1'
        self.physical_dimension_Illmn1_long_name = ET.SubElement(physical_dimension_Illmn1, 'LONG-NAME')
        self.physical_dimension_Illmn1_l_4 = ET.SubElement(physical_dimension_Illmn1_long_name, 'L-4')
        physical_dimension_Illmn1_l_4.text = 'Luminous intensity'
        physical_dimension_Illmn1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Illmn1_length_exp = ET.SubElement(physical_dimension_Illmn1, 'LENGTH-EXP')
        physical_dimension_Illmn1_length_exp.text = '0'
        self.physical_dimension_Illmn1_mass_exp = ET.SubElement(physical_dimension_Illmn1, 'MASS-EXP')
        physical_dimension_Illmn1_mass_exp.text = '0'
        self.physical_dimension_Illmn1_time_exp = ET.SubElement(physical_dimension_Illmn1, 'TIME-EXP')
        physical_dimension_Illmn1_time_exp.text = '0'
        self.physical_dimension_Illmn1_current_exp = ET.SubElement(physical_dimension_Illmn1, 'CURRENT-EXP')
        physical_dimension_Illmn1_current_exp.text = '0'
        self.physical_dimension_Illmn1_temperature_exp = ET.SubElement(physical_dimension_Illmn1, 'TEMPERATURE-EXP')
        physical_dimension_Illmn1_temperature_exp.text = '0'
        self.physical_dimension_Illmn1_molar_amount_exp = ET.SubElement(physical_dimension_Illmn1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Illmn1_molar_amount_exp.text = '0'
        self.physical_dimension_Illmn1_luminous_intensity_exp = ET.SubElement(physical_dimension_Illmn1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Illmn1_luminous_intensity_exp.text = '1'
        self.physical_dimension_Len1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1_short_name = ET.SubElement(physical_dimension_Len1, 'SHORT-NAME')
        physical_dimension_Len1_short_name.text = 'Len1'
        self.physical_dimension_Len1_long_name = ET.SubElement(physical_dimension_Len1, 'LONG-NAME')
        self.physical_dimension_Len1_l_4 = ET.SubElement(physical_dimension_Len1_long_name, 'L-4')
        physical_dimension_Len1_l_4.text = 'Length'
        physical_dimension_Len1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1_length_exp = ET.SubElement(physical_dimension_Len1, 'LENGTH-EXP')
        physical_dimension_Len1_length_exp.text = '1'
        self.physical_dimension_Len1_mass_exp = ET.SubElement(physical_dimension_Len1, 'MASS-EXP')
        physical_dimension_Len1_mass_exp.text = '0'
        self.physical_dimension_Len1_time_exp = ET.SubElement(physical_dimension_Len1, 'TIME-EXP')
        physical_dimension_Len1_time_exp.text = '0'
        self.physical_dimension_Len1_current_exp = ET.SubElement(physical_dimension_Len1, 'CURRENT-EXP')
        physical_dimension_Len1_current_exp.text = '0'
        self.physical_dimension_Len1_temperature_exp = ET.SubElement(physical_dimension_Len1, 'TEMPERATURE-EXP')
        physical_dimension_Len1_temperature_exp.text = '0'
        self.physical_dimension_Len1_molar_amount_exp = ET.SubElement(physical_dimension_Len1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1_molar_amount_exp.text = '0'
        self.physical_dimension_Len1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1M1TiNeg2_short_name = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'SHORT-NAME')
        physical_dimension_Len1M1TiNeg2_short_name.text = 'Len1M1TiNeg2'
        self.physical_dimension_Len1M1TiNeg2_long_name = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'LONG-NAME')
        self.physical_dimension_Len1M1TiNeg2_l_4 = ET.SubElement(physical_dimension_Len1M1TiNeg2_long_name, 'L-4')
        physical_dimension_Len1M1TiNeg2_l_4.text = 'Force'
        physical_dimension_Len1M1TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1M1TiNeg2_length_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'LENGTH-EXP')
        physical_dimension_Len1M1TiNeg2_length_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg2_mass_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'MASS-EXP')
        physical_dimension_Len1M1TiNeg2_mass_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg2_time_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'TIME-EXP')
        physical_dimension_Len1M1TiNeg2_time_exp.text = '-2'
        self.physical_dimension_Len1M1TiNeg2_current_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'CURRENT-EXP')
        physical_dimension_Len1M1TiNeg2_current_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2_temperature_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len1M1TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1M1TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1M1TiNeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2INeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1M1TiNeg2INeg2_short_name = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'SHORT-NAME')
        physical_dimension_Len1M1TiNeg2INeg2_short_name.text = 'Len1M1TiNeg2INeg2'
        self.physical_dimension_Len1M1TiNeg2INeg2_long_name = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'LONG-NAME')
        self.physical_dimension_Len1M1TiNeg2INeg2_l_4 = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2_long_name, 'L-4')
        physical_dimension_Len1M1TiNeg2INeg2_l_4.text = 'Permeability'
        physical_dimension_Len1M1TiNeg2INeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1M1TiNeg2INeg2_length_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'LENGTH-EXP')
        physical_dimension_Len1M1TiNeg2INeg2_length_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg2INeg2_mass_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'MASS-EXP')
        physical_dimension_Len1M1TiNeg2INeg2_mass_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg2INeg2_time_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'TIME-EXP')
        physical_dimension_Len1M1TiNeg2INeg2_time_exp.text = '-2'
        self.physical_dimension_Len1M1TiNeg2INeg2_current_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'CURRENT-EXP')
        physical_dimension_Len1M1TiNeg2INeg2_current_exp.text = '-2'
        self.physical_dimension_Len1M1TiNeg2INeg2_temperature_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len1M1TiNeg2INeg2_temperature_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2INeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1M1TiNeg2INeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2INeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2INeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1M1TiNeg2INeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1M1TiNeg2_1_short_name = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'SHORT-NAME')
        physical_dimension_Len1M1TiNeg2_1_short_name.text = 'Len1M1TiNeg2_1'
        self.physical_dimension_Len1M1TiNeg2_1_long_name = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'LONG-NAME')
        self.physical_dimension_Len1M1TiNeg2_1_l_4 = ET.SubElement(physical_dimension_Len1M1TiNeg2_1_long_name, 'L-4')
        physical_dimension_Len1M1TiNeg2_1_l_4.text = 'Electrical Energy Consumption'
        physical_dimension_Len1M1TiNeg2_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1M1TiNeg2_1_length_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'LENGTH-EXP')
        physical_dimension_Len1M1TiNeg2_1_length_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg2_1_mass_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'MASS-EXP')
        physical_dimension_Len1M1TiNeg2_1_mass_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg2_1_time_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'TIME-EXP')
        physical_dimension_Len1M1TiNeg2_1_time_exp.text = '-2'
        self.physical_dimension_Len1M1TiNeg2_1_current_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'CURRENT-EXP')
        physical_dimension_Len1M1TiNeg2_1_current_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2_1_temperature_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'TEMPERATURE-EXP')
        physical_dimension_Len1M1TiNeg2_1_temperature_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2_1_molar_amount_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1M1TiNeg2_1_molar_amount_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg2_1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1M1TiNeg2_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1M1TiNeg2_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg3INeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1M1TiNeg3INeg1_short_name = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'SHORT-NAME')
        physical_dimension_Len1M1TiNeg3INeg1_short_name.text = 'Len1M1TiNeg3INeg1'
        self.physical_dimension_Len1M1TiNeg3INeg1_long_name = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'LONG-NAME')
        self.physical_dimension_Len1M1TiNeg3INeg1_l_4 = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1_long_name, 'L-4')
        physical_dimension_Len1M1TiNeg3INeg1_l_4.text = 'Electric Field Strength / Electric intensity'
        physical_dimension_Len1M1TiNeg3INeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1M1TiNeg3INeg1_length_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'LENGTH-EXP')
        physical_dimension_Len1M1TiNeg3INeg1_length_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg3INeg1_mass_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'MASS-EXP')
        physical_dimension_Len1M1TiNeg3INeg1_mass_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg3INeg1_time_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'TIME-EXP')
        physical_dimension_Len1M1TiNeg3INeg1_time_exp.text = '-3'
        self.physical_dimension_Len1M1TiNeg3INeg1_current_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'CURRENT-EXP')
        physical_dimension_Len1M1TiNeg3INeg1_current_exp.text = '-1'
        self.physical_dimension_Len1M1TiNeg3INeg1_temperature_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len1M1TiNeg3INeg1_temperature_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg3INeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1M1TiNeg3INeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg3INeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3INeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1M1TiNeg3INeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg3TNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1M1TiNeg3TNeg1_short_name = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'SHORT-NAME')
        physical_dimension_Len1M1TiNeg3TNeg1_short_name.text = 'Len1M1TiNeg3TNeg1'
        self.physical_dimension_Len1M1TiNeg3TNeg1_long_name = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'LONG-NAME')
        self.physical_dimension_Len1M1TiNeg3TNeg1_l_4 = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1_long_name, 'L-4')
        physical_dimension_Len1M1TiNeg3TNeg1_l_4.text = 'Thermal Conductivity'
        physical_dimension_Len1M1TiNeg3TNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1M1TiNeg3TNeg1_length_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'LENGTH-EXP')
        physical_dimension_Len1M1TiNeg3TNeg1_length_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg3TNeg1_mass_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'MASS-EXP')
        physical_dimension_Len1M1TiNeg3TNeg1_mass_exp.text = '1'
        self.physical_dimension_Len1M1TiNeg3TNeg1_time_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'TIME-EXP')
        physical_dimension_Len1M1TiNeg3TNeg1_time_exp.text = '-3'
        self.physical_dimension_Len1M1TiNeg3TNeg1_current_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'CURRENT-EXP')
        physical_dimension_Len1M1TiNeg3TNeg1_current_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg3TNeg1_temperature_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len1M1TiNeg3TNeg1_temperature_exp.text = '-1'
        self.physical_dimension_Len1M1TiNeg3TNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1M1TiNeg3TNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len1M1TiNeg3TNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1M1TiNeg3TNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1M1TiNeg3TNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1TiNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1TiNeg1_short_name = ET.SubElement(physical_dimension_Len1TiNeg1, 'SHORT-NAME')
        physical_dimension_Len1TiNeg1_short_name.text = 'Len1TiNeg1'
        self.physical_dimension_Len1TiNeg1_long_name = ET.SubElement(physical_dimension_Len1TiNeg1, 'LONG-NAME')
        self.physical_dimension_Len1TiNeg1_l_4 = ET.SubElement(physical_dimension_Len1TiNeg1_long_name, 'L-4')
        physical_dimension_Len1TiNeg1_l_4.text = 'Velocity'
        physical_dimension_Len1TiNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1TiNeg1_length_exp = ET.SubElement(physical_dimension_Len1TiNeg1, 'LENGTH-EXP')
        physical_dimension_Len1TiNeg1_length_exp.text = '1'
        self.physical_dimension_Len1TiNeg1_mass_exp = ET.SubElement(physical_dimension_Len1TiNeg1, 'MASS-EXP')
        physical_dimension_Len1TiNeg1_mass_exp.text = '0'
        self.physical_dimension_Len1TiNeg1_time_exp = ET.SubElement(physical_dimension_Len1TiNeg1, 'TIME-EXP')
        physical_dimension_Len1TiNeg1_time_exp.text = '-1'
        self.physical_dimension_Len1TiNeg1_current_exp = ET.SubElement(physical_dimension_Len1TiNeg1, 'CURRENT-EXP')
        physical_dimension_Len1TiNeg1_current_exp.text = '0'
        self.physical_dimension_Len1TiNeg1_temperature_exp = ET.SubElement(physical_dimension_Len1TiNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len1TiNeg1_temperature_exp.text = '0'
        self.physical_dimension_Len1TiNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len1TiNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1TiNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len1TiNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1TiNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1TiNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1TiNeg2_short_name = ET.SubElement(physical_dimension_Len1TiNeg2, 'SHORT-NAME')
        physical_dimension_Len1TiNeg2_short_name.text = 'Len1TiNeg2'
        self.physical_dimension_Len1TiNeg2_long_name = ET.SubElement(physical_dimension_Len1TiNeg2, 'LONG-NAME')
        self.physical_dimension_Len1TiNeg2_l_4 = ET.SubElement(physical_dimension_Len1TiNeg2_long_name, 'L-4')
        physical_dimension_Len1TiNeg2_l_4.text = 'Acceleration'
        physical_dimension_Len1TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1TiNeg2_length_exp = ET.SubElement(physical_dimension_Len1TiNeg2, 'LENGTH-EXP')
        physical_dimension_Len1TiNeg2_length_exp.text = '1'
        self.physical_dimension_Len1TiNeg2_mass_exp = ET.SubElement(physical_dimension_Len1TiNeg2, 'MASS-EXP')
        physical_dimension_Len1TiNeg2_mass_exp.text = '0'
        self.physical_dimension_Len1TiNeg2_time_exp = ET.SubElement(physical_dimension_Len1TiNeg2, 'TIME-EXP')
        physical_dimension_Len1TiNeg2_time_exp.text = '-2'
        self.physical_dimension_Len1TiNeg2_current_exp = ET.SubElement(physical_dimension_Len1TiNeg2, 'CURRENT-EXP')
        physical_dimension_Len1TiNeg2_current_exp.text = '0'
        self.physical_dimension_Len1TiNeg2_temperature_exp = ET.SubElement(physical_dimension_Len1TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len1TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_Len1TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len1TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len1TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1TiNeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len1TiNeg3 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len1TiNeg3_short_name = ET.SubElement(physical_dimension_Len1TiNeg3, 'SHORT-NAME')
        physical_dimension_Len1TiNeg3_short_name.text = 'Len1TiNeg3'
        self.physical_dimension_Len1TiNeg3_long_name = ET.SubElement(physical_dimension_Len1TiNeg3, 'LONG-NAME')
        self.physical_dimension_Len1TiNeg3_l_4 = ET.SubElement(physical_dimension_Len1TiNeg3_long_name, 'L-4')
        physical_dimension_Len1TiNeg3_l_4.text = 'Acceleration Time Gradient'
        physical_dimension_Len1TiNeg3_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len1TiNeg3_length_exp = ET.SubElement(physical_dimension_Len1TiNeg3, 'LENGTH-EXP')
        physical_dimension_Len1TiNeg3_length_exp.text = '1'
        self.physical_dimension_Len1TiNeg3_mass_exp = ET.SubElement(physical_dimension_Len1TiNeg3, 'MASS-EXP')
        physical_dimension_Len1TiNeg3_mass_exp.text = '0'
        self.physical_dimension_Len1TiNeg3_time_exp = ET.SubElement(physical_dimension_Len1TiNeg3, 'TIME-EXP')
        physical_dimension_Len1TiNeg3_time_exp.text = '-3'
        self.physical_dimension_Len1TiNeg3_current_exp = ET.SubElement(physical_dimension_Len1TiNeg3, 'CURRENT-EXP')
        physical_dimension_Len1TiNeg3_current_exp.text = '0'
        self.physical_dimension_Len1TiNeg3_temperature_exp = ET.SubElement(physical_dimension_Len1TiNeg3, 'TEMPERATURE-EXP')
        physical_dimension_Len1TiNeg3_temperature_exp.text = '0'
        self.physical_dimension_Len1TiNeg3_molar_amount_exp = ET.SubElement(physical_dimension_Len1TiNeg3, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len1TiNeg3_molar_amount_exp.text = '0'
        self.physical_dimension_Len1TiNeg3_luminous_intensity_exp = ET.SubElement(physical_dimension_Len1TiNeg3, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len1TiNeg3_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2_short_name = ET.SubElement(physical_dimension_Len2, 'SHORT-NAME')
        physical_dimension_Len2_short_name.text = 'Len2'
        self.physical_dimension_Len2_long_name = ET.SubElement(physical_dimension_Len2, 'LONG-NAME')
        self.physical_dimension_Len2_l_4 = ET.SubElement(physical_dimension_Len2_long_name, 'L-4')
        physical_dimension_Len2_l_4.text = 'Area'
        physical_dimension_Len2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2_length_exp = ET.SubElement(physical_dimension_Len2, 'LENGTH-EXP')
        physical_dimension_Len2_length_exp.text = '2'
        self.physical_dimension_Len2_mass_exp = ET.SubElement(physical_dimension_Len2, 'MASS-EXP')
        physical_dimension_Len2_mass_exp.text = '0'
        self.physical_dimension_Len2_time_exp = ET.SubElement(physical_dimension_Len2, 'TIME-EXP')
        physical_dimension_Len2_time_exp.text = '0'
        self.physical_dimension_Len2_current_exp = ET.SubElement(physical_dimension_Len2, 'CURRENT-EXP')
        physical_dimension_Len2_current_exp.text = '0'
        self.physical_dimension_Len2_temperature_exp = ET.SubElement(physical_dimension_Len2, 'TEMPERATURE-EXP')
        physical_dimension_Len2_temperature_exp.text = '0'
        self.physical_dimension_Len2_molar_amount_exp = ET.SubElement(physical_dimension_Len2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2_molar_amount_exp.text = '0'
        self.physical_dimension_Len2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1_short_name = ET.SubElement(physical_dimension_Len2M1, 'SHORT-NAME')
        physical_dimension_Len2M1_short_name.text = 'Len2M1'
        self.physical_dimension_Len2M1_long_name = ET.SubElement(physical_dimension_Len2M1, 'LONG-NAME')
        self.physical_dimension_Len2M1_l_4 = ET.SubElement(physical_dimension_Len2M1_long_name, 'L-4')
        physical_dimension_Len2M1_l_4.text = 'Moment of Inertia'
        physical_dimension_Len2M1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1_length_exp = ET.SubElement(physical_dimension_Len2M1, 'LENGTH-EXP')
        physical_dimension_Len2M1_length_exp.text = '2'
        self.physical_dimension_Len2M1_mass_exp = ET.SubElement(physical_dimension_Len2M1, 'MASS-EXP')
        physical_dimension_Len2M1_mass_exp.text = '1'
        self.physical_dimension_Len2M1_time_exp = ET.SubElement(physical_dimension_Len2M1, 'TIME-EXP')
        physical_dimension_Len2M1_time_exp.text = '0'
        self.physical_dimension_Len2M1_current_exp = ET.SubElement(physical_dimension_Len2M1, 'CURRENT-EXP')
        physical_dimension_Len2M1_current_exp.text = '0'
        self.physical_dimension_Len2M1_temperature_exp = ET.SubElement(physical_dimension_Len2M1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg1_short_name.text = 'Len2M1TiNeg1'
        self.physical_dimension_Len2M1TiNeg1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg1_l_4.text = 'Angular Momentum'
        physical_dimension_Len2M1TiNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg1_time_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg1_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg2_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg2_short_name.text = 'Len2M1TiNeg2'
        self.physical_dimension_Len2M1TiNeg2_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg2_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg2_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg2_l_4.text = 'Torque'
        physical_dimension_Len2M1TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg2_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg2_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg2_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg2_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg2_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg2_time_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg2_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg2AmntNeg1_short_name.text = 'Len2M1TiNeg2AmntNeg1'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg2AmntNeg1_l_4.text = 'Molar Energy'
        physical_dimension_Len2M1TiNeg2AmntNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg2AmntNeg1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg2AmntNeg1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg2AmntNeg1_time_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg2AmntNeg1_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg2AmntNeg1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg2AmntNeg1_molar_amount_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg2AmntNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2AmntNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg2AmntNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2INeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg2INeg1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg2INeg1_short_name.text = 'Len2M1TiNeg2INeg1'
        self.physical_dimension_Len2M1TiNeg2INeg1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg2INeg1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg2INeg1_l_4.text = 'Magnetic Flux'
        physical_dimension_Len2M1TiNeg2INeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg2INeg1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg2INeg1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg2INeg1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg2INeg1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg2INeg1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg2INeg1_time_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2INeg1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg2INeg1_current_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg2INeg1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg2INeg1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2INeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg2INeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2INeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg2INeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2INeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg2INeg2_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg2INeg2_short_name.text = 'Len2M1TiNeg2INeg2'
        self.physical_dimension_Len2M1TiNeg2INeg2_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg2INeg2_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg2INeg2_l_4.text = 'Inductance'
        physical_dimension_Len2M1TiNeg2INeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg2INeg2_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg2INeg2_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg2INeg2_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg2INeg2_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg2INeg2_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg2INeg2_time_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2INeg2_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg2INeg2_current_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2INeg2_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg2INeg2_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2INeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg2INeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2INeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2INeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg2INeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2TNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg2TNeg1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg2TNeg1_short_name.text = 'Len2M1TiNeg2TNeg1'
        self.physical_dimension_Len2M1TiNeg2TNeg1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg2TNeg1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg2TNeg1_l_4.text = 'Heat Capacity'
        physical_dimension_Len2M1TiNeg2TNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg2TNeg1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg2TNeg1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg2TNeg1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1_time_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2TNeg1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2TNeg1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1_temperature_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg2TNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2TNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_short_name.text = 'Len2M1TiNeg2TNeg1AmntNeg1'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_l_4.text = 'Molar Heat Capacity'
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_time_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_temperature_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_molar_amount_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg2TNeg1AmntNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg2_1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg2_1_short_name.text = 'Len2M1TiNeg2_1'
        self.physical_dimension_Len2M1TiNeg2_1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg2_1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg2_1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg2_1_l_4.text = 'Energy'
        physical_dimension_Len2M1TiNeg2_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg2_1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg2_1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg2_1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg2_1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg2_1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg2_1_time_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg2_1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg2_1_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2_1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg2_1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2_1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg2_1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg2_1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg2_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg2_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg3_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg3_short_name.text = 'Len2M1TiNeg3'
        self.physical_dimension_Len2M1TiNeg3_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg3_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg3_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg3_l_4.text = 'Torque Time Gradient'
        physical_dimension_Len2M1TiNeg3_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg3_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg3_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg3_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg3_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg3_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg3_time_exp.text = '-3'
        self.physical_dimension_Len2M1TiNeg3_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg3_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg3_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg3_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg3_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3INeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg3INeg1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg3INeg1_short_name.text = 'Len2M1TiNeg3INeg1'
        self.physical_dimension_Len2M1TiNeg3INeg1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg3INeg1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg3INeg1_l_4.text = 'Voltage'
        physical_dimension_Len2M1TiNeg3INeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg3INeg1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg3INeg1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg3INeg1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg3INeg1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg3INeg1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg3INeg1_time_exp.text = '-3'
        self.physical_dimension_Len2M1TiNeg3INeg1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg3INeg1_current_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg3INeg1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg3INeg1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3INeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg3INeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3INeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg3INeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3INeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg3INeg2_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg3INeg2_short_name.text = 'Len2M1TiNeg3INeg2'
        self.physical_dimension_Len2M1TiNeg3INeg2_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg3INeg2_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg3INeg2_l_4.text = 'Electric Resistance'
        physical_dimension_Len2M1TiNeg3INeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg3INeg2_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg3INeg2_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg3INeg2_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg3INeg2_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg3INeg2_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg3INeg2_time_exp.text = '-3'
        self.physical_dimension_Len2M1TiNeg3INeg2_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg3INeg2_current_exp.text = '-2'
        self.physical_dimension_Len2M1TiNeg3INeg2_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg3INeg2_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3INeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg3INeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3INeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3INeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg3INeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg3_1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg3_1_short_name.text = 'Len2M1TiNeg3_1'
        self.physical_dimension_Len2M1TiNeg3_1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg3_1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg3_1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg3_1_l_4.text = 'Power'
        physical_dimension_Len2M1TiNeg3_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg3_1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg3_1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg3_1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg3_1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg3_1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg3_1_time_exp.text = '-3'
        self.physical_dimension_Len2M1TiNeg3_1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg3_1_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3_1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg3_1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3_1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg3_1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg3_1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg3_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg3_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg4 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg4_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg4_short_name.text = 'Len2M1TiNeg4'
        self.physical_dimension_Len2M1TiNeg4_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg4_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg4_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg4_l_4.text = 'Power Time Gradient'
        physical_dimension_Len2M1TiNeg4_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg4_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg4_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg4_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg4_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg4_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg4_time_exp.text = '-4'
        self.physical_dimension_Len2M1TiNeg4_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg4_current_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg4_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg4_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg4_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg4_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg4_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg4_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg4INeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2M1TiNeg4INeg1_short_name = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'SHORT-NAME')
        physical_dimension_Len2M1TiNeg4INeg1_short_name.text = 'Len2M1TiNeg4INeg1'
        self.physical_dimension_Len2M1TiNeg4INeg1_long_name = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'LONG-NAME')
        self.physical_dimension_Len2M1TiNeg4INeg1_l_4 = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1_long_name, 'L-4')
        physical_dimension_Len2M1TiNeg4INeg1_l_4.text = 'Voltage Time Gradient'
        physical_dimension_Len2M1TiNeg4INeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2M1TiNeg4INeg1_length_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'LENGTH-EXP')
        physical_dimension_Len2M1TiNeg4INeg1_length_exp.text = '2'
        self.physical_dimension_Len2M1TiNeg4INeg1_mass_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'MASS-EXP')
        physical_dimension_Len2M1TiNeg4INeg1_mass_exp.text = '1'
        self.physical_dimension_Len2M1TiNeg4INeg1_time_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'TIME-EXP')
        physical_dimension_Len2M1TiNeg4INeg1_time_exp.text = '-4'
        self.physical_dimension_Len2M1TiNeg4INeg1_current_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'CURRENT-EXP')
        physical_dimension_Len2M1TiNeg4INeg1_current_exp.text = '-1'
        self.physical_dimension_Len2M1TiNeg4INeg1_temperature_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2M1TiNeg4INeg1_temperature_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg4INeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2M1TiNeg4INeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2M1TiNeg4INeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2M1TiNeg4INeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2M1TiNeg4INeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2Ti1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2Ti1_short_name = ET.SubElement(physical_dimension_Len2Ti1, 'SHORT-NAME')
        physical_dimension_Len2Ti1_short_name.text = 'Len2Ti1'
        self.physical_dimension_Len2Ti1_long_name = ET.SubElement(physical_dimension_Len2Ti1, 'LONG-NAME')
        self.physical_dimension_Len2Ti1_l_4 = ET.SubElement(physical_dimension_Len2Ti1_long_name, 'L-4')
        physical_dimension_Len2Ti1_l_4.text = 'Kinematic Viscosity'
        physical_dimension_Len2Ti1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2Ti1_length_exp = ET.SubElement(physical_dimension_Len2Ti1, 'LENGTH-EXP')
        physical_dimension_Len2Ti1_length_exp.text = '2'
        self.physical_dimension_Len2Ti1_mass_exp = ET.SubElement(physical_dimension_Len2Ti1, 'MASS-EXP')
        physical_dimension_Len2Ti1_mass_exp.text = '0'
        self.physical_dimension_Len2Ti1_time_exp = ET.SubElement(physical_dimension_Len2Ti1, 'TIME-EXP')
        physical_dimension_Len2Ti1_time_exp.text = '-1'
        self.physical_dimension_Len2Ti1_current_exp = ET.SubElement(physical_dimension_Len2Ti1, 'CURRENT-EXP')
        physical_dimension_Len2Ti1_current_exp.text = '0'
        self.physical_dimension_Len2Ti1_temperature_exp = ET.SubElement(physical_dimension_Len2Ti1, 'TEMPERATURE-EXP')
        physical_dimension_Len2Ti1_temperature_exp.text = '0'
        self.physical_dimension_Len2Ti1_molar_amount_exp = ET.SubElement(physical_dimension_Len2Ti1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2Ti1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2Ti1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2Ti1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2Ti1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2TiNeg2_short_name = ET.SubElement(physical_dimension_Len2TiNeg2, 'SHORT-NAME')
        physical_dimension_Len2TiNeg2_short_name.text = 'Len2TiNeg2'
        self.physical_dimension_Len2TiNeg2_long_name = ET.SubElement(physical_dimension_Len2TiNeg2, 'LONG-NAME')
        self.physical_dimension_Len2TiNeg2_l_4 = ET.SubElement(physical_dimension_Len2TiNeg2_long_name, 'L-4')
        physical_dimension_Len2TiNeg2_l_4.text = 'Specific Heat'
        physical_dimension_Len2TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2TiNeg2_length_exp = ET.SubElement(physical_dimension_Len2TiNeg2, 'LENGTH-EXP')
        physical_dimension_Len2TiNeg2_length_exp.text = '2'
        self.physical_dimension_Len2TiNeg2_mass_exp = ET.SubElement(physical_dimension_Len2TiNeg2, 'MASS-EXP')
        physical_dimension_Len2TiNeg2_mass_exp.text = '0'
        self.physical_dimension_Len2TiNeg2_time_exp = ET.SubElement(physical_dimension_Len2TiNeg2, 'TIME-EXP')
        physical_dimension_Len2TiNeg2_time_exp.text = '-2'
        self.physical_dimension_Len2TiNeg2_current_exp = ET.SubElement(physical_dimension_Len2TiNeg2, 'CURRENT-EXP')
        physical_dimension_Len2TiNeg2_current_exp.text = '0'
        self.physical_dimension_Len2TiNeg2_temperature_exp = ET.SubElement(physical_dimension_Len2TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len2TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_Len2TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len2TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len2TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2TiNeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2TiNeg2TNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2TiNeg2TNeg1_short_name = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'SHORT-NAME')
        physical_dimension_Len2TiNeg2TNeg1_short_name.text = 'Len2TiNeg2TNeg1'
        self.physical_dimension_Len2TiNeg2TNeg1_long_name = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'LONG-NAME')
        self.physical_dimension_Len2TiNeg2TNeg1_l_4 = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1_long_name, 'L-4')
        physical_dimension_Len2TiNeg2TNeg1_l_4.text = 'Specific Heat Capacity'
        physical_dimension_Len2TiNeg2TNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2TiNeg2TNeg1_length_exp = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'LENGTH-EXP')
        physical_dimension_Len2TiNeg2TNeg1_length_exp.text = '2'
        self.physical_dimension_Len2TiNeg2TNeg1_mass_exp = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'MASS-EXP')
        physical_dimension_Len2TiNeg2TNeg1_mass_exp.text = '0'
        self.physical_dimension_Len2TiNeg2TNeg1_time_exp = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'TIME-EXP')
        physical_dimension_Len2TiNeg2TNeg1_time_exp.text = '-2'
        self.physical_dimension_Len2TiNeg2TNeg1_current_exp = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'CURRENT-EXP')
        physical_dimension_Len2TiNeg2TNeg1_current_exp.text = '0'
        self.physical_dimension_Len2TiNeg2TNeg1_temperature_exp = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len2TiNeg2TNeg1_temperature_exp.text = '-1'
        self.physical_dimension_Len2TiNeg2TNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2TiNeg2TNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2TiNeg2TNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2TiNeg2TNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2TiNeg2TNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len2_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len2_1_short_name = ET.SubElement(physical_dimension_Len2_1, 'SHORT-NAME')
        physical_dimension_Len2_1_short_name.text = 'Len2_1'
        self.physical_dimension_Len2_1_long_name = ET.SubElement(physical_dimension_Len2_1, 'LONG-NAME')
        self.physical_dimension_Len2_1_l_4 = ET.SubElement(physical_dimension_Len2_1_long_name, 'L-4')
        physical_dimension_Len2_1_l_4.text = 'Volume Per Distance / Fuel Consumption'
        physical_dimension_Len2_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len2_1_length_exp = ET.SubElement(physical_dimension_Len2_1, 'LENGTH-EXP')
        physical_dimension_Len2_1_length_exp.text = '2'
        self.physical_dimension_Len2_1_mass_exp = ET.SubElement(physical_dimension_Len2_1, 'MASS-EXP')
        physical_dimension_Len2_1_mass_exp.text = '0'
        self.physical_dimension_Len2_1_time_exp = ET.SubElement(physical_dimension_Len2_1, 'TIME-EXP')
        physical_dimension_Len2_1_time_exp.text = '0'
        self.physical_dimension_Len2_1_current_exp = ET.SubElement(physical_dimension_Len2_1, 'CURRENT-EXP')
        physical_dimension_Len2_1_current_exp.text = '0'
        self.physical_dimension_Len2_1_temperature_exp = ET.SubElement(physical_dimension_Len2_1, 'TEMPERATURE-EXP')
        physical_dimension_Len2_1_temperature_exp.text = '0'
        self.physical_dimension_Len2_1_molar_amount_exp = ET.SubElement(physical_dimension_Len2_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len2_1_molar_amount_exp.text = '0'
        self.physical_dimension_Len2_1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len2_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len2_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len3 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len3_short_name = ET.SubElement(physical_dimension_Len3, 'SHORT-NAME')
        physical_dimension_Len3_short_name.text = 'Len3'
        self.physical_dimension_Len3_long_name = ET.SubElement(physical_dimension_Len3, 'LONG-NAME')
        self.physical_dimension_Len3_l_4 = ET.SubElement(physical_dimension_Len3_long_name, 'L-4')
        physical_dimension_Len3_l_4.text = 'Volume'
        physical_dimension_Len3_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len3_length_exp = ET.SubElement(physical_dimension_Len3, 'LENGTH-EXP')
        physical_dimension_Len3_length_exp.text = '3'
        self.physical_dimension_Len3_mass_exp = ET.SubElement(physical_dimension_Len3, 'MASS-EXP')
        physical_dimension_Len3_mass_exp.text = '0'
        self.physical_dimension_Len3_time_exp = ET.SubElement(physical_dimension_Len3, 'TIME-EXP')
        physical_dimension_Len3_time_exp.text = '0'
        self.physical_dimension_Len3_current_exp = ET.SubElement(physical_dimension_Len3, 'CURRENT-EXP')
        physical_dimension_Len3_current_exp.text = '0'
        self.physical_dimension_Len3_temperature_exp = ET.SubElement(physical_dimension_Len3, 'TEMPERATURE-EXP')
        physical_dimension_Len3_temperature_exp.text = '0'
        self.physical_dimension_Len3_molar_amount_exp = ET.SubElement(physical_dimension_Len3, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len3_molar_amount_exp.text = '0'
        self.physical_dimension_Len3_luminous_intensity_exp = ET.SubElement(physical_dimension_Len3, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len3_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len3MNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len3MNeg1_short_name = ET.SubElement(physical_dimension_Len3MNeg1, 'SHORT-NAME')
        physical_dimension_Len3MNeg1_short_name.text = 'Len3MNeg1'
        self.physical_dimension_Len3MNeg1_long_name = ET.SubElement(physical_dimension_Len3MNeg1, 'LONG-NAME')
        self.physical_dimension_Len3MNeg1_l_4 = ET.SubElement(physical_dimension_Len3MNeg1_long_name, 'L-4')
        physical_dimension_Len3MNeg1_l_4.text = 'Specific Volume'
        physical_dimension_Len3MNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len3MNeg1_length_exp = ET.SubElement(physical_dimension_Len3MNeg1, 'LENGTH-EXP')
        physical_dimension_Len3MNeg1_length_exp.text = '3'
        self.physical_dimension_Len3MNeg1_mass_exp = ET.SubElement(physical_dimension_Len3MNeg1, 'MASS-EXP')
        physical_dimension_Len3MNeg1_mass_exp.text = '-1'
        self.physical_dimension_Len3MNeg1_time_exp = ET.SubElement(physical_dimension_Len3MNeg1, 'TIME-EXP')
        physical_dimension_Len3MNeg1_time_exp.text = '0'
        self.physical_dimension_Len3MNeg1_current_exp = ET.SubElement(physical_dimension_Len3MNeg1, 'CURRENT-EXP')
        physical_dimension_Len3MNeg1_current_exp.text = '0'
        self.physical_dimension_Len3MNeg1_temperature_exp = ET.SubElement(physical_dimension_Len3MNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len3MNeg1_temperature_exp.text = '0'
        self.physical_dimension_Len3MNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len3MNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len3MNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len3MNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len3MNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len3MNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len3TiNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len3TiNeg1_short_name = ET.SubElement(physical_dimension_Len3TiNeg1, 'SHORT-NAME')
        physical_dimension_Len3TiNeg1_short_name.text = 'Len3TiNeg1'
        self.physical_dimension_Len3TiNeg1_long_name = ET.SubElement(physical_dimension_Len3TiNeg1, 'LONG-NAME')
        self.physical_dimension_Len3TiNeg1_l_4 = ET.SubElement(physical_dimension_Len3TiNeg1_long_name, 'L-4')
        physical_dimension_Len3TiNeg1_l_4.text = 'Volumetric Flow'
        physical_dimension_Len3TiNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len3TiNeg1_length_exp = ET.SubElement(physical_dimension_Len3TiNeg1, 'LENGTH-EXP')
        physical_dimension_Len3TiNeg1_length_exp.text = '3'
        self.physical_dimension_Len3TiNeg1_mass_exp = ET.SubElement(physical_dimension_Len3TiNeg1, 'MASS-EXP')
        physical_dimension_Len3TiNeg1_mass_exp.text = '0'
        self.physical_dimension_Len3TiNeg1_time_exp = ET.SubElement(physical_dimension_Len3TiNeg1, 'TIME-EXP')
        physical_dimension_Len3TiNeg1_time_exp.text = '-1'
        self.physical_dimension_Len3TiNeg1_current_exp = ET.SubElement(physical_dimension_Len3TiNeg1, 'CURRENT-EXP')
        physical_dimension_Len3TiNeg1_current_exp.text = '0'
        self.physical_dimension_Len3TiNeg1_temperature_exp = ET.SubElement(physical_dimension_Len3TiNeg1, 'TEMPERATURE-EXP')
        physical_dimension_Len3TiNeg1_temperature_exp.text = '0'
        self.physical_dimension_Len3TiNeg1_molar_amount_exp = ET.SubElement(physical_dimension_Len3TiNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len3TiNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_Len3TiNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_Len3TiNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len3TiNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Len3TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Len3TiNeg2_short_name = ET.SubElement(physical_dimension_Len3TiNeg2, 'SHORT-NAME')
        physical_dimension_Len3TiNeg2_short_name.text = 'Len3TiNeg2'
        self.physical_dimension_Len3TiNeg2_long_name = ET.SubElement(physical_dimension_Len3TiNeg2, 'LONG-NAME')
        self.physical_dimension_Len3TiNeg2_l_4 = ET.SubElement(physical_dimension_Len3TiNeg2_long_name, 'L-4')
        physical_dimension_Len3TiNeg2_l_4.text = 'Volumetric Flow Gradient'
        physical_dimension_Len3TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Len3TiNeg2_length_exp = ET.SubElement(physical_dimension_Len3TiNeg2, 'LENGTH-EXP')
        physical_dimension_Len3TiNeg2_length_exp.text = '3'
        self.physical_dimension_Len3TiNeg2_mass_exp = ET.SubElement(physical_dimension_Len3TiNeg2, 'MASS-EXP')
        physical_dimension_Len3TiNeg2_mass_exp.text = '0'
        self.physical_dimension_Len3TiNeg2_time_exp = ET.SubElement(physical_dimension_Len3TiNeg2, 'TIME-EXP')
        physical_dimension_Len3TiNeg2_time_exp.text = '-2'
        self.physical_dimension_Len3TiNeg2_current_exp = ET.SubElement(physical_dimension_Len3TiNeg2, 'CURRENT-EXP')
        physical_dimension_Len3TiNeg2_current_exp.text = '0'
        self.physical_dimension_Len3TiNeg2_temperature_exp = ET.SubElement(physical_dimension_Len3TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_Len3TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_Len3TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_Len3TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Len3TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_Len3TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_Len3TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Len3TiNeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg1_short_name = ET.SubElement(physical_dimension_LenNeg1, 'SHORT-NAME')
        physical_dimension_LenNeg1_short_name.text = 'LenNeg1'
        self.physical_dimension_LenNeg1_long_name = ET.SubElement(physical_dimension_LenNeg1, 'LONG-NAME')
        self.physical_dimension_LenNeg1_l_4 = ET.SubElement(physical_dimension_LenNeg1_long_name, 'L-4')
        physical_dimension_LenNeg1_l_4.text = 'Inverse Length'
        physical_dimension_LenNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg1_length_exp = ET.SubElement(physical_dimension_LenNeg1, 'LENGTH-EXP')
        physical_dimension_LenNeg1_length_exp.text = '-1'
        self.physical_dimension_LenNeg1_mass_exp = ET.SubElement(physical_dimension_LenNeg1, 'MASS-EXP')
        physical_dimension_LenNeg1_mass_exp.text = '0'
        self.physical_dimension_LenNeg1_time_exp = ET.SubElement(physical_dimension_LenNeg1, 'TIME-EXP')
        physical_dimension_LenNeg1_time_exp.text = '0'
        self.physical_dimension_LenNeg1_current_exp = ET.SubElement(physical_dimension_LenNeg1, 'CURRENT-EXP')
        physical_dimension_LenNeg1_current_exp.text = '0'
        self.physical_dimension_LenNeg1_temperature_exp = ET.SubElement(physical_dimension_LenNeg1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg1M1TiNeg1_short_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'SHORT-NAME')
        physical_dimension_LenNeg1M1TiNeg1_short_name.text = 'LenNeg1M1TiNeg1'
        self.physical_dimension_LenNeg1M1TiNeg1_long_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'LONG-NAME')
        self.physical_dimension_LenNeg1M1TiNeg1_l_4 = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1_long_name, 'L-4')
        physical_dimension_LenNeg1M1TiNeg1_l_4.text = 'Dynamic Viscosity'
        physical_dimension_LenNeg1M1TiNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg1M1TiNeg1_length_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'LENGTH-EXP')
        physical_dimension_LenNeg1M1TiNeg1_length_exp.text = '-1'
        self.physical_dimension_LenNeg1M1TiNeg1_mass_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'MASS-EXP')
        physical_dimension_LenNeg1M1TiNeg1_mass_exp.text = '1'
        self.physical_dimension_LenNeg1M1TiNeg1_time_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'TIME-EXP')
        physical_dimension_LenNeg1M1TiNeg1_time_exp.text = '-1'
        self.physical_dimension_LenNeg1M1TiNeg1_current_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'CURRENT-EXP')
        physical_dimension_LenNeg1M1TiNeg1_current_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg1_temperature_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg1M1TiNeg1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg1M1TiNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg1M1TiNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg1M1TiNeg2_short_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'SHORT-NAME')
        physical_dimension_LenNeg1M1TiNeg2_short_name.text = 'LenNeg1M1TiNeg2'
        self.physical_dimension_LenNeg1M1TiNeg2_long_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'LONG-NAME')
        self.physical_dimension_LenNeg1M1TiNeg2_l_4 = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_long_name, 'L-4')
        physical_dimension_LenNeg1M1TiNeg2_l_4.text = 'Pressure'
        physical_dimension_LenNeg1M1TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg1M1TiNeg2_length_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'LENGTH-EXP')
        physical_dimension_LenNeg1M1TiNeg2_length_exp.text = '-1'
        self.physical_dimension_LenNeg1M1TiNeg2_mass_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'MASS-EXP')
        physical_dimension_LenNeg1M1TiNeg2_mass_exp.text = '1'
        self.physical_dimension_LenNeg1M1TiNeg2_time_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'TIME-EXP')
        physical_dimension_LenNeg1M1TiNeg2_time_exp.text = '-2'
        self.physical_dimension_LenNeg1M1TiNeg2_current_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'CURRENT-EXP')
        physical_dimension_LenNeg1M1TiNeg2_current_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2_temperature_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg1M1TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg1M1TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg1M1TiNeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg1M1TiNeg2_1_short_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'SHORT-NAME')
        physical_dimension_LenNeg1M1TiNeg2_1_short_name.text = 'LenNeg1M1TiNeg2_1'
        self.physical_dimension_LenNeg1M1TiNeg2_1_long_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'LONG-NAME')
        self.physical_dimension_LenNeg1M1TiNeg2_1_l_4 = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1_long_name, 'L-4')
        physical_dimension_LenNeg1M1TiNeg2_1_l_4.text = 'Pressure by Angle'
        physical_dimension_LenNeg1M1TiNeg2_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg1M1TiNeg2_1_length_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'LENGTH-EXP')
        physical_dimension_LenNeg1M1TiNeg2_1_length_exp.text = '-1'
        self.physical_dimension_LenNeg1M1TiNeg2_1_mass_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'MASS-EXP')
        physical_dimension_LenNeg1M1TiNeg2_1_mass_exp.text = '1'
        self.physical_dimension_LenNeg1M1TiNeg2_1_time_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'TIME-EXP')
        physical_dimension_LenNeg1M1TiNeg2_1_time_exp.text = '-2'
        self.physical_dimension_LenNeg1M1TiNeg2_1_current_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'CURRENT-EXP')
        physical_dimension_LenNeg1M1TiNeg2_1_current_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2_1_temperature_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg1M1TiNeg2_1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2_1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg1M1TiNeg2_1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg2_1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg2_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg1M1TiNeg2_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg3 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg1M1TiNeg3_short_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'SHORT-NAME')
        physical_dimension_LenNeg1M1TiNeg3_short_name.text = 'LenNeg1M1TiNeg3'
        self.physical_dimension_LenNeg1M1TiNeg3_long_name = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'LONG-NAME')
        self.physical_dimension_LenNeg1M1TiNeg3_l_4 = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3_long_name, 'L-4')
        physical_dimension_LenNeg1M1TiNeg3_l_4.text = 'Pressure Gradient'
        physical_dimension_LenNeg1M1TiNeg3_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg1M1TiNeg3_length_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'LENGTH-EXP')
        physical_dimension_LenNeg1M1TiNeg3_length_exp.text = '-1'
        self.physical_dimension_LenNeg1M1TiNeg3_mass_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'MASS-EXP')
        physical_dimension_LenNeg1M1TiNeg3_mass_exp.text = '1'
        self.physical_dimension_LenNeg1M1TiNeg3_time_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'TIME-EXP')
        physical_dimension_LenNeg1M1TiNeg3_time_exp.text = '-3'
        self.physical_dimension_LenNeg1M1TiNeg3_current_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'CURRENT-EXP')
        physical_dimension_LenNeg1M1TiNeg3_current_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg3_temperature_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg1M1TiNeg3_temperature_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg3_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg1M1TiNeg3_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg1M1TiNeg3_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg1M1TiNeg3, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg1M1TiNeg3_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg2Illmn1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg2Illmn1_short_name = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'SHORT-NAME')
        physical_dimension_LenNeg2Illmn1_short_name.text = 'LenNeg2Illmn1'
        self.physical_dimension_LenNeg2Illmn1_long_name = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'LONG-NAME')
        self.physical_dimension_LenNeg2Illmn1_l_4 = ET.SubElement(physical_dimension_LenNeg2Illmn1_long_name, 'L-4')
        physical_dimension_LenNeg2Illmn1_l_4.text = 'Illuminance'
        physical_dimension_LenNeg2Illmn1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg2Illmn1_length_exp = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'LENGTH-EXP')
        physical_dimension_LenNeg2Illmn1_length_exp.text = '-2'
        self.physical_dimension_LenNeg2Illmn1_mass_exp = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'MASS-EXP')
        physical_dimension_LenNeg2Illmn1_mass_exp.text = '0'
        self.physical_dimension_LenNeg2Illmn1_time_exp = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'TIME-EXP')
        physical_dimension_LenNeg2Illmn1_time_exp.text = '0'
        self.physical_dimension_LenNeg2Illmn1_current_exp = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'CURRENT-EXP')
        physical_dimension_LenNeg2Illmn1_current_exp.text = '0'
        self.physical_dimension_LenNeg2Illmn1_temperature_exp = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg2Illmn1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg2Illmn1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg2Illmn1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg2Illmn1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg2Illmn1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg2Illmn1_luminous_intensity_exp.text = '1'
        self.physical_dimension_LenNeg2MNeg1Ti3I2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg2MNeg1Ti3I2_short_name = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'SHORT-NAME')
        physical_dimension_LenNeg2MNeg1Ti3I2_short_name.text = 'LenNeg2MNeg1Ti3I2'
        self.physical_dimension_LenNeg2MNeg1Ti3I2_long_name = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'LONG-NAME')
        self.physical_dimension_LenNeg2MNeg1Ti3I2_l_4 = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2_long_name, 'L-4')
        physical_dimension_LenNeg2MNeg1Ti3I2_l_4.text = 'Electrical Conductance'
        physical_dimension_LenNeg2MNeg1Ti3I2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg2MNeg1Ti3I2_length_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'LENGTH-EXP')
        physical_dimension_LenNeg2MNeg1Ti3I2_length_exp.text = '-2'
        self.physical_dimension_LenNeg2MNeg1Ti3I2_mass_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'MASS-EXP')
        physical_dimension_LenNeg2MNeg1Ti3I2_mass_exp.text = '-1'
        self.physical_dimension_LenNeg2MNeg1Ti3I2_time_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'TIME-EXP')
        physical_dimension_LenNeg2MNeg1Ti3I2_time_exp.text = '3'
        self.physical_dimension_LenNeg2MNeg1Ti3I2_current_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'CURRENT-EXP')
        physical_dimension_LenNeg2MNeg1Ti3I2_current_exp.text = '2'
        self.physical_dimension_LenNeg2MNeg1Ti3I2_temperature_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg2MNeg1Ti3I2_temperature_exp.text = '0'
        self.physical_dimension_LenNeg2MNeg1Ti3I2_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg2MNeg1Ti3I2_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg2MNeg1Ti3I2_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti3I2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg2MNeg1Ti3I2_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg2MNeg1Ti4I2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg2MNeg1Ti4I2_short_name = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'SHORT-NAME')
        physical_dimension_LenNeg2MNeg1Ti4I2_short_name.text = 'LenNeg2MNeg1Ti4I2'
        self.physical_dimension_LenNeg2MNeg1Ti4I2_long_name = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'LONG-NAME')
        self.physical_dimension_LenNeg2MNeg1Ti4I2_l_4 = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2_long_name, 'L-4')
        physical_dimension_LenNeg2MNeg1Ti4I2_l_4.text = 'Capacitance'
        physical_dimension_LenNeg2MNeg1Ti4I2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg2MNeg1Ti4I2_length_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'LENGTH-EXP')
        physical_dimension_LenNeg2MNeg1Ti4I2_length_exp.text = '-2'
        self.physical_dimension_LenNeg2MNeg1Ti4I2_mass_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'MASS-EXP')
        physical_dimension_LenNeg2MNeg1Ti4I2_mass_exp.text = '-1'
        self.physical_dimension_LenNeg2MNeg1Ti4I2_time_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'TIME-EXP')
        physical_dimension_LenNeg2MNeg1Ti4I2_time_exp.text = '4'
        self.physical_dimension_LenNeg2MNeg1Ti4I2_current_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'CURRENT-EXP')
        physical_dimension_LenNeg2MNeg1Ti4I2_current_exp.text = '2'
        self.physical_dimension_LenNeg2MNeg1Ti4I2_temperature_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg2MNeg1Ti4I2_temperature_exp.text = '0'
        self.physical_dimension_LenNeg2MNeg1Ti4I2_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg2MNeg1Ti4I2_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg2MNeg1Ti4I2_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg2MNeg1Ti4I2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg2MNeg1Ti4I2_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg3Amnt1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg3Amnt1_short_name = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'SHORT-NAME')
        physical_dimension_LenNeg3Amnt1_short_name.text = 'LenNeg3Amnt1'
        self.physical_dimension_LenNeg3Amnt1_long_name = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'LONG-NAME')
        self.physical_dimension_LenNeg3Amnt1_l_4 = ET.SubElement(physical_dimension_LenNeg3Amnt1_long_name, 'L-4')
        physical_dimension_LenNeg3Amnt1_l_4.text = 'Concentration'
        physical_dimension_LenNeg3Amnt1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg3Amnt1_length_exp = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'LENGTH-EXP')
        physical_dimension_LenNeg3Amnt1_length_exp.text = '-3'
        self.physical_dimension_LenNeg3Amnt1_mass_exp = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'MASS-EXP')
        physical_dimension_LenNeg3Amnt1_mass_exp.text = '0'
        self.physical_dimension_LenNeg3Amnt1_time_exp = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'TIME-EXP')
        physical_dimension_LenNeg3Amnt1_time_exp.text = '0'
        self.physical_dimension_LenNeg3Amnt1_current_exp = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'CURRENT-EXP')
        physical_dimension_LenNeg3Amnt1_current_exp.text = '0'
        self.physical_dimension_LenNeg3Amnt1_temperature_exp = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg3Amnt1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg3Amnt1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg3Amnt1_molar_amount_exp.text = '1'
        self.physical_dimension_LenNeg3Amnt1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg3Amnt1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg3Amnt1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg3M1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg3M1_short_name = ET.SubElement(physical_dimension_LenNeg3M1, 'SHORT-NAME')
        physical_dimension_LenNeg3M1_short_name.text = 'LenNeg3M1'
        self.physical_dimension_LenNeg3M1_long_name = ET.SubElement(physical_dimension_LenNeg3M1, 'LONG-NAME')
        self.physical_dimension_LenNeg3M1_l_4 = ET.SubElement(physical_dimension_LenNeg3M1_long_name, 'L-4')
        physical_dimension_LenNeg3M1_l_4.text = 'Mass Density'
        physical_dimension_LenNeg3M1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg3M1_length_exp = ET.SubElement(physical_dimension_LenNeg3M1, 'LENGTH-EXP')
        physical_dimension_LenNeg3M1_length_exp.text = '-3'
        self.physical_dimension_LenNeg3M1_mass_exp = ET.SubElement(physical_dimension_LenNeg3M1, 'MASS-EXP')
        physical_dimension_LenNeg3M1_mass_exp.text = '1'
        self.physical_dimension_LenNeg3M1_time_exp = ET.SubElement(physical_dimension_LenNeg3M1, 'TIME-EXP')
        physical_dimension_LenNeg3M1_time_exp.text = '0'
        self.physical_dimension_LenNeg3M1_current_exp = ET.SubElement(physical_dimension_LenNeg3M1, 'CURRENT-EXP')
        physical_dimension_LenNeg3M1_current_exp.text = '0'
        self.physical_dimension_LenNeg3M1_temperature_exp = ET.SubElement(physical_dimension_LenNeg3M1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg3M1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg3M1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg3M1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg3M1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg3M1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg3M1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg3M1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg3MNeg1Ti2I2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg3MNeg1Ti2I2_short_name = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'SHORT-NAME')
        physical_dimension_LenNeg3MNeg1Ti2I2_short_name.text = 'LenNeg3MNeg1Ti2I2'
        self.physical_dimension_LenNeg3MNeg1Ti2I2_long_name = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'LONG-NAME')
        self.physical_dimension_LenNeg3MNeg1Ti2I2_l_4 = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2_long_name, 'L-4')
        physical_dimension_LenNeg3MNeg1Ti2I2_l_4.text = 'Electrical Conductivity Gradient'
        physical_dimension_LenNeg3MNeg1Ti2I2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg3MNeg1Ti2I2_length_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'LENGTH-EXP')
        physical_dimension_LenNeg3MNeg1Ti2I2_length_exp.text = '-3'
        self.physical_dimension_LenNeg3MNeg1Ti2I2_mass_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'MASS-EXP')
        physical_dimension_LenNeg3MNeg1Ti2I2_mass_exp.text = '-1'
        self.physical_dimension_LenNeg3MNeg1Ti2I2_time_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'TIME-EXP')
        physical_dimension_LenNeg3MNeg1Ti2I2_time_exp.text = '2'
        self.physical_dimension_LenNeg3MNeg1Ti2I2_current_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'CURRENT-EXP')
        physical_dimension_LenNeg3MNeg1Ti2I2_current_exp.text = '2'
        self.physical_dimension_LenNeg3MNeg1Ti2I2_temperature_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg3MNeg1Ti2I2_temperature_exp.text = '0'
        self.physical_dimension_LenNeg3MNeg1Ti2I2_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg3MNeg1Ti2I2_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg3MNeg1Ti2I2_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti2I2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg3MNeg1Ti2I2_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg3MNeg1Ti3I2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg3MNeg1Ti3I2_short_name = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'SHORT-NAME')
        physical_dimension_LenNeg3MNeg1Ti3I2_short_name.text = 'LenNeg3MNeg1Ti3I2'
        self.physical_dimension_LenNeg3MNeg1Ti3I2_long_name = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'LONG-NAME')
        self.physical_dimension_LenNeg3MNeg1Ti3I2_l_4 = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2_long_name, 'L-4')
        physical_dimension_LenNeg3MNeg1Ti3I2_l_4.text = 'Electrical Conductivity'
        physical_dimension_LenNeg3MNeg1Ti3I2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg3MNeg1Ti3I2_length_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'LENGTH-EXP')
        physical_dimension_LenNeg3MNeg1Ti3I2_length_exp.text = '-3'
        self.physical_dimension_LenNeg3MNeg1Ti3I2_mass_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'MASS-EXP')
        physical_dimension_LenNeg3MNeg1Ti3I2_mass_exp.text = '-1'
        self.physical_dimension_LenNeg3MNeg1Ti3I2_time_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'TIME-EXP')
        physical_dimension_LenNeg3MNeg1Ti3I2_time_exp.text = '3'
        self.physical_dimension_LenNeg3MNeg1Ti3I2_current_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'CURRENT-EXP')
        physical_dimension_LenNeg3MNeg1Ti3I2_current_exp.text = '2'
        self.physical_dimension_LenNeg3MNeg1Ti3I2_temperature_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg3MNeg1Ti3I2_temperature_exp.text = '0'
        self.physical_dimension_LenNeg3MNeg1Ti3I2_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg3MNeg1Ti3I2_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg3MNeg1Ti3I2_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg3MNeg1Ti3I2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg3MNeg1Ti3I2_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg3Ti1I1_short_name = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'SHORT-NAME')
        physical_dimension_LenNeg3Ti1I1_short_name.text = 'LenNeg3Ti1I1'
        self.physical_dimension_LenNeg3Ti1I1_long_name = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'LONG-NAME')
        self.physical_dimension_LenNeg3Ti1I1_l_4 = ET.SubElement(physical_dimension_LenNeg3Ti1I1_long_name, 'L-4')
        physical_dimension_LenNeg3Ti1I1_l_4.text = 'Electric Charge Density'
        physical_dimension_LenNeg3Ti1I1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg3Ti1I1_length_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'LENGTH-EXP')
        physical_dimension_LenNeg3Ti1I1_length_exp.text = '-3'
        self.physical_dimension_LenNeg3Ti1I1_mass_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'MASS-EXP')
        physical_dimension_LenNeg3Ti1I1_mass_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1_time_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'TIME-EXP')
        physical_dimension_LenNeg3Ti1I1_time_exp.text = '1'
        self.physical_dimension_LenNeg3Ti1I1_current_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'CURRENT-EXP')
        physical_dimension_LenNeg3Ti1I1_current_exp.text = '1'
        self.physical_dimension_LenNeg3Ti1I1_temperature_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg3Ti1I1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg3Ti1I1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg3Ti1I1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg3Ti1I1_1_short_name = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'SHORT-NAME')
        physical_dimension_LenNeg3Ti1I1_1_short_name.text = 'LenNeg3Ti1I1_1'
        self.physical_dimension_LenNeg3Ti1I1_1_long_name = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'LONG-NAME')
        self.physical_dimension_LenNeg3Ti1I1_1_l_4 = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1_long_name, 'L-4')
        physical_dimension_LenNeg3Ti1I1_1_l_4.text = 'Pressure per Voltage'
        physical_dimension_LenNeg3Ti1I1_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg3Ti1I1_1_length_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'LENGTH-EXP')
        physical_dimension_LenNeg3Ti1I1_1_length_exp.text = '-3'
        self.physical_dimension_LenNeg3Ti1I1_1_mass_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'MASS-EXP')
        physical_dimension_LenNeg3Ti1I1_1_mass_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1_1_time_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'TIME-EXP')
        physical_dimension_LenNeg3Ti1I1_1_time_exp.text = '1'
        self.physical_dimension_LenNeg3Ti1I1_1_current_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'CURRENT-EXP')
        physical_dimension_LenNeg3Ti1I1_1_current_exp.text = '1'
        self.physical_dimension_LenNeg3Ti1I1_1_temperature_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg3Ti1I1_1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1_1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg3Ti1I1_1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg3Ti1I1_1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg3Ti1I1_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg3Ti1I1_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg3TiNeg1Amnt1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg3TiNeg1Amnt1_short_name = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'SHORT-NAME')
        physical_dimension_LenNeg3TiNeg1Amnt1_short_name.text = 'LenNeg3TiNeg1Amnt1'
        self.physical_dimension_LenNeg3TiNeg1Amnt1_long_name = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'LONG-NAME')
        self.physical_dimension_LenNeg3TiNeg1Amnt1_l_4 = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1_long_name, 'L-4')
        physical_dimension_LenNeg3TiNeg1Amnt1_l_4.text = 'Reaction Rate'
        physical_dimension_LenNeg3TiNeg1Amnt1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg3TiNeg1Amnt1_length_exp = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'LENGTH-EXP')
        physical_dimension_LenNeg3TiNeg1Amnt1_length_exp.text = '-3'
        self.physical_dimension_LenNeg3TiNeg1Amnt1_mass_exp = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'MASS-EXP')
        physical_dimension_LenNeg3TiNeg1Amnt1_mass_exp.text = '0'
        self.physical_dimension_LenNeg3TiNeg1Amnt1_time_exp = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'TIME-EXP')
        physical_dimension_LenNeg3TiNeg1Amnt1_time_exp.text = '-1'
        self.physical_dimension_LenNeg3TiNeg1Amnt1_current_exp = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'CURRENT-EXP')
        physical_dimension_LenNeg3TiNeg1Amnt1_current_exp.text = '0'
        self.physical_dimension_LenNeg3TiNeg1Amnt1_temperature_exp = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg3TiNeg1Amnt1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg3TiNeg1Amnt1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg3TiNeg1Amnt1_molar_amount_exp.text = '1'
        self.physical_dimension_LenNeg3TiNeg1Amnt1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg3TiNeg1Amnt1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg3TiNeg1Amnt1_luminous_intensity_exp.text = '0'
        self.physical_dimension_LenNeg4M1TiNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_LenNeg4M1TiNeg1_short_name = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'SHORT-NAME')
        physical_dimension_LenNeg4M1TiNeg1_short_name.text = 'LenNeg4M1TiNeg1'
        self.physical_dimension_LenNeg4M1TiNeg1_long_name = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'LONG-NAME')
        self.physical_dimension_LenNeg4M1TiNeg1_l_4 = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1_long_name, 'L-4')
        physical_dimension_LenNeg4M1TiNeg1_l_4.text = 'Pressure per Volumetric Flow / Flow Resistance'
        physical_dimension_LenNeg4M1TiNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_LenNeg4M1TiNeg1_length_exp = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'LENGTH-EXP')
        physical_dimension_LenNeg4M1TiNeg1_length_exp.text = '-4'
        self.physical_dimension_LenNeg4M1TiNeg1_mass_exp = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'MASS-EXP')
        physical_dimension_LenNeg4M1TiNeg1_mass_exp.text = '1'
        self.physical_dimension_LenNeg4M1TiNeg1_time_exp = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'TIME-EXP')
        physical_dimension_LenNeg4M1TiNeg1_time_exp.text = '-1'
        self.physical_dimension_LenNeg4M1TiNeg1_current_exp = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'CURRENT-EXP')
        physical_dimension_LenNeg4M1TiNeg1_current_exp.text = '0'
        self.physical_dimension_LenNeg4M1TiNeg1_temperature_exp = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'TEMPERATURE-EXP')
        physical_dimension_LenNeg4M1TiNeg1_temperature_exp.text = '0'
        self.physical_dimension_LenNeg4M1TiNeg1_molar_amount_exp = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_LenNeg4M1TiNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_LenNeg4M1TiNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_LenNeg4M1TiNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_LenNeg4M1TiNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_M1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_M1_short_name = ET.SubElement(physical_dimension_M1, 'SHORT-NAME')
        physical_dimension_M1_short_name.text = 'M1'
        self.physical_dimension_M1_long_name = ET.SubElement(physical_dimension_M1, 'LONG-NAME')
        self.physical_dimension_M1_l_4 = ET.SubElement(physical_dimension_M1_long_name, 'L-4')
        physical_dimension_M1_l_4.text = 'Mass'
        physical_dimension_M1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_M1_length_exp = ET.SubElement(physical_dimension_M1, 'LENGTH-EXP')
        physical_dimension_M1_length_exp.text = '0'
        self.physical_dimension_M1_mass_exp = ET.SubElement(physical_dimension_M1, 'MASS-EXP')
        physical_dimension_M1_mass_exp.text = '1'
        self.physical_dimension_M1_time_exp = ET.SubElement(physical_dimension_M1, 'TIME-EXP')
        physical_dimension_M1_time_exp.text = '0'
        self.physical_dimension_M1_current_exp = ET.SubElement(physical_dimension_M1, 'CURRENT-EXP')
        physical_dimension_M1_current_exp.text = '0'
        self.physical_dimension_M1_temperature_exp = ET.SubElement(physical_dimension_M1, 'TEMPERATURE-EXP')
        physical_dimension_M1_temperature_exp.text = '0'
        self.physical_dimension_M1_molar_amount_exp = ET.SubElement(physical_dimension_M1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_M1_molar_amount_exp.text = '0'
        self.physical_dimension_M1_luminous_intensity_exp = ET.SubElement(physical_dimension_M1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_M1_luminous_intensity_exp.text = '0'
        self.physical_dimension_M1AmntNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_M1AmntNeg1_short_name = ET.SubElement(physical_dimension_M1AmntNeg1, 'SHORT-NAME')
        physical_dimension_M1AmntNeg1_short_name.text = 'M1AmntNeg1'
        self.physical_dimension_M1AmntNeg1_long_name = ET.SubElement(physical_dimension_M1AmntNeg1, 'LONG-NAME')
        self.physical_dimension_M1AmntNeg1_l_4 = ET.SubElement(physical_dimension_M1AmntNeg1_long_name, 'L-4')
        physical_dimension_M1AmntNeg1_l_4.text = 'Molar Mass'
        physical_dimension_M1AmntNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_M1AmntNeg1_length_exp = ET.SubElement(physical_dimension_M1AmntNeg1, 'LENGTH-EXP')
        physical_dimension_M1AmntNeg1_length_exp.text = '0'
        self.physical_dimension_M1AmntNeg1_mass_exp = ET.SubElement(physical_dimension_M1AmntNeg1, 'MASS-EXP')
        physical_dimension_M1AmntNeg1_mass_exp.text = '1'
        self.physical_dimension_M1AmntNeg1_time_exp = ET.SubElement(physical_dimension_M1AmntNeg1, 'TIME-EXP')
        physical_dimension_M1AmntNeg1_time_exp.text = '0'
        self.physical_dimension_M1AmntNeg1_current_exp = ET.SubElement(physical_dimension_M1AmntNeg1, 'CURRENT-EXP')
        physical_dimension_M1AmntNeg1_current_exp.text = '0'
        self.physical_dimension_M1AmntNeg1_temperature_exp = ET.SubElement(physical_dimension_M1AmntNeg1, 'TEMPERATURE-EXP')
        physical_dimension_M1AmntNeg1_temperature_exp.text = '0'
        self.physical_dimension_M1AmntNeg1_molar_amount_exp = ET.SubElement(physical_dimension_M1AmntNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_M1AmntNeg1_molar_amount_exp.text = '-1'
        self.physical_dimension_M1AmntNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_M1AmntNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_M1AmntNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_M1TiNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_M1TiNeg1_short_name = ET.SubElement(physical_dimension_M1TiNeg1, 'SHORT-NAME')
        physical_dimension_M1TiNeg1_short_name.text = 'M1TiNeg1'
        self.physical_dimension_M1TiNeg1_long_name = ET.SubElement(physical_dimension_M1TiNeg1, 'LONG-NAME')
        self.physical_dimension_M1TiNeg1_l_4 = ET.SubElement(physical_dimension_M1TiNeg1_long_name, 'L-4')
        physical_dimension_M1TiNeg1_l_4.text = 'Mass Flow'
        physical_dimension_M1TiNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_M1TiNeg1_length_exp = ET.SubElement(physical_dimension_M1TiNeg1, 'LENGTH-EXP')
        physical_dimension_M1TiNeg1_length_exp.text = '0'
        self.physical_dimension_M1TiNeg1_mass_exp = ET.SubElement(physical_dimension_M1TiNeg1, 'MASS-EXP')
        physical_dimension_M1TiNeg1_mass_exp.text = '1'
        self.physical_dimension_M1TiNeg1_time_exp = ET.SubElement(physical_dimension_M1TiNeg1, 'TIME-EXP')
        physical_dimension_M1TiNeg1_time_exp.text = '-1'
        self.physical_dimension_M1TiNeg1_current_exp = ET.SubElement(physical_dimension_M1TiNeg1, 'CURRENT-EXP')
        physical_dimension_M1TiNeg1_current_exp.text = '0'
        self.physical_dimension_M1TiNeg1_temperature_exp = ET.SubElement(physical_dimension_M1TiNeg1, 'TEMPERATURE-EXP')
        physical_dimension_M1TiNeg1_temperature_exp.text = '0'
        self.physical_dimension_M1TiNeg1_molar_amount_exp = ET.SubElement(physical_dimension_M1TiNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_M1TiNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_M1TiNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_M1TiNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_M1TiNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_M1TiNeg1_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_M1TiNeg1_1_short_name = ET.SubElement(physical_dimension_M1TiNeg1_1, 'SHORT-NAME')
        physical_dimension_M1TiNeg1_1_short_name.text = 'M1TiNeg1_1'
        self.physical_dimension_M1TiNeg1_1_long_name = ET.SubElement(physical_dimension_M1TiNeg1_1, 'LONG-NAME')
        self.physical_dimension_M1TiNeg1_1_l_4 = ET.SubElement(physical_dimension_M1TiNeg1_1_long_name, 'L-4')
        physical_dimension_M1TiNeg1_1_l_4.text = 'Translational Dumping'
        physical_dimension_M1TiNeg1_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_M1TiNeg1_1_length_exp = ET.SubElement(physical_dimension_M1TiNeg1_1, 'LENGTH-EXP')
        physical_dimension_M1TiNeg1_1_length_exp.text = '0'
        self.physical_dimension_M1TiNeg1_1_mass_exp = ET.SubElement(physical_dimension_M1TiNeg1_1, 'MASS-EXP')
        physical_dimension_M1TiNeg1_1_mass_exp.text = '1'
        self.physical_dimension_M1TiNeg1_1_time_exp = ET.SubElement(physical_dimension_M1TiNeg1_1, 'TIME-EXP')
        physical_dimension_M1TiNeg1_1_time_exp.text = '-1'
        self.physical_dimension_M1TiNeg1_1_current_exp = ET.SubElement(physical_dimension_M1TiNeg1_1, 'CURRENT-EXP')
        physical_dimension_M1TiNeg1_1_current_exp.text = '0'
        self.physical_dimension_M1TiNeg1_1_temperature_exp = ET.SubElement(physical_dimension_M1TiNeg1_1, 'TEMPERATURE-EXP')
        physical_dimension_M1TiNeg1_1_temperature_exp.text = '0'
        self.physical_dimension_M1TiNeg1_1_molar_amount_exp = ET.SubElement(physical_dimension_M1TiNeg1_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_M1TiNeg1_1_molar_amount_exp.text = '0'
        self.physical_dimension_M1TiNeg1_1_luminous_intensity_exp = ET.SubElement(physical_dimension_M1TiNeg1_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_M1TiNeg1_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_M1TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_M1TiNeg2_short_name = ET.SubElement(physical_dimension_M1TiNeg2, 'SHORT-NAME')
        physical_dimension_M1TiNeg2_short_name.text = 'M1TiNeg2'
        self.physical_dimension_M1TiNeg2_long_name = ET.SubElement(physical_dimension_M1TiNeg2, 'LONG-NAME')
        self.physical_dimension_M1TiNeg2_l_4 = ET.SubElement(physical_dimension_M1TiNeg2_long_name, 'L-4')
        physical_dimension_M1TiNeg2_l_4.text = 'Surface Tension'
        physical_dimension_M1TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_M1TiNeg2_length_exp = ET.SubElement(physical_dimension_M1TiNeg2, 'LENGTH-EXP')
        physical_dimension_M1TiNeg2_length_exp.text = '0'
        self.physical_dimension_M1TiNeg2_mass_exp = ET.SubElement(physical_dimension_M1TiNeg2, 'MASS-EXP')
        physical_dimension_M1TiNeg2_mass_exp.text = '1'
        self.physical_dimension_M1TiNeg2_time_exp = ET.SubElement(physical_dimension_M1TiNeg2, 'TIME-EXP')
        physical_dimension_M1TiNeg2_time_exp.text = '-2'
        self.physical_dimension_M1TiNeg2_current_exp = ET.SubElement(physical_dimension_M1TiNeg2, 'CURRENT-EXP')
        physical_dimension_M1TiNeg2_current_exp.text = '0'
        self.physical_dimension_M1TiNeg2_temperature_exp = ET.SubElement(physical_dimension_M1TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_M1TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_M1TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_M1TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_M1TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_M1TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_M1TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_M1TiNeg2_luminous_intensity_exp.text = '0'
        self.physical_dimension_M1TiNeg2INeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_M1TiNeg2INeg1_short_name = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'SHORT-NAME')
        physical_dimension_M1TiNeg2INeg1_short_name.text = 'M1TiNeg2INeg1'
        self.physical_dimension_M1TiNeg2INeg1_long_name = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'LONG-NAME')
        self.physical_dimension_M1TiNeg2INeg1_l_4 = ET.SubElement(physical_dimension_M1TiNeg2INeg1_long_name, 'L-4')
        physical_dimension_M1TiNeg2INeg1_l_4.text = 'Magnetic Flux Density, Magnetic Induction'
        physical_dimension_M1TiNeg2INeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_M1TiNeg2INeg1_length_exp = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'LENGTH-EXP')
        physical_dimension_M1TiNeg2INeg1_length_exp.text = '0'
        self.physical_dimension_M1TiNeg2INeg1_mass_exp = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'MASS-EXP')
        physical_dimension_M1TiNeg2INeg1_mass_exp.text = '1'
        self.physical_dimension_M1TiNeg2INeg1_time_exp = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'TIME-EXP')
        physical_dimension_M1TiNeg2INeg1_time_exp.text = '-2'
        self.physical_dimension_M1TiNeg2INeg1_current_exp = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'CURRENT-EXP')
        physical_dimension_M1TiNeg2INeg1_current_exp.text = '-1'
        self.physical_dimension_M1TiNeg2INeg1_temperature_exp = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'TEMPERATURE-EXP')
        physical_dimension_M1TiNeg2INeg1_temperature_exp.text = '0'
        self.physical_dimension_M1TiNeg2INeg1_molar_amount_exp = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_M1TiNeg2INeg1_molar_amount_exp.text = '0'
        self.physical_dimension_M1TiNeg2INeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_M1TiNeg2INeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_M1TiNeg2INeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_M1TiNeg3TNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_M1TiNeg3TNeg1_short_name = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'SHORT-NAME')
        physical_dimension_M1TiNeg3TNeg1_short_name.text = 'M1TiNeg3TNeg1'
        self.physical_dimension_M1TiNeg3TNeg1_long_name = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'LONG-NAME')
        self.physical_dimension_M1TiNeg3TNeg1_l_4 = ET.SubElement(physical_dimension_M1TiNeg3TNeg1_long_name, 'L-4')
        physical_dimension_M1TiNeg3TNeg1_l_4.text = 'Heat Transfer Coefficient'
        physical_dimension_M1TiNeg3TNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_M1TiNeg3TNeg1_length_exp = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'LENGTH-EXP')
        physical_dimension_M1TiNeg3TNeg1_length_exp.text = '0'
        self.physical_dimension_M1TiNeg3TNeg1_mass_exp = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'MASS-EXP')
        physical_dimension_M1TiNeg3TNeg1_mass_exp.text = '1'
        self.physical_dimension_M1TiNeg3TNeg1_time_exp = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'TIME-EXP')
        physical_dimension_M1TiNeg3TNeg1_time_exp.text = '-3'
        self.physical_dimension_M1TiNeg3TNeg1_current_exp = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'CURRENT-EXP')
        physical_dimension_M1TiNeg3TNeg1_current_exp.text = '0'
        self.physical_dimension_M1TiNeg3TNeg1_temperature_exp = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'TEMPERATURE-EXP')
        physical_dimension_M1TiNeg3TNeg1_temperature_exp.text = '-1'
        self.physical_dimension_M1TiNeg3TNeg1_molar_amount_exp = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_M1TiNeg3TNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_M1TiNeg3TNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_M1TiNeg3TNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_M1TiNeg3TNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_NoDimension = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_NoDimension_short_name = ET.SubElement(physical_dimension_NoDimension, 'SHORT-NAME')
        physical_dimension_NoDimension_short_name.text = 'NoDimension'
        self.physical_dimension_NoDimension_long_name = ET.SubElement(physical_dimension_NoDimension, 'LONG-NAME')
        self.physical_dimension_NoDimension_l_4 = ET.SubElement(physical_dimension_NoDimension_long_name, 'L-4')
        physical_dimension_NoDimension_l_4.text = 'Dimensionless'
        physical_dimension_NoDimension_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_NoDimension_length_exp = ET.SubElement(physical_dimension_NoDimension, 'LENGTH-EXP')
        physical_dimension_NoDimension_length_exp.text = '0'
        self.physical_dimension_NoDimension_mass_exp = ET.SubElement(physical_dimension_NoDimension, 'MASS-EXP')
        physical_dimension_NoDimension_mass_exp.text = '0'
        self.physical_dimension_NoDimension_time_exp = ET.SubElement(physical_dimension_NoDimension, 'TIME-EXP')
        physical_dimension_NoDimension_time_exp.text = '0'
        self.physical_dimension_NoDimension_current_exp = ET.SubElement(physical_dimension_NoDimension, 'CURRENT-EXP')
        physical_dimension_NoDimension_current_exp.text = '0'
        self.physical_dimension_NoDimension_temperature_exp = ET.SubElement(physical_dimension_NoDimension, 'TEMPERATURE-EXP')
        physical_dimension_NoDimension_temperature_exp.text = '0'
        self.physical_dimension_NoDimension_molar_amount_exp = ET.SubElement(physical_dimension_NoDimension, 'MOLAR-AMOUNT-EXP')
        physical_dimension_NoDimension_molar_amount_exp.text = '0'
        self.physical_dimension_NoDimension_luminous_intensity_exp = ET.SubElement(physical_dimension_NoDimension, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_NoDimension_luminous_intensity_exp.text = '0'
        self.physical_dimension_NoDimension_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_NoDimension_1_short_name = ET.SubElement(physical_dimension_NoDimension_1, 'SHORT-NAME')
        physical_dimension_NoDimension_1_short_name.text = 'NoDimension_1'
        self.physical_dimension_NoDimension_1_long_name = ET.SubElement(physical_dimension_NoDimension_1, 'LONG-NAME')
        self.physical_dimension_NoDimension_1_l_4 = ET.SubElement(physical_dimension_NoDimension_1_long_name, 'L-4')
        physical_dimension_NoDimension_1_l_4.text = 'Ratio'
        physical_dimension_NoDimension_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_NoDimension_1_length_exp = ET.SubElement(physical_dimension_NoDimension_1, 'LENGTH-EXP')
        physical_dimension_NoDimension_1_length_exp.text = '0'
        self.physical_dimension_NoDimension_1_mass_exp = ET.SubElement(physical_dimension_NoDimension_1, 'MASS-EXP')
        physical_dimension_NoDimension_1_mass_exp.text = '0'
        self.physical_dimension_NoDimension_1_time_exp = ET.SubElement(physical_dimension_NoDimension_1, 'TIME-EXP')
        physical_dimension_NoDimension_1_time_exp.text = '0'
        self.physical_dimension_NoDimension_1_current_exp = ET.SubElement(physical_dimension_NoDimension_1, 'CURRENT-EXP')
        physical_dimension_NoDimension_1_current_exp.text = '0'
        self.physical_dimension_NoDimension_1_temperature_exp = ET.SubElement(physical_dimension_NoDimension_1, 'TEMPERATURE-EXP')
        physical_dimension_NoDimension_1_temperature_exp.text = '0'
        self.physical_dimension_NoDimension_1_molar_amount_exp = ET.SubElement(physical_dimension_NoDimension_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_NoDimension_1_molar_amount_exp.text = '0'
        self.physical_dimension_NoDimension_1_luminous_intensity_exp = ET.SubElement(physical_dimension_NoDimension_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_NoDimension_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_NoDimension_2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_NoDimension_2_short_name = ET.SubElement(physical_dimension_NoDimension_2, 'SHORT-NAME')
        physical_dimension_NoDimension_2_short_name.text = 'NoDimension_2'
        self.physical_dimension_NoDimension_2_long_name = ET.SubElement(physical_dimension_NoDimension_2, 'LONG-NAME')
        self.physical_dimension_NoDimension_2_l_4 = ET.SubElement(physical_dimension_NoDimension_2_long_name, 'L-4')
        physical_dimension_NoDimension_2_l_4.text = 'Angle'
        physical_dimension_NoDimension_2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_NoDimension_2_length_exp = ET.SubElement(physical_dimension_NoDimension_2, 'LENGTH-EXP')
        physical_dimension_NoDimension_2_length_exp.text = '0'
        self.physical_dimension_NoDimension_2_mass_exp = ET.SubElement(physical_dimension_NoDimension_2, 'MASS-EXP')
        physical_dimension_NoDimension_2_mass_exp.text = '0'
        self.physical_dimension_NoDimension_2_time_exp = ET.SubElement(physical_dimension_NoDimension_2, 'TIME-EXP')
        physical_dimension_NoDimension_2_time_exp.text = '0'
        self.physical_dimension_NoDimension_2_current_exp = ET.SubElement(physical_dimension_NoDimension_2, 'CURRENT-EXP')
        physical_dimension_NoDimension_2_current_exp.text = '0'
        self.physical_dimension_NoDimension_2_temperature_exp = ET.SubElement(physical_dimension_NoDimension_2, 'TEMPERATURE-EXP')
        physical_dimension_NoDimension_2_temperature_exp.text = '0'
        self.physical_dimension_NoDimension_2_molar_amount_exp = ET.SubElement(physical_dimension_NoDimension_2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_NoDimension_2_molar_amount_exp.text = '0'
        self.physical_dimension_NoDimension_2_luminous_intensity_exp = ET.SubElement(physical_dimension_NoDimension_2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_NoDimension_2_luminous_intensity_exp.text = '0'
        self.physical_dimension_NoDimension_5 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_NoDimension_5_short_name = ET.SubElement(physical_dimension_NoDimension_5, 'SHORT-NAME')
        physical_dimension_NoDimension_5_short_name.text = 'NoDimension_5'
        self.physical_dimension_NoDimension_5_long_name = ET.SubElement(physical_dimension_NoDimension_5, 'LONG-NAME')
        self.physical_dimension_NoDimension_5_l_4 = ET.SubElement(physical_dimension_NoDimension_5_long_name, 'L-4')
        physical_dimension_NoDimension_5_l_4.text = 'Logarithmic Ratio'
        physical_dimension_NoDimension_5_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_NoDimension_5_length_exp = ET.SubElement(physical_dimension_NoDimension_5, 'LENGTH-EXP')
        physical_dimension_NoDimension_5_length_exp.text = '0'
        self.physical_dimension_NoDimension_5_mass_exp = ET.SubElement(physical_dimension_NoDimension_5, 'MASS-EXP')
        physical_dimension_NoDimension_5_mass_exp.text = '0'
        self.physical_dimension_NoDimension_5_time_exp = ET.SubElement(physical_dimension_NoDimension_5, 'TIME-EXP')
        physical_dimension_NoDimension_5_time_exp.text = '0'
        self.physical_dimension_NoDimension_5_current_exp = ET.SubElement(physical_dimension_NoDimension_5, 'CURRENT-EXP')
        physical_dimension_NoDimension_5_current_exp.text = '0'
        self.physical_dimension_NoDimension_5_temperature_exp = ET.SubElement(physical_dimension_NoDimension_5, 'TEMPERATURE-EXP')
        physical_dimension_NoDimension_5_temperature_exp.text = '0'
        self.physical_dimension_NoDimension_5_molar_amount_exp = ET.SubElement(physical_dimension_NoDimension_5, 'MOLAR-AMOUNT-EXP')
        physical_dimension_NoDimension_5_molar_amount_exp.text = '0'
        self.physical_dimension_NoDimension_5_luminous_intensity_exp = ET.SubElement(physical_dimension_NoDimension_5, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_NoDimension_5_luminous_intensity_exp.text = '0'
        self.physical_dimension_NoDimension_6 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_NoDimension_6_short_name = ET.SubElement(physical_dimension_NoDimension_6, 'SHORT-NAME')
        physical_dimension_NoDimension_6_short_name.text = 'NoDimension_6'
        self.physical_dimension_NoDimension_6_long_name = ET.SubElement(physical_dimension_NoDimension_6, 'LONG-NAME')
        self.physical_dimension_NoDimension_6_l_4 = ET.SubElement(physical_dimension_NoDimension_6_long_name, 'L-4')
        physical_dimension_NoDimension_6_l_4.text = 'Amount of Data'
        physical_dimension_NoDimension_6_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_NoDimension_6_length_exp = ET.SubElement(physical_dimension_NoDimension_6, 'LENGTH-EXP')
        physical_dimension_NoDimension_6_length_exp.text = '0'
        self.physical_dimension_NoDimension_6_mass_exp = ET.SubElement(physical_dimension_NoDimension_6, 'MASS-EXP')
        physical_dimension_NoDimension_6_mass_exp.text = '0'
        self.physical_dimension_NoDimension_6_time_exp = ET.SubElement(physical_dimension_NoDimension_6, 'TIME-EXP')
        physical_dimension_NoDimension_6_time_exp.text = '0'
        self.physical_dimension_NoDimension_6_current_exp = ET.SubElement(physical_dimension_NoDimension_6, 'CURRENT-EXP')
        physical_dimension_NoDimension_6_current_exp.text = '0'
        self.physical_dimension_NoDimension_6_temperature_exp = ET.SubElement(physical_dimension_NoDimension_6, 'TEMPERATURE-EXP')
        physical_dimension_NoDimension_6_temperature_exp.text = '0'
        self.physical_dimension_NoDimension_6_molar_amount_exp = ET.SubElement(physical_dimension_NoDimension_6, 'MOLAR-AMOUNT-EXP')
        physical_dimension_NoDimension_6_molar_amount_exp.text = '0'
        self.physical_dimension_NoDimension_6_luminous_intensity_exp = ET.SubElement(physical_dimension_NoDimension_6, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_NoDimension_6_luminous_intensity_exp.text = '0'
        self.physical_dimension_T1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_T1_short_name = ET.SubElement(physical_dimension_T1, 'SHORT-NAME')
        physical_dimension_T1_short_name.text = 'T1'
        self.physical_dimension_T1_long_name = ET.SubElement(physical_dimension_T1, 'LONG-NAME')
        self.physical_dimension_T1_l_4 = ET.SubElement(physical_dimension_T1_long_name, 'L-4')
        physical_dimension_T1_l_4.text = 'Absolute Temperature'
        physical_dimension_T1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_T1_length_exp = ET.SubElement(physical_dimension_T1, 'LENGTH-EXP')
        physical_dimension_T1_length_exp.text = '0'
        self.physical_dimension_T1_mass_exp = ET.SubElement(physical_dimension_T1, 'MASS-EXP')
        physical_dimension_T1_mass_exp.text = '0'
        self.physical_dimension_T1_time_exp = ET.SubElement(physical_dimension_T1, 'TIME-EXP')
        physical_dimension_T1_time_exp.text = '0'
        self.physical_dimension_T1_current_exp = ET.SubElement(physical_dimension_T1, 'CURRENT-EXP')
        physical_dimension_T1_current_exp.text = '0'
        self.physical_dimension_T1_temperature_exp = ET.SubElement(physical_dimension_T1, 'TEMPERATURE-EXP')
        physical_dimension_T1_temperature_exp.text = '1'
        self.physical_dimension_T1_molar_amount_exp = ET.SubElement(physical_dimension_T1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_T1_molar_amount_exp.text = '0'
        self.physical_dimension_T1_luminous_intensity_exp = ET.SubElement(physical_dimension_T1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_T1_luminous_intensity_exp.text = '0'
        self.physical_dimension_T1I1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_T1I1_short_name = ET.SubElement(physical_dimension_T1I1, 'SHORT-NAME')
        physical_dimension_T1I1_short_name.text = 'T1I1'
        self.physical_dimension_T1I1_long_name = ET.SubElement(physical_dimension_T1I1, 'LONG-NAME')
        self.physical_dimension_T1I1_l_4 = ET.SubElement(physical_dimension_T1I1_long_name, 'L-4')
        physical_dimension_T1I1_l_4.text = 'Electric Charge'
        physical_dimension_T1I1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_T1I1_length_exp = ET.SubElement(physical_dimension_T1I1, 'LENGTH-EXP')
        physical_dimension_T1I1_length_exp.text = '0'
        self.physical_dimension_T1I1_mass_exp = ET.SubElement(physical_dimension_T1I1, 'MASS-EXP')
        physical_dimension_T1I1_mass_exp.text = '0'
        self.physical_dimension_T1I1_time_exp = ET.SubElement(physical_dimension_T1I1, 'TIME-EXP')
        physical_dimension_T1I1_time_exp.text = '1'
        self.physical_dimension_T1I1_current_exp = ET.SubElement(physical_dimension_T1I1, 'CURRENT-EXP')
        physical_dimension_T1I1_current_exp.text = '1'
        self.physical_dimension_T1I1_temperature_exp = ET.SubElement(physical_dimension_T1I1, 'TEMPERATURE-EXP')
        physical_dimension_T1I1_temperature_exp.text = '0'
        self.physical_dimension_T1I1_molar_amount_exp = ET.SubElement(physical_dimension_T1I1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_T1I1_molar_amount_exp.text = '0'
        self.physical_dimension_T1I1_luminous_intensity_exp = ET.SubElement(physical_dimension_T1I1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_T1I1_luminous_intensity_exp.text = '0'
        self.physical_dimension_T1_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_T1_1_short_name = ET.SubElement(physical_dimension_T1_1, 'SHORT-NAME')
        physical_dimension_T1_1_short_name.text = 'T1_1'
        self.physical_dimension_T1_1_long_name = ET.SubElement(physical_dimension_T1_1, 'LONG-NAME')
        self.physical_dimension_T1_1_l_4 = ET.SubElement(physical_dimension_T1_1_long_name, 'L-4')
        physical_dimension_T1_1_l_4.text = 'Relative Temperature, Temperature Difference'
        physical_dimension_T1_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_T1_1_length_exp = ET.SubElement(physical_dimension_T1_1, 'LENGTH-EXP')
        physical_dimension_T1_1_length_exp.text = '0'
        self.physical_dimension_T1_1_mass_exp = ET.SubElement(physical_dimension_T1_1, 'MASS-EXP')
        physical_dimension_T1_1_mass_exp.text = '0'
        self.physical_dimension_T1_1_time_exp = ET.SubElement(physical_dimension_T1_1, 'TIME-EXP')
        physical_dimension_T1_1_time_exp.text = '0'
        self.physical_dimension_T1_1_current_exp = ET.SubElement(physical_dimension_T1_1, 'CURRENT-EXP')
        physical_dimension_T1_1_current_exp.text = '0'
        self.physical_dimension_T1_1_temperature_exp = ET.SubElement(physical_dimension_T1_1, 'TEMPERATURE-EXP')
        physical_dimension_T1_1_temperature_exp.text = '1'
        self.physical_dimension_T1_1_molar_amount_exp = ET.SubElement(physical_dimension_T1_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_T1_1_molar_amount_exp.text = '0'
        self.physical_dimension_T1_1_luminous_intensity_exp = ET.SubElement(physical_dimension_T1_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_T1_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_Ti1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_Ti1_short_name = ET.SubElement(physical_dimension_Ti1, 'SHORT-NAME')
        physical_dimension_Ti1_short_name.text = 'Ti1'
        self.physical_dimension_Ti1_long_name = ET.SubElement(physical_dimension_Ti1, 'LONG-NAME')
        self.physical_dimension_Ti1_l_4 = ET.SubElement(physical_dimension_Ti1_long_name, 'L-4')
        physical_dimension_Ti1_l_4.text = 'Time'
        physical_dimension_Ti1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_Ti1_length_exp = ET.SubElement(physical_dimension_Ti1, 'LENGTH-EXP')
        physical_dimension_Ti1_length_exp.text = '0'
        self.physical_dimension_Ti1_mass_exp = ET.SubElement(physical_dimension_Ti1, 'MASS-EXP')
        physical_dimension_Ti1_mass_exp.text = '0'
        self.physical_dimension_Ti1_time_exp = ET.SubElement(physical_dimension_Ti1, 'TIME-EXP')
        physical_dimension_Ti1_time_exp.text = '1'
        self.physical_dimension_Ti1_current_exp = ET.SubElement(physical_dimension_Ti1, 'CURRENT-EXP')
        physical_dimension_Ti1_current_exp.text = '0'
        self.physical_dimension_Ti1_temperature_exp = ET.SubElement(physical_dimension_Ti1, 'TEMPERATURE-EXP')
        physical_dimension_Ti1_temperature_exp.text = '0'
        self.physical_dimension_Ti1_molar_amount_exp = ET.SubElement(physical_dimension_Ti1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_Ti1_molar_amount_exp.text = '0'
        self.physical_dimension_Ti1_luminous_intensity_exp = ET.SubElement(physical_dimension_Ti1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_Ti1_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg1_short_name = ET.SubElement(physical_dimension_TiNeg1, 'SHORT-NAME')
        physical_dimension_TiNeg1_short_name.text = 'TiNeg1'
        self.physical_dimension_TiNeg1_long_name = ET.SubElement(physical_dimension_TiNeg1, 'LONG-NAME')
        self.physical_dimension_TiNeg1_l_4 = ET.SubElement(physical_dimension_TiNeg1_long_name, 'L-4')
        physical_dimension_TiNeg1_l_4.text = 'Frequency'
        physical_dimension_TiNeg1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg1_length_exp = ET.SubElement(physical_dimension_TiNeg1, 'LENGTH-EXP')
        physical_dimension_TiNeg1_length_exp.text = '0'
        self.physical_dimension_TiNeg1_mass_exp = ET.SubElement(physical_dimension_TiNeg1, 'MASS-EXP')
        physical_dimension_TiNeg1_mass_exp.text = '0'
        self.physical_dimension_TiNeg1_time_exp = ET.SubElement(physical_dimension_TiNeg1, 'TIME-EXP')
        physical_dimension_TiNeg1_time_exp.text = '-1'
        self.physical_dimension_TiNeg1_current_exp = ET.SubElement(physical_dimension_TiNeg1, 'CURRENT-EXP')
        physical_dimension_TiNeg1_current_exp.text = '0'
        self.physical_dimension_TiNeg1_temperature_exp = ET.SubElement(physical_dimension_TiNeg1, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg1_temperature_exp.text = '0'
        self.physical_dimension_TiNeg1_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg1_molar_amount_exp.text = '0'
        self.physical_dimension_TiNeg1_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg1_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg1Amnt1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg1Amnt1_short_name = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'SHORT-NAME')
        physical_dimension_TiNeg1Amnt1_short_name.text = 'TiNeg1Amnt1'
        self.physical_dimension_TiNeg1Amnt1_long_name = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'LONG-NAME')
        self.physical_dimension_TiNeg1Amnt1_l_4 = ET.SubElement(physical_dimension_TiNeg1Amnt1_long_name, 'L-4')
        physical_dimension_TiNeg1Amnt1_l_4.text = 'Catalytic Activity'
        physical_dimension_TiNeg1Amnt1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg1Amnt1_length_exp = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'LENGTH-EXP')
        physical_dimension_TiNeg1Amnt1_length_exp.text = '0'
        self.physical_dimension_TiNeg1Amnt1_mass_exp = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'MASS-EXP')
        physical_dimension_TiNeg1Amnt1_mass_exp.text = '0'
        self.physical_dimension_TiNeg1Amnt1_time_exp = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'TIME-EXP')
        physical_dimension_TiNeg1Amnt1_time_exp.text = '-1'
        self.physical_dimension_TiNeg1Amnt1_current_exp = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'CURRENT-EXP')
        physical_dimension_TiNeg1Amnt1_current_exp.text = '0'
        self.physical_dimension_TiNeg1Amnt1_temperature_exp = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg1Amnt1_temperature_exp.text = '0'
        self.physical_dimension_TiNeg1Amnt1_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg1Amnt1_molar_amount_exp.text = '1'
        self.physical_dimension_TiNeg1Amnt1_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg1Amnt1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg1Amnt1_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg1I1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg1I1_short_name = ET.SubElement(physical_dimension_TiNeg1I1, 'SHORT-NAME')
        physical_dimension_TiNeg1I1_short_name.text = 'TiNeg1I1'
        self.physical_dimension_TiNeg1I1_long_name = ET.SubElement(physical_dimension_TiNeg1I1, 'LONG-NAME')
        self.physical_dimension_TiNeg1I1_l_4 = ET.SubElement(physical_dimension_TiNeg1I1_long_name, 'L-4')
        physical_dimension_TiNeg1I1_l_4.text = 'Electric Current Gradient'
        physical_dimension_TiNeg1I1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg1I1_length_exp = ET.SubElement(physical_dimension_TiNeg1I1, 'LENGTH-EXP')
        physical_dimension_TiNeg1I1_length_exp.text = '0'
        self.physical_dimension_TiNeg1I1_mass_exp = ET.SubElement(physical_dimension_TiNeg1I1, 'MASS-EXP')
        physical_dimension_TiNeg1I1_mass_exp.text = '0'
        self.physical_dimension_TiNeg1I1_time_exp = ET.SubElement(physical_dimension_TiNeg1I1, 'TIME-EXP')
        physical_dimension_TiNeg1I1_time_exp.text = '-1'
        self.physical_dimension_TiNeg1I1_current_exp = ET.SubElement(physical_dimension_TiNeg1I1, 'CURRENT-EXP')
        physical_dimension_TiNeg1I1_current_exp.text = '1'
        self.physical_dimension_TiNeg1I1_temperature_exp = ET.SubElement(physical_dimension_TiNeg1I1, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg1I1_temperature_exp.text = '0'
        self.physical_dimension_TiNeg1I1_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg1I1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg1I1_molar_amount_exp.text = '0'
        self.physical_dimension_TiNeg1I1_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg1I1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg1I1_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg1T1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg1T1_short_name = ET.SubElement(physical_dimension_TiNeg1T1, 'SHORT-NAME')
        physical_dimension_TiNeg1T1_short_name.text = 'TiNeg1T1'
        self.physical_dimension_TiNeg1T1_long_name = ET.SubElement(physical_dimension_TiNeg1T1, 'LONG-NAME')
        self.physical_dimension_TiNeg1T1_l_4 = ET.SubElement(physical_dimension_TiNeg1T1_long_name, 'L-4')
        physical_dimension_TiNeg1T1_l_4.text = 'Temperature Gradient'
        physical_dimension_TiNeg1T1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg1T1_length_exp = ET.SubElement(physical_dimension_TiNeg1T1, 'LENGTH-EXP')
        physical_dimension_TiNeg1T1_length_exp.text = '0'
        self.physical_dimension_TiNeg1T1_mass_exp = ET.SubElement(physical_dimension_TiNeg1T1, 'MASS-EXP')
        physical_dimension_TiNeg1T1_mass_exp.text = '0'
        self.physical_dimension_TiNeg1T1_time_exp = ET.SubElement(physical_dimension_TiNeg1T1, 'TIME-EXP')
        physical_dimension_TiNeg1T1_time_exp.text = '-1'
        self.physical_dimension_TiNeg1T1_current_exp = ET.SubElement(physical_dimension_TiNeg1T1, 'CURRENT-EXP')
        physical_dimension_TiNeg1T1_current_exp.text = '0'
        self.physical_dimension_TiNeg1T1_temperature_exp = ET.SubElement(physical_dimension_TiNeg1T1, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg1T1_temperature_exp.text = '1'
        self.physical_dimension_TiNeg1T1_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg1T1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg1T1_molar_amount_exp.text = '0'
        self.physical_dimension_TiNeg1T1_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg1T1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg1T1_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg1_1 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg1_1_short_name = ET.SubElement(physical_dimension_TiNeg1_1, 'SHORT-NAME')
        physical_dimension_TiNeg1_1_short_name.text = 'TiNeg1_1'
        self.physical_dimension_TiNeg1_1_long_name = ET.SubElement(physical_dimension_TiNeg1_1, 'LONG-NAME')
        self.physical_dimension_TiNeg1_1_l_4 = ET.SubElement(physical_dimension_TiNeg1_1_long_name, 'L-4')
        physical_dimension_TiNeg1_1_l_4.text = 'Ratio Gradient'
        physical_dimension_TiNeg1_1_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg1_1_length_exp = ET.SubElement(physical_dimension_TiNeg1_1, 'LENGTH-EXP')
        physical_dimension_TiNeg1_1_length_exp.text = '0'
        self.physical_dimension_TiNeg1_1_mass_exp = ET.SubElement(physical_dimension_TiNeg1_1, 'MASS-EXP')
        physical_dimension_TiNeg1_1_mass_exp.text = '0'
        self.physical_dimension_TiNeg1_1_time_exp = ET.SubElement(physical_dimension_TiNeg1_1, 'TIME-EXP')
        physical_dimension_TiNeg1_1_time_exp.text = '-1'
        self.physical_dimension_TiNeg1_1_current_exp = ET.SubElement(physical_dimension_TiNeg1_1, 'CURRENT-EXP')
        physical_dimension_TiNeg1_1_current_exp.text = '0'
        self.physical_dimension_TiNeg1_1_temperature_exp = ET.SubElement(physical_dimension_TiNeg1_1, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg1_1_temperature_exp.text = '0'
        self.physical_dimension_TiNeg1_1_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg1_1, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg1_1_molar_amount_exp.text = '0'
        self.physical_dimension_TiNeg1_1_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg1_1, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg1_1_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg1_2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg1_2_short_name = ET.SubElement(physical_dimension_TiNeg1_2, 'SHORT-NAME')
        physical_dimension_TiNeg1_2_short_name.text = 'TiNeg1_2'
        self.physical_dimension_TiNeg1_2_long_name = ET.SubElement(physical_dimension_TiNeg1_2, 'LONG-NAME')
        self.physical_dimension_TiNeg1_2_l_4 = ET.SubElement(physical_dimension_TiNeg1_2_long_name, 'L-4')
        physical_dimension_TiNeg1_2_l_4.text = 'Rotational Speed'
        physical_dimension_TiNeg1_2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg1_2_length_exp = ET.SubElement(physical_dimension_TiNeg1_2, 'LENGTH-EXP')
        physical_dimension_TiNeg1_2_length_exp.text = '0'
        self.physical_dimension_TiNeg1_2_mass_exp = ET.SubElement(physical_dimension_TiNeg1_2, 'MASS-EXP')
        physical_dimension_TiNeg1_2_mass_exp.text = '0'
        self.physical_dimension_TiNeg1_2_time_exp = ET.SubElement(physical_dimension_TiNeg1_2, 'TIME-EXP')
        physical_dimension_TiNeg1_2_time_exp.text = '-1'
        self.physical_dimension_TiNeg1_2_current_exp = ET.SubElement(physical_dimension_TiNeg1_2, 'CURRENT-EXP')
        physical_dimension_TiNeg1_2_current_exp.text = '0'
        self.physical_dimension_TiNeg1_2_temperature_exp = ET.SubElement(physical_dimension_TiNeg1_2, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg1_2_temperature_exp.text = '0'
        self.physical_dimension_TiNeg1_2_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg1_2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg1_2_molar_amount_exp.text = '0'
        self.physical_dimension_TiNeg1_2_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg1_2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg1_2_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg1_3 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg1_3_short_name = ET.SubElement(physical_dimension_TiNeg1_3, 'SHORT-NAME')
        physical_dimension_TiNeg1_3_short_name.text = 'TiNeg1_3'
        self.physical_dimension_TiNeg1_3_long_name = ET.SubElement(physical_dimension_TiNeg1_3, 'LONG-NAME')
        self.physical_dimension_TiNeg1_3_l_4 = ET.SubElement(physical_dimension_TiNeg1_3_long_name, 'L-4')
        physical_dimension_TiNeg1_3_l_4.text = 'Transfer Rate'
        physical_dimension_TiNeg1_3_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg1_3_length_exp = ET.SubElement(physical_dimension_TiNeg1_3, 'LENGTH-EXP')
        physical_dimension_TiNeg1_3_length_exp.text = '0'
        self.physical_dimension_TiNeg1_3_mass_exp = ET.SubElement(physical_dimension_TiNeg1_3, 'MASS-EXP')
        physical_dimension_TiNeg1_3_mass_exp.text = '0'
        self.physical_dimension_TiNeg1_3_time_exp = ET.SubElement(physical_dimension_TiNeg1_3, 'TIME-EXP')
        physical_dimension_TiNeg1_3_time_exp.text = '-1'
        self.physical_dimension_TiNeg1_3_current_exp = ET.SubElement(physical_dimension_TiNeg1_3, 'CURRENT-EXP')
        physical_dimension_TiNeg1_3_current_exp.text = '0'
        self.physical_dimension_TiNeg1_3_temperature_exp = ET.SubElement(physical_dimension_TiNeg1_3, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg1_3_temperature_exp.text = '0'
        self.physical_dimension_TiNeg1_3_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg1_3, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg1_3_molar_amount_exp.text = '0'
        self.physical_dimension_TiNeg1_3_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg1_3, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg1_3_luminous_intensity_exp.text = '0'
        self.physical_dimension_TiNeg2 = ET.SubElement(PhysicalDimensions_folder_elements, 'PHYSICAL-DIMENSION')
        self.physical_dimension_TiNeg2_short_name = ET.SubElement(physical_dimension_TiNeg2, 'SHORT-NAME')
        physical_dimension_TiNeg2_short_name.text = 'TiNeg2'
        self.physical_dimension_TiNeg2_long_name = ET.SubElement(physical_dimension_TiNeg2, 'LONG-NAME')
        self.physical_dimension_TiNeg2_l_4 = ET.SubElement(physical_dimension_TiNeg2_long_name, 'L-4')
        physical_dimension_TiNeg2_l_4.text = 'Rotational Speed Gradient'
        physical_dimension_TiNeg2_l_4.attrib = {'L': 'EN'}
        self.physical_dimension_TiNeg2_length_exp = ET.SubElement(physical_dimension_TiNeg2, 'LENGTH-EXP')
        physical_dimension_TiNeg2_length_exp.text = '0'
        self.physical_dimension_TiNeg2_mass_exp = ET.SubElement(physical_dimension_TiNeg2, 'MASS-EXP')
        physical_dimension_TiNeg2_mass_exp.text = '0'
        self.physical_dimension_TiNeg2_time_exp = ET.SubElement(physical_dimension_TiNeg2, 'TIME-EXP')
        physical_dimension_TiNeg2_time_exp.text = '-2'
        self.physical_dimension_TiNeg2_current_exp = ET.SubElement(physical_dimension_TiNeg2, 'CURRENT-EXP')
        physical_dimension_TiNeg2_current_exp.text = '0'
        self.physical_dimension_TiNeg2_temperature_exp = ET.SubElement(physical_dimension_TiNeg2, 'TEMPERATURE-EXP')
        physical_dimension_TiNeg2_temperature_exp.text = '0'
        self.physical_dimension_TiNeg2_molar_amount_exp = ET.SubElement(physical_dimension_TiNeg2, 'MOLAR-AMOUNT-EXP')
        physical_dimension_TiNeg2_molar_amount_exp.text = '0'
        self.physical_dimension_TiNeg2_luminous_intensity_exp = ET.SubElement(physical_dimension_TiNeg2, 'LUMINOUS-INTENSITY-EXP')
        physical_dimension_TiNeg2_luminous_intensity_exp.text = '0'
        self.Units_folder = ET.SubElement(AUTOSAR_PhysicalUnits_subfolder, 'AR-PACKAGE')
        self.Units_folder_short_name = ET.SubElement(Units_folder, 'SHORT-NAME')
        Units_folder_short_name.text = 'Units'
        self.Units_folder_category4 = ET.SubElement(Units_folder, 'CATEGORY')
        Units_folder_category4.text = 'STANDARD'
        self.Units_folder_reference_bases = ET.SubElement(Units_folder, 'REFERENCE-BASES')
        self.Units_folder_reference_base = ET.SubElement(Units_folder_reference_bases, 'REFERENCE-BASE')
        self.Units_folder_reference_base_short_label = ET.SubElement(Units_folder_reference_base, 'SHORT-LABEL')
        Units_folder_reference_base_short_label.text = 'PhysicalDimensions'
        self.Units_folder_reference_base_is_default = ET.SubElement(Units_folder_reference_base, 'IS-DEFAULT')
        Units_folder_reference_base_is_default.text = 'false'
        self.Units_folder_reference_base_package_ref = ET.SubElement(Units_folder_reference_base, 'PACKAGE-REF')
        Units_folder_reference_base_package_ref.text = '/AUTOSAR/AUTOSAR_PhysicalUnits/PhysicalDimensions'
        Units_folder_reference_base_package_ref.attrib = {'DEST': 'AR-PACKAGE'}
        self.Units_folder_elements = ET.SubElement(Units_folder, 'ELEMENTS')
        self.unit_Ampr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Ampr_short_name = ET.SubElement(unit_Ampr, 'SHORT-NAME')
        unit_Ampr_short_name.text = 'Ampr'
        self.unit_Ampr_long_name = ET.SubElement(unit_Ampr, 'LONG-NAME')
        self.unit_Ampr_l_4 = ET.SubElement(unit_Ampr_long_name, 'L-4')
        unit_Ampr_l_4.text = 'Ampere'
        unit_Ampr_l_4.attrib = {'L': 'EN'}
        self.unit_Ampr_display_name = ET.SubElement(unit_Ampr, 'DISPLAY-NAME')
        unit_Ampr_display_name.text = 'A'
        self.unit_Ampr_factor_si_to_unit = ET.SubElement(unit_Ampr, 'FACTOR-SI-TO-UNIT')
        unit_Ampr_factor_si_to_unit.text = '1'
        self.unit_Ampr_offset_si_to_unit = ET.SubElement(unit_Ampr, 'OFFSET-SI-TO-UNIT')
        unit_Ampr_offset_si_to_unit.text = '0'
        self.unit_Ampr_physical_dimension_ref = ET.SubElement(unit_Ampr, 'PHYSICAL-DIMENSION-REF')
        unit_Ampr_physical_dimension_ref.text = 'I1'
        unit_Ampr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_AmprPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_AmprPerSec_short_name = ET.SubElement(unit_AmprPerSec, 'SHORT-NAME')
        unit_AmprPerSec_short_name.text = 'AmprPerSec'
        self.unit_AmprPerSec_long_name = ET.SubElement(unit_AmprPerSec, 'LONG-NAME')
        self.unit_AmprPerSec_l_4 = ET.SubElement(unit_AmprPerSec_long_name, 'L-4')
        unit_AmprPerSec_l_4.text = 'Ampere Per Second'
        unit_AmprPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_AmprPerSec_display_name = ET.SubElement(unit_AmprPerSec, 'DISPLAY-NAME')
        unit_AmprPerSec_display_name.text = 'A/s'
        self.unit_AmprPerSec_factor_si_to_unit = ET.SubElement(unit_AmprPerSec, 'FACTOR-SI-TO-UNIT')
        unit_AmprPerSec_factor_si_to_unit.text = '1'
        self.unit_AmprPerSec_offset_si_to_unit = ET.SubElement(unit_AmprPerSec, 'OFFSET-SI-TO-UNIT')
        unit_AmprPerSec_offset_si_to_unit.text = '0'
        self.unit_AmprPerSec_physical_dimension_ref = ET.SubElement(unit_AmprPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_AmprPerSec_physical_dimension_ref.text = 'TiNeg1I1'
        unit_AmprPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_AmprSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_AmprSec_short_name = ET.SubElement(unit_AmprSec, 'SHORT-NAME')
        unit_AmprSec_short_name.text = 'AmprSec'
        self.unit_AmprSec_long_name = ET.SubElement(unit_AmprSec, 'LONG-NAME')
        self.unit_AmprSec_l_4 = ET.SubElement(unit_AmprSec_long_name, 'L-4')
        unit_AmprSec_l_4.text = 'Amperesecond'
        unit_AmprSec_l_4.attrib = {'L': 'EN'}
        self.unit_AmprSec_display_name = ET.SubElement(unit_AmprSec, 'DISPLAY-NAME')
        unit_AmprSec_display_name.text = 'As'
        self.unit_AmprSec_factor_si_to_unit = ET.SubElement(unit_AmprSec, 'FACTOR-SI-TO-UNIT')
        unit_AmprSec_factor_si_to_unit.text = '1'
        self.unit_AmprSec_offset_si_to_unit = ET.SubElement(unit_AmprSec, 'OFFSET-SI-TO-UNIT')
        unit_AmprSec_offset_si_to_unit.text = '0'
        self.unit_AmprSec_physical_dimension_ref = ET.SubElement(unit_AmprSec, 'PHYSICAL-DIMENSION-REF')
        unit_AmprSec_physical_dimension_ref.text = 'T1I1'
        unit_AmprSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Bar = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Bar_short_name = ET.SubElement(unit_Bar, 'SHORT-NAME')
        unit_Bar_short_name.text = 'Bar'
        self.unit_Bar_long_name = ET.SubElement(unit_Bar, 'LONG-NAME')
        self.unit_Bar_l_4 = ET.SubElement(unit_Bar_long_name, 'L-4')
        unit_Bar_l_4.text = 'Bar'
        unit_Bar_l_4.attrib = {'L': 'EN'}
        self.unit_Bar_display_name = ET.SubElement(unit_Bar, 'DISPLAY-NAME')
        unit_Bar_display_name.text = 'bar'
        self.unit_Bar_factor_si_to_unit = ET.SubElement(unit_Bar, 'FACTOR-SI-TO-UNIT')
        unit_Bar_factor_si_to_unit.text = '1E-05'
        self.unit_Bar_offset_si_to_unit = ET.SubElement(unit_Bar, 'OFFSET-SI-TO-UNIT')
        unit_Bar_offset_si_to_unit.text = '0'
        self.unit_Bar_physical_dimension_ref = ET.SubElement(unit_Bar, 'PHYSICAL-DIMENSION-REF')
        unit_Bar_physical_dimension_ref.text = 'LenNeg1M1TiNeg2'
        unit_Bar_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_BarPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_BarPerSec_short_name = ET.SubElement(unit_BarPerSec, 'SHORT-NAME')
        unit_BarPerSec_short_name.text = 'BarPerSec'
        self.unit_BarPerSec_long_name = ET.SubElement(unit_BarPerSec, 'LONG-NAME')
        self.unit_BarPerSec_l_4 = ET.SubElement(unit_BarPerSec_long_name, 'L-4')
        unit_BarPerSec_l_4.text = 'Bar Per Second'
        unit_BarPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_BarPerSec_display_name = ET.SubElement(unit_BarPerSec, 'DISPLAY-NAME')
        unit_BarPerSec_display_name.text = 'bar/s'
        self.unit_BarPerSec_factor_si_to_unit = ET.SubElement(unit_BarPerSec, 'FACTOR-SI-TO-UNIT')
        unit_BarPerSec_factor_si_to_unit.text = '1E-05'
        self.unit_BarPerSec_offset_si_to_unit = ET.SubElement(unit_BarPerSec, 'OFFSET-SI-TO-UNIT')
        unit_BarPerSec_offset_si_to_unit.text = '0'
        self.unit_BarPerSec_physical_dimension_ref = ET.SubElement(unit_BarPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_BarPerSec_physical_dimension_ref.text = 'LenNeg1M1TiNeg3'
        unit_BarPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Bel = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Bel_short_name = ET.SubElement(unit_Bel, 'SHORT-NAME')
        unit_Bel_short_name.text = 'Bel'
        self.unit_Bel_long_name = ET.SubElement(unit_Bel, 'LONG-NAME')
        self.unit_Bel_l_4 = ET.SubElement(unit_Bel_long_name, 'L-4')
        unit_Bel_l_4.text = 'Bel'
        unit_Bel_l_4.attrib = {'L': 'EN'}
        self.unit_Bel_display_name = ET.SubElement(unit_Bel, 'DISPLAY-NAME')
        unit_Bel_display_name.text = 'B'
        self.unit_Bel_factor_si_to_unit = ET.SubElement(unit_Bel, 'FACTOR-SI-TO-UNIT')
        unit_Bel_factor_si_to_unit.text = '1'
        self.unit_Bel_offset_si_to_unit = ET.SubElement(unit_Bel, 'OFFSET-SI-TO-UNIT')
        unit_Bel_offset_si_to_unit.text = '0'
        self.unit_Bel_physical_dimension_ref = ET.SubElement(unit_Bel, 'PHYSICAL-DIMENSION-REF')
        unit_Bel_physical_dimension_ref.text = 'NoDimension_5'
        unit_Bel_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Bit = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Bit_short_name = ET.SubElement(unit_Bit, 'SHORT-NAME')
        unit_Bit_short_name.text = 'Bit'
        self.unit_Bit_long_name = ET.SubElement(unit_Bit, 'LONG-NAME')
        self.unit_Bit_l_4 = ET.SubElement(unit_Bit_long_name, 'L-4')
        unit_Bit_l_4.text = 'Bit'
        unit_Bit_l_4.attrib = {'L': 'EN'}
        self.unit_Bit_display_name = ET.SubElement(unit_Bit, 'DISPLAY-NAME')
        unit_Bit_display_name.text = 'bit'
        self.unit_Bit_factor_si_to_unit = ET.SubElement(unit_Bit, 'FACTOR-SI-TO-UNIT')
        unit_Bit_factor_si_to_unit.text = '1'
        self.unit_Bit_offset_si_to_unit = ET.SubElement(unit_Bit, 'OFFSET-SI-TO-UNIT')
        unit_Bit_offset_si_to_unit.text = '0'
        self.unit_Bit_physical_dimension_ref = ET.SubElement(unit_Bit, 'PHYSICAL-DIMENSION-REF')
        unit_Bit_physical_dimension_ref.text = 'NoDimension_6'
        unit_Bit_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_BitPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_BitPerSec_short_name = ET.SubElement(unit_BitPerSec, 'SHORT-NAME')
        unit_BitPerSec_short_name.text = 'BitPerSec'
        self.unit_BitPerSec_long_name = ET.SubElement(unit_BitPerSec, 'LONG-NAME')
        self.unit_BitPerSec_l_4 = ET.SubElement(unit_BitPerSec_long_name, 'L-4')
        unit_BitPerSec_l_4.text = 'Bit Per Second'
        unit_BitPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_BitPerSec_display_name = ET.SubElement(unit_BitPerSec, 'DISPLAY-NAME')
        unit_BitPerSec_display_name.text = 'bit/s'
        self.unit_BitPerSec_factor_si_to_unit = ET.SubElement(unit_BitPerSec, 'FACTOR-SI-TO-UNIT')
        unit_BitPerSec_factor_si_to_unit.text = '1'
        self.unit_BitPerSec_offset_si_to_unit = ET.SubElement(unit_BitPerSec, 'OFFSET-SI-TO-UNIT')
        unit_BitPerSec_offset_si_to_unit.text = '0'
        self.unit_BitPerSec_physical_dimension_ref = ET.SubElement(unit_BitPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_BitPerSec_physical_dimension_ref.text = 'TiNeg1_3'
        unit_BitPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_BytPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_BytPerSec_short_name = ET.SubElement(unit_BytPerSec, 'SHORT-NAME')
        unit_BytPerSec_short_name.text = 'BytPerSec'
        self.unit_BytPerSec_long_name = ET.SubElement(unit_BytPerSec, 'LONG-NAME')
        self.unit_BytPerSec_l_4 = ET.SubElement(unit_BytPerSec_long_name, 'L-4')
        unit_BytPerSec_l_4.text = 'Byte Per Second'
        unit_BytPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_BytPerSec_display_name = ET.SubElement(unit_BytPerSec, 'DISPLAY-NAME')
        unit_BytPerSec_display_name.text = 'Byte/s'
        self.unit_BytPerSec_factor_si_to_unit = ET.SubElement(unit_BytPerSec, 'FACTOR-SI-TO-UNIT')
        unit_BytPerSec_factor_si_to_unit.text = '0.125'
        self.unit_BytPerSec_offset_si_to_unit = ET.SubElement(unit_BytPerSec, 'OFFSET-SI-TO-UNIT')
        unit_BytPerSec_offset_si_to_unit.text = '0'
        self.unit_BytPerSec_physical_dimension_ref = ET.SubElement(unit_BytPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_BytPerSec_physical_dimension_ref.text = 'TiNeg1_3'
        unit_BytPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Byte = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Byte_short_name = ET.SubElement(unit_Byte, 'SHORT-NAME')
        unit_Byte_short_name.text = 'Byte'
        self.unit_Byte_long_name = ET.SubElement(unit_Byte, 'LONG-NAME')
        self.unit_Byte_l_4 = ET.SubElement(unit_Byte_long_name, 'L-4')
        unit_Byte_l_4.text = 'Byte'
        unit_Byte_l_4.attrib = {'L': 'EN'}
        self.unit_Byte_display_name = ET.SubElement(unit_Byte, 'DISPLAY-NAME')
        unit_Byte_display_name.text = 'Byte'
        self.unit_Byte_factor_si_to_unit = ET.SubElement(unit_Byte, 'FACTOR-SI-TO-UNIT')
        unit_Byte_factor_si_to_unit.text = '0.125'
        self.unit_Byte_offset_si_to_unit = ET.SubElement(unit_Byte, 'OFFSET-SI-TO-UNIT')
        unit_Byte_offset_si_to_unit.text = '0'
        self.unit_Byte_physical_dimension_ref = ET.SubElement(unit_Byte, 'PHYSICAL-DIMENSION-REF')
        unit_Byte_physical_dimension_ref.text = 'NoDimension_6'
        unit_Byte_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Cd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Cd_short_name = ET.SubElement(unit_Cd, 'SHORT-NAME')
        unit_Cd_short_name.text = 'Cd'
        self.unit_Cd_long_name = ET.SubElement(unit_Cd, 'LONG-NAME')
        self.unit_Cd_l_4 = ET.SubElement(unit_Cd_long_name, 'L-4')
        unit_Cd_l_4.text = 'Candela'
        unit_Cd_l_4.attrib = {'L': 'EN'}
        self.unit_Cd_display_name = ET.SubElement(unit_Cd, 'DISPLAY-NAME')
        unit_Cd_display_name.text = 'cd'
        self.unit_Cd_factor_si_to_unit = ET.SubElement(unit_Cd, 'FACTOR-SI-TO-UNIT')
        unit_Cd_factor_si_to_unit.text = '1'
        self.unit_Cd_offset_si_to_unit = ET.SubElement(unit_Cd, 'OFFSET-SI-TO-UNIT')
        unit_Cd_offset_si_to_unit.text = '0'
        self.unit_Cd_physical_dimension_ref = ET.SubElement(unit_Cd, 'PHYSICAL-DIMENSION-REF')
        unit_Cd_physical_dimension_ref.text = 'Illmn1'
        unit_Cd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_CentiMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_CentiMtr_short_name = ET.SubElement(unit_CentiMtr, 'SHORT-NAME')
        unit_CentiMtr_short_name.text = 'CentiMtr'
        self.unit_CentiMtr_long_name = ET.SubElement(unit_CentiMtr, 'LONG-NAME')
        self.unit_CentiMtr_l_4 = ET.SubElement(unit_CentiMtr_long_name, 'L-4')
        unit_CentiMtr_l_4.text = 'Centimeter'
        unit_CentiMtr_l_4.attrib = {'L': 'EN'}
        self.unit_CentiMtr_display_name = ET.SubElement(unit_CentiMtr, 'DISPLAY-NAME')
        unit_CentiMtr_display_name.text = 'cm'
        self.unit_CentiMtr_factor_si_to_unit = ET.SubElement(unit_CentiMtr, 'FACTOR-SI-TO-UNIT')
        unit_CentiMtr_factor_si_to_unit.text = '100'
        self.unit_CentiMtr_offset_si_to_unit = ET.SubElement(unit_CentiMtr, 'OFFSET-SI-TO-UNIT')
        unit_CentiMtr_offset_si_to_unit.text = '0'
        self.unit_CentiMtr_physical_dimension_ref = ET.SubElement(unit_CentiMtr, 'PHYSICAL-DIMENSION-REF')
        unit_CentiMtr_physical_dimension_ref.text = 'Len1'
        unit_CentiMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_CentiMtrSqd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_CentiMtrSqd_short_name = ET.SubElement(unit_CentiMtrSqd, 'SHORT-NAME')
        unit_CentiMtrSqd_short_name.text = 'CentiMtrSqd'
        self.unit_CentiMtrSqd_long_name = ET.SubElement(unit_CentiMtrSqd, 'LONG-NAME')
        self.unit_CentiMtrSqd_l_4 = ET.SubElement(unit_CentiMtrSqd_long_name, 'L-4')
        unit_CentiMtrSqd_l_4.text = 'Square Centimeter'
        unit_CentiMtrSqd_l_4.attrib = {'L': 'EN'}
        self.unit_CentiMtrSqd_display_name = ET.SubElement(unit_CentiMtrSqd, 'DISPLAY-NAME')
        unit_CentiMtrSqd_display_name.text = 'cm^2'
        self.unit_CentiMtrSqd_factor_si_to_unit = ET.SubElement(unit_CentiMtrSqd, 'FACTOR-SI-TO-UNIT')
        unit_CentiMtrSqd_factor_si_to_unit.text = '10000'
        self.unit_CentiMtrSqd_offset_si_to_unit = ET.SubElement(unit_CentiMtrSqd, 'OFFSET-SI-TO-UNIT')
        unit_CentiMtrSqd_offset_si_to_unit.text = '0'
        self.unit_CentiMtrSqd_physical_dimension_ref = ET.SubElement(unit_CentiMtrSqd, 'PHYSICAL-DIMENSION-REF')
        unit_CentiMtrSqd_physical_dimension_ref.text = 'Len2'
        unit_CentiMtrSqd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Coulomb = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Coulomb_short_name = ET.SubElement(unit_Coulomb, 'SHORT-NAME')
        unit_Coulomb_short_name.text = 'Coulomb'
        self.unit_Coulomb_long_name = ET.SubElement(unit_Coulomb, 'LONG-NAME')
        self.unit_Coulomb_l_4 = ET.SubElement(unit_Coulomb_long_name, 'L-4')
        unit_Coulomb_l_4.text = 'Coulomb'
        unit_Coulomb_l_4.attrib = {'L': 'EN'}
        self.unit_Coulomb_display_name = ET.SubElement(unit_Coulomb, 'DISPLAY-NAME')
        unit_Coulomb_display_name.text = 'C'
        self.unit_Coulomb_factor_si_to_unit = ET.SubElement(unit_Coulomb, 'FACTOR-SI-TO-UNIT')
        unit_Coulomb_factor_si_to_unit.text = '1'
        self.unit_Coulomb_offset_si_to_unit = ET.SubElement(unit_Coulomb, 'OFFSET-SI-TO-UNIT')
        unit_Coulomb_offset_si_to_unit.text = '0'
        self.unit_Coulomb_physical_dimension_ref = ET.SubElement(unit_Coulomb, 'PHYSICAL-DIMENSION-REF')
        unit_Coulomb_physical_dimension_ref.text = 'T1I1'
        unit_Coulomb_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Day = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Day_short_name = ET.SubElement(unit_Day, 'SHORT-NAME')
        unit_Day_short_name.text = 'Day'
        self.unit_Day_long_name = ET.SubElement(unit_Day, 'LONG-NAME')
        self.unit_Day_l_4 = ET.SubElement(unit_Day_long_name, 'L-4')
        unit_Day_l_4.text = 'Day'
        unit_Day_l_4.attrib = {'L': 'EN'}
        self.unit_Day_display_name = ET.SubElement(unit_Day, 'DISPLAY-NAME')
        unit_Day_display_name.text = 'd'
        self.unit_Day_factor_si_to_unit = ET.SubElement(unit_Day, 'FACTOR-SI-TO-UNIT')
        unit_Day_factor_si_to_unit.text = '1.15740740740741E-05'
        self.unit_Day_offset_si_to_unit = ET.SubElement(unit_Day, 'OFFSET-SI-TO-UNIT')
        unit_Day_offset_si_to_unit.text = '0'
        self.unit_Day_physical_dimension_ref = ET.SubElement(unit_Day, 'PHYSICAL-DIMENSION-REF')
        unit_Day_physical_dimension_ref.text = 'Ti1'
        unit_Day_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_DeciBel = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_DeciBel_short_name = ET.SubElement(unit_DeciBel, 'SHORT-NAME')
        unit_DeciBel_short_name.text = 'DeciBel'
        self.unit_DeciBel_long_name = ET.SubElement(unit_DeciBel, 'LONG-NAME')
        self.unit_DeciBel_l_4 = ET.SubElement(unit_DeciBel_long_name, 'L-4')
        unit_DeciBel_l_4.text = 'Decibel'
        unit_DeciBel_l_4.attrib = {'L': 'EN'}
        self.unit_DeciBel_display_name = ET.SubElement(unit_DeciBel, 'DISPLAY-NAME')
        unit_DeciBel_display_name.text = 'dB'
        self.unit_DeciBel_factor_si_to_unit = ET.SubElement(unit_DeciBel, 'FACTOR-SI-TO-UNIT')
        unit_DeciBel_factor_si_to_unit.text = '10'
        self.unit_DeciBel_offset_si_to_unit = ET.SubElement(unit_DeciBel, 'OFFSET-SI-TO-UNIT')
        unit_DeciBel_offset_si_to_unit.text = '0'
        self.unit_DeciBel_physical_dimension_ref = ET.SubElement(unit_DeciBel, 'PHYSICAL-DIMENSION-REF')
        unit_DeciBel_physical_dimension_ref.text = 'NoDimension_5'
        unit_DeciBel_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Deg = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Deg_short_name = ET.SubElement(unit_Deg, 'SHORT-NAME')
        unit_Deg_short_name.text = 'Deg'
        self.unit_Deg_long_name = ET.SubElement(unit_Deg, 'LONG-NAME')
        self.unit_Deg_l_4 = ET.SubElement(unit_Deg_long_name, 'L-4')
        unit_Deg_l_4.text = 'Degree'
        unit_Deg_l_4.attrib = {'L': 'EN'}
        self.unit_Deg_display_name = ET.SubElement(unit_Deg, 'DISPLAY-NAME')
        unit_Deg_display_name.text = '°'
        self.unit_Deg_factor_si_to_unit = ET.SubElement(unit_Deg, 'FACTOR-SI-TO-UNIT')
        unit_Deg_factor_si_to_unit.text = '360'
        self.unit_Deg_offset_si_to_unit = ET.SubElement(unit_Deg, 'OFFSET-SI-TO-UNIT')
        unit_Deg_offset_si_to_unit.text = '0'
        self.unit_Deg_physical_dimension_ref = ET.SubElement(unit_Deg, 'PHYSICAL-DIMENSION-REF')
        unit_Deg_physical_dimension_ref.text = 'NoDimension_2'
        unit_Deg_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_DegCgrd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_DegCgrd_short_name = ET.SubElement(unit_DegCgrd, 'SHORT-NAME')
        unit_DegCgrd_short_name.text = 'DegCgrd'
        self.unit_DegCgrd_long_name = ET.SubElement(unit_DegCgrd, 'LONG-NAME')
        self.unit_DegCgrd_l_4 = ET.SubElement(unit_DegCgrd_long_name, 'L-4')
        unit_DegCgrd_l_4.text = 'Degree Celsius (Absolute Temperature)'
        unit_DegCgrd_l_4.attrib = {'L': 'EN'}
        self.unit_DegCgrd_display_name = ET.SubElement(unit_DegCgrd, 'DISPLAY-NAME')
        unit_DegCgrd_display_name.text = '°C'
        self.unit_DegCgrd_factor_si_to_unit = ET.SubElement(unit_DegCgrd, 'FACTOR-SI-TO-UNIT')
        unit_DegCgrd_factor_si_to_unit.text = '1'
        self.unit_DegCgrd_offset_si_to_unit = ET.SubElement(unit_DegCgrd, 'OFFSET-SI-TO-UNIT')
        unit_DegCgrd_offset_si_to_unit.text = '-273.15'
        self.unit_DegCgrd_physical_dimension_ref = ET.SubElement(unit_DegCgrd, 'PHYSICAL-DIMENSION-REF')
        unit_DegCgrd_physical_dimension_ref.text = 'T1'
        unit_DegCgrd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_DegPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_DegPerSec_short_name = ET.SubElement(unit_DegPerSec, 'SHORT-NAME')
        unit_DegPerSec_short_name.text = 'DegPerSec'
        self.unit_DegPerSec_long_name = ET.SubElement(unit_DegPerSec, 'LONG-NAME')
        self.unit_DegPerSec_l_4 = ET.SubElement(unit_DegPerSec_long_name, 'L-4')
        unit_DegPerSec_l_4.text = 'Degree Per Sec'
        unit_DegPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_DegPerSec_display_name = ET.SubElement(unit_DegPerSec, 'DISPLAY-NAME')
        unit_DegPerSec_display_name.text = '°/s'
        self.unit_DegPerSec_factor_si_to_unit = ET.SubElement(unit_DegPerSec, 'FACTOR-SI-TO-UNIT')
        unit_DegPerSec_factor_si_to_unit.text = '360'
        self.unit_DegPerSec_offset_si_to_unit = ET.SubElement(unit_DegPerSec, 'OFFSET-SI-TO-UNIT')
        unit_DegPerSec_offset_si_to_unit.text = '0'
        self.unit_DegPerSec_physical_dimension_ref = ET.SubElement(unit_DegPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_DegPerSec_physical_dimension_ref.text = 'TiNeg1_2'
        unit_DegPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Frd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Frd_short_name = ET.SubElement(unit_Frd, 'SHORT-NAME')
        unit_Frd_short_name.text = 'Frd'
        self.unit_Frd_long_name = ET.SubElement(unit_Frd, 'LONG-NAME')
        self.unit_Frd_l_4 = ET.SubElement(unit_Frd_long_name, 'L-4')
        unit_Frd_l_4.text = 'Farad'
        unit_Frd_l_4.attrib = {'L': 'EN'}
        self.unit_Frd_display_name = ET.SubElement(unit_Frd, 'DISPLAY-NAME')
        unit_Frd_display_name.text = 'F'
        self.unit_Frd_factor_si_to_unit = ET.SubElement(unit_Frd, 'FACTOR-SI-TO-UNIT')
        unit_Frd_factor_si_to_unit.text = '1'
        self.unit_Frd_offset_si_to_unit = ET.SubElement(unit_Frd, 'OFFSET-SI-TO-UNIT')
        unit_Frd_offset_si_to_unit.text = '0'
        self.unit_Frd_physical_dimension_ref = ET.SubElement(unit_Frd, 'PHYSICAL-DIMENSION-REF')
        unit_Frd_physical_dimension_ref.text = 'LenNeg2MNeg1Ti4I2'
        unit_Frd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Gr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Gr_short_name = ET.SubElement(unit_Gr, 'SHORT-NAME')
        unit_Gr_short_name.text = 'Gr'
        self.unit_Gr_long_name = ET.SubElement(unit_Gr, 'LONG-NAME')
        self.unit_Gr_l_4 = ET.SubElement(unit_Gr_long_name, 'L-4')
        unit_Gr_l_4.text = 'Gram'
        unit_Gr_l_4.attrib = {'L': 'EN'}
        self.unit_Gr_display_name = ET.SubElement(unit_Gr, 'DISPLAY-NAME')
        unit_Gr_display_name.text = 'g'
        self.unit_Gr_factor_si_to_unit = ET.SubElement(unit_Gr, 'FACTOR-SI-TO-UNIT')
        unit_Gr_factor_si_to_unit.text = '1000'
        self.unit_Gr_offset_si_to_unit = ET.SubElement(unit_Gr, 'OFFSET-SI-TO-UNIT')
        unit_Gr_offset_si_to_unit.text = '0'
        self.unit_Gr_physical_dimension_ref = ET.SubElement(unit_Gr, 'PHYSICAL-DIMENSION-REF')
        unit_Gr_physical_dimension_ref.text = 'M1'
        unit_Gr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_GrPerLtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_GrPerLtr_short_name = ET.SubElement(unit_GrPerLtr, 'SHORT-NAME')
        unit_GrPerLtr_short_name.text = 'GrPerLtr'
        self.unit_GrPerLtr_long_name = ET.SubElement(unit_GrPerLtr, 'LONG-NAME')
        self.unit_GrPerLtr_l_4 = ET.SubElement(unit_GrPerLtr_long_name, 'L-4')
        unit_GrPerLtr_l_4.text = 'Gram Per Liter'
        unit_GrPerLtr_l_4.attrib = {'L': 'EN'}
        self.unit_GrPerLtr_display_name = ET.SubElement(unit_GrPerLtr, 'DISPLAY-NAME')
        unit_GrPerLtr_display_name.text = 'g/l'
        self.unit_GrPerLtr_factor_si_to_unit = ET.SubElement(unit_GrPerLtr, 'FACTOR-SI-TO-UNIT')
        unit_GrPerLtr_factor_si_to_unit.text = '1'
        self.unit_GrPerLtr_offset_si_to_unit = ET.SubElement(unit_GrPerLtr, 'OFFSET-SI-TO-UNIT')
        unit_GrPerLtr_offset_si_to_unit.text = '0'
        self.unit_GrPerLtr_physical_dimension_ref = ET.SubElement(unit_GrPerLtr, 'PHYSICAL-DIMENSION-REF')
        unit_GrPerLtr_physical_dimension_ref.text = 'LenNeg3M1'
        unit_GrPerLtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_GrPerMol = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_GrPerMol_short_name = ET.SubElement(unit_GrPerMol, 'SHORT-NAME')
        unit_GrPerMol_short_name.text = 'GrPerMol'
        self.unit_GrPerMol_long_name = ET.SubElement(unit_GrPerMol, 'LONG-NAME')
        self.unit_GrPerMol_l_4 = ET.SubElement(unit_GrPerMol_long_name, 'L-4')
        unit_GrPerMol_l_4.text = 'Gram Per Mole'
        unit_GrPerMol_l_4.attrib = {'L': 'EN'}
        self.unit_GrPerMol_display_name = ET.SubElement(unit_GrPerMol, 'DISPLAY-NAME')
        unit_GrPerMol_display_name.text = 'g/mol'
        self.unit_GrPerMol_factor_si_to_unit = ET.SubElement(unit_GrPerMol, 'FACTOR-SI-TO-UNIT')
        unit_GrPerMol_factor_si_to_unit.text = '1000'
        self.unit_GrPerMol_offset_si_to_unit = ET.SubElement(unit_GrPerMol, 'OFFSET-SI-TO-UNIT')
        unit_GrPerMol_offset_si_to_unit.text = '0'
        self.unit_GrPerMol_physical_dimension_ref = ET.SubElement(unit_GrPerMol, 'PHYSICAL-DIMENSION-REF')
        unit_GrPerMol_physical_dimension_ref.text = 'M1AmntNeg1'
        unit_GrPerMol_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_GrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_GrPerSec_short_name = ET.SubElement(unit_GrPerSec, 'SHORT-NAME')
        unit_GrPerSec_short_name.text = 'GrPerSec'
        self.unit_GrPerSec_long_name = ET.SubElement(unit_GrPerSec, 'LONG-NAME')
        self.unit_GrPerSec_l_4 = ET.SubElement(unit_GrPerSec_long_name, 'L-4')
        unit_GrPerSec_l_4.text = 'Gram Per Second'
        unit_GrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_GrPerSec_display_name = ET.SubElement(unit_GrPerSec, 'DISPLAY-NAME')
        unit_GrPerSec_display_name.text = 'g/s'
        self.unit_GrPerSec_factor_si_to_unit = ET.SubElement(unit_GrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_GrPerSec_factor_si_to_unit.text = '1000'
        self.unit_GrPerSec_offset_si_to_unit = ET.SubElement(unit_GrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_GrPerSec_offset_si_to_unit.text = '0'
        self.unit_GrPerSec_physical_dimension_ref = ET.SubElement(unit_GrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_GrPerSec_physical_dimension_ref.text = 'M1TiNeg1'
        unit_GrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_HectoPa = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_HectoPa_short_name = ET.SubElement(unit_HectoPa, 'SHORT-NAME')
        unit_HectoPa_short_name.text = 'HectoPa'
        self.unit_HectoPa_long_name = ET.SubElement(unit_HectoPa, 'LONG-NAME')
        self.unit_HectoPa_l_4 = ET.SubElement(unit_HectoPa_long_name, 'L-4')
        unit_HectoPa_l_4.text = 'Hectopascal'
        unit_HectoPa_l_4.attrib = {'L': 'EN'}
        self.unit_HectoPa_display_name = ET.SubElement(unit_HectoPa, 'DISPLAY-NAME')
        unit_HectoPa_display_name.text = 'hPa'
        self.unit_HectoPa_factor_si_to_unit = ET.SubElement(unit_HectoPa, 'FACTOR-SI-TO-UNIT')
        unit_HectoPa_factor_si_to_unit.text = '0.01'
        self.unit_HectoPa_offset_si_to_unit = ET.SubElement(unit_HectoPa, 'OFFSET-SI-TO-UNIT')
        unit_HectoPa_offset_si_to_unit.text = '0'
        self.unit_HectoPa_physical_dimension_ref = ET.SubElement(unit_HectoPa, 'PHYSICAL-DIMENSION-REF')
        unit_HectoPa_physical_dimension_ref.text = 'LenNeg1M1TiNeg2'
        unit_HectoPa_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_HectoPaPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_HectoPaPerSec_short_name = ET.SubElement(unit_HectoPaPerSec, 'SHORT-NAME')
        unit_HectoPaPerSec_short_name.text = 'HectoPaPerSec'
        self.unit_HectoPaPerSec_long_name = ET.SubElement(unit_HectoPaPerSec, 'LONG-NAME')
        self.unit_HectoPaPerSec_l_4 = ET.SubElement(unit_HectoPaPerSec_long_name, 'L-4')
        unit_HectoPaPerSec_l_4.text = 'Hectopascal Per Second'
        unit_HectoPaPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_HectoPaPerSec_display_name = ET.SubElement(unit_HectoPaPerSec, 'DISPLAY-NAME')
        unit_HectoPaPerSec_display_name.text = 'hPa/s'
        self.unit_HectoPaPerSec_factor_si_to_unit = ET.SubElement(unit_HectoPaPerSec, 'FACTOR-SI-TO-UNIT')
        unit_HectoPaPerSec_factor_si_to_unit.text = '0.01'
        self.unit_HectoPaPerSec_offset_si_to_unit = ET.SubElement(unit_HectoPaPerSec, 'OFFSET-SI-TO-UNIT')
        unit_HectoPaPerSec_offset_si_to_unit.text = '0'
        self.unit_HectoPaPerSec_physical_dimension_ref = ET.SubElement(unit_HectoPaPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_HectoPaPerSec_physical_dimension_ref.text = 'LenNeg1M1TiNeg3'
        unit_HectoPaPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_HectoPaPerVolt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_HectoPaPerVolt_short_name = ET.SubElement(unit_HectoPaPerVolt, 'SHORT-NAME')
        unit_HectoPaPerVolt_short_name.text = 'HectoPaPerVolt'
        self.unit_HectoPaPerVolt_long_name = ET.SubElement(unit_HectoPaPerVolt, 'LONG-NAME')
        self.unit_HectoPaPerVolt_l_4 = ET.SubElement(unit_HectoPaPerVolt_long_name, 'L-4')
        unit_HectoPaPerVolt_l_4.text = 'Hectopascal Per Volt'
        unit_HectoPaPerVolt_l_4.attrib = {'L': 'EN'}
        self.unit_HectoPaPerVolt_display_name = ET.SubElement(unit_HectoPaPerVolt, 'DISPLAY-NAME')
        unit_HectoPaPerVolt_display_name.text = 'hPa/V'
        self.unit_HectoPaPerVolt_factor_si_to_unit = ET.SubElement(unit_HectoPaPerVolt, 'FACTOR-SI-TO-UNIT')
        unit_HectoPaPerVolt_factor_si_to_unit.text = '0.01'
        self.unit_HectoPaPerVolt_offset_si_to_unit = ET.SubElement(unit_HectoPaPerVolt, 'OFFSET-SI-TO-UNIT')
        unit_HectoPaPerVolt_offset_si_to_unit.text = '0'
        self.unit_HectoPaPerVolt_physical_dimension_ref = ET.SubElement(unit_HectoPaPerVolt, 'PHYSICAL-DIMENSION-REF')
        unit_HectoPaPerVolt_physical_dimension_ref.text = 'LenNeg3Ti1I1_1'
        unit_HectoPaPerVolt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_HectoPaSecPerMtrCubd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_HectoPaSecPerMtrCubd_short_name = ET.SubElement(unit_HectoPaSecPerMtrCubd, 'SHORT-NAME')
        unit_HectoPaSecPerMtrCubd_short_name.text = 'HectoPaSecPerMtrCubd'
        self.unit_HectoPaSecPerMtrCubd_long_name = ET.SubElement(unit_HectoPaSecPerMtrCubd, 'LONG-NAME')
        self.unit_HectoPaSecPerMtrCubd_l_4 = ET.SubElement(unit_HectoPaSecPerMtrCubd_long_name, 'L-4')
        unit_HectoPaSecPerMtrCubd_l_4.text = 'Hectopascal Per Cubic Meter Per Second'
        unit_HectoPaSecPerMtrCubd_l_4.attrib = {'L': 'EN'}
        self.unit_HectoPaSecPerMtrCubd_display_name = ET.SubElement(unit_HectoPaSecPerMtrCubd, 'DISPLAY-NAME')
        unit_HectoPaSecPerMtrCubd_display_name.text = 'hPa/((m^3)/s)'
        self.unit_HectoPaSecPerMtrCubd_factor_si_to_unit = ET.SubElement(unit_HectoPaSecPerMtrCubd, 'FACTOR-SI-TO-UNIT')
        unit_HectoPaSecPerMtrCubd_factor_si_to_unit.text = '0.01'
        self.unit_HectoPaSecPerMtrCubd_offset_si_to_unit = ET.SubElement(unit_HectoPaSecPerMtrCubd, 'OFFSET-SI-TO-UNIT')
        unit_HectoPaSecPerMtrCubd_offset_si_to_unit.text = '0'
        self.unit_HectoPaSecPerMtrCubd_physical_dimension_ref = ET.SubElement(unit_HectoPaSecPerMtrCubd, 'PHYSICAL-DIMENSION-REF')
        unit_HectoPaSecPerMtrCubd_physical_dimension_ref.text = 'LenNeg4M1TiNeg1'
        unit_HectoPaSecPerMtrCubd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Henry = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Henry_short_name = ET.SubElement(unit_Henry, 'SHORT-NAME')
        unit_Henry_short_name.text = 'Henry'
        self.unit_Henry_long_name = ET.SubElement(unit_Henry, 'LONG-NAME')
        self.unit_Henry_l_4 = ET.SubElement(unit_Henry_long_name, 'L-4')
        unit_Henry_l_4.text = 'Henry'
        unit_Henry_l_4.attrib = {'L': 'EN'}
        self.unit_Henry_display_name = ET.SubElement(unit_Henry, 'DISPLAY-NAME')
        unit_Henry_display_name.text = 'H'
        self.unit_Henry_factor_si_to_unit = ET.SubElement(unit_Henry, 'FACTOR-SI-TO-UNIT')
        unit_Henry_factor_si_to_unit.text = '1'
        self.unit_Henry_offset_si_to_unit = ET.SubElement(unit_Henry, 'OFFSET-SI-TO-UNIT')
        unit_Henry_offset_si_to_unit.text = '0'
        self.unit_Henry_physical_dimension_ref = ET.SubElement(unit_Henry, 'PHYSICAL-DIMENSION-REF')
        unit_Henry_physical_dimension_ref.text = 'Len2M1TiNeg2INeg2'
        unit_Henry_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_HenryPerMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_HenryPerMtr_short_name = ET.SubElement(unit_HenryPerMtr, 'SHORT-NAME')
        unit_HenryPerMtr_short_name.text = 'HenryPerMtr'
        self.unit_HenryPerMtr_long_name = ET.SubElement(unit_HenryPerMtr, 'LONG-NAME')
        self.unit_HenryPerMtr_l_4 = ET.SubElement(unit_HenryPerMtr_long_name, 'L-4')
        unit_HenryPerMtr_l_4.text = 'Henry Per Meter'
        unit_HenryPerMtr_l_4.attrib = {'L': 'EN'}
        self.unit_HenryPerMtr_display_name = ET.SubElement(unit_HenryPerMtr, 'DISPLAY-NAME')
        unit_HenryPerMtr_display_name.text = 'H/m'
        self.unit_HenryPerMtr_factor_si_to_unit = ET.SubElement(unit_HenryPerMtr, 'FACTOR-SI-TO-UNIT')
        unit_HenryPerMtr_factor_si_to_unit.text = '1'
        self.unit_HenryPerMtr_offset_si_to_unit = ET.SubElement(unit_HenryPerMtr, 'OFFSET-SI-TO-UNIT')
        unit_HenryPerMtr_offset_si_to_unit.text = '0'
        self.unit_HenryPerMtr_physical_dimension_ref = ET.SubElement(unit_HenryPerMtr, 'PHYSICAL-DIMENSION-REF')
        unit_HenryPerMtr_physical_dimension_ref.text = 'Len1M1TiNeg2INeg2'
        unit_HenryPerMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Hr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Hr_short_name = ET.SubElement(unit_Hr, 'SHORT-NAME')
        unit_Hr_short_name.text = 'Hr'
        self.unit_Hr_long_name = ET.SubElement(unit_Hr, 'LONG-NAME')
        self.unit_Hr_l_4 = ET.SubElement(unit_Hr_long_name, 'L-4')
        unit_Hr_l_4.text = 'Hour'
        unit_Hr_l_4.attrib = {'L': 'EN'}
        self.unit_Hr_display_name = ET.SubElement(unit_Hr, 'DISPLAY-NAME')
        unit_Hr_display_name.text = 'h'
        self.unit_Hr_factor_si_to_unit = ET.SubElement(unit_Hr, 'FACTOR-SI-TO-UNIT')
        unit_Hr_factor_si_to_unit.text = '0.000277777777777778'
        self.unit_Hr_offset_si_to_unit = ET.SubElement(unit_Hr, 'OFFSET-SI-TO-UNIT')
        unit_Hr_offset_si_to_unit.text = '0'
        self.unit_Hr_physical_dimension_ref = ET.SubElement(unit_Hr, 'PHYSICAL-DIMENSION-REF')
        unit_Hr_physical_dimension_ref.text = 'Ti1'
        unit_Hr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Hz = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Hz_short_name = ET.SubElement(unit_Hz, 'SHORT-NAME')
        unit_Hz_short_name.text = 'Hz'
        self.unit_Hz_long_name = ET.SubElement(unit_Hz, 'LONG-NAME')
        self.unit_Hz_l_4 = ET.SubElement(unit_Hz_long_name, 'L-4')
        unit_Hz_l_4.text = 'Hertz'
        unit_Hz_l_4.attrib = {'L': 'EN'}
        self.unit_Hz_display_name = ET.SubElement(unit_Hz, 'DISPLAY-NAME')
        unit_Hz_display_name.text = 'Hz'
        self.unit_Hz_factor_si_to_unit = ET.SubElement(unit_Hz, 'FACTOR-SI-TO-UNIT')
        unit_Hz_factor_si_to_unit.text = '1'
        self.unit_Hz_offset_si_to_unit = ET.SubElement(unit_Hz, 'OFFSET-SI-TO-UNIT')
        unit_Hz_offset_si_to_unit.text = '0'
        self.unit_Hz_physical_dimension_ref = ET.SubElement(unit_Hz, 'PHYSICAL-DIMENSION-REF')
        unit_Hz_physical_dimension_ref.text = 'TiNeg1'
        unit_Hz_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Jou = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Jou_short_name = ET.SubElement(unit_Jou, 'SHORT-NAME')
        unit_Jou_short_name.text = 'Jou'
        self.unit_Jou_long_name = ET.SubElement(unit_Jou, 'LONG-NAME')
        self.unit_Jou_l_4 = ET.SubElement(unit_Jou_long_name, 'L-4')
        unit_Jou_l_4.text = 'Joule'
        unit_Jou_l_4.attrib = {'L': 'EN'}
        self.unit_Jou_display_name = ET.SubElement(unit_Jou, 'DISPLAY-NAME')
        unit_Jou_display_name.text = 'J'
        self.unit_Jou_factor_si_to_unit = ET.SubElement(unit_Jou, 'FACTOR-SI-TO-UNIT')
        unit_Jou_factor_si_to_unit.text = '1'
        self.unit_Jou_offset_si_to_unit = ET.SubElement(unit_Jou, 'OFFSET-SI-TO-UNIT')
        unit_Jou_offset_si_to_unit.text = '0'
        self.unit_Jou_physical_dimension_ref = ET.SubElement(unit_Jou, 'PHYSICAL-DIMENSION-REF')
        unit_Jou_physical_dimension_ref.text = 'Len2M1TiNeg2_1'
        unit_Jou_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_JouPerKelvin = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_JouPerKelvin_short_name = ET.SubElement(unit_JouPerKelvin, 'SHORT-NAME')
        unit_JouPerKelvin_short_name.text = 'JouPerKelvin'
        self.unit_JouPerKelvin_long_name = ET.SubElement(unit_JouPerKelvin, 'LONG-NAME')
        self.unit_JouPerKelvin_l_4 = ET.SubElement(unit_JouPerKelvin_long_name, 'L-4')
        unit_JouPerKelvin_l_4.text = 'Joule Per Kelvin'
        unit_JouPerKelvin_l_4.attrib = {'L': 'EN'}
        self.unit_JouPerKelvin_display_name = ET.SubElement(unit_JouPerKelvin, 'DISPLAY-NAME')
        unit_JouPerKelvin_display_name.text = 'J/K'
        self.unit_JouPerKelvin_factor_si_to_unit = ET.SubElement(unit_JouPerKelvin, 'FACTOR-SI-TO-UNIT')
        unit_JouPerKelvin_factor_si_to_unit.text = '1'
        self.unit_JouPerKelvin_offset_si_to_unit = ET.SubElement(unit_JouPerKelvin, 'OFFSET-SI-TO-UNIT')
        unit_JouPerKelvin_offset_si_to_unit.text = '0'
        self.unit_JouPerKelvin_physical_dimension_ref = ET.SubElement(unit_JouPerKelvin, 'PHYSICAL-DIMENSION-REF')
        unit_JouPerKelvin_physical_dimension_ref.text = 'Len2M1TiNeg2TNeg1'
        unit_JouPerKelvin_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_JouPerKiloGr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_JouPerKiloGr_short_name = ET.SubElement(unit_JouPerKiloGr, 'SHORT-NAME')
        unit_JouPerKiloGr_short_name.text = 'JouPerKiloGr'
        self.unit_JouPerKiloGr_long_name = ET.SubElement(unit_JouPerKiloGr, 'LONG-NAME')
        self.unit_JouPerKiloGr_l_4 = ET.SubElement(unit_JouPerKiloGr_long_name, 'L-4')
        unit_JouPerKiloGr_l_4.text = 'Joule Per Kilogram'
        unit_JouPerKiloGr_l_4.attrib = {'L': 'EN'}
        self.unit_JouPerKiloGr_display_name = ET.SubElement(unit_JouPerKiloGr, 'DISPLAY-NAME')
        unit_JouPerKiloGr_display_name.text = 'J/kg'
        self.unit_JouPerKiloGr_factor_si_to_unit = ET.SubElement(unit_JouPerKiloGr, 'FACTOR-SI-TO-UNIT')
        unit_JouPerKiloGr_factor_si_to_unit.text = '1'
        self.unit_JouPerKiloGr_offset_si_to_unit = ET.SubElement(unit_JouPerKiloGr, 'OFFSET-SI-TO-UNIT')
        unit_JouPerKiloGr_offset_si_to_unit.text = '0'
        self.unit_JouPerKiloGr_physical_dimension_ref = ET.SubElement(unit_JouPerKiloGr, 'PHYSICAL-DIMENSION-REF')
        unit_JouPerKiloGr_physical_dimension_ref.text = 'Len2TiNeg2'
        unit_JouPerKiloGr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_JouPerKiloGrPerKelvin = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_JouPerKiloGrPerKelvin_short_name = ET.SubElement(unit_JouPerKiloGrPerKelvin, 'SHORT-NAME')
        unit_JouPerKiloGrPerKelvin_short_name.text = 'JouPerKiloGrPerKelvin'
        self.unit_JouPerKiloGrPerKelvin_long_name = ET.SubElement(unit_JouPerKiloGrPerKelvin, 'LONG-NAME')
        self.unit_JouPerKiloGrPerKelvin_l_4 = ET.SubElement(unit_JouPerKiloGrPerKelvin_long_name, 'L-4')
        unit_JouPerKiloGrPerKelvin_l_4.text = 'Joule Per Kilogram Per Kelvin'
        unit_JouPerKiloGrPerKelvin_l_4.attrib = {'L': 'EN'}
        self.unit_JouPerKiloGrPerKelvin_display_name = ET.SubElement(unit_JouPerKiloGrPerKelvin, 'DISPLAY-NAME')
        unit_JouPerKiloGrPerKelvin_display_name.text = 'J/(kg*K)'
        self.unit_JouPerKiloGrPerKelvin_factor_si_to_unit = ET.SubElement(unit_JouPerKiloGrPerKelvin, 'FACTOR-SI-TO-UNIT')
        unit_JouPerKiloGrPerKelvin_factor_si_to_unit.text = '1'
        self.unit_JouPerKiloGrPerKelvin_offset_si_to_unit = ET.SubElement(unit_JouPerKiloGrPerKelvin, 'OFFSET-SI-TO-UNIT')
        unit_JouPerKiloGrPerKelvin_offset_si_to_unit.text = '0'
        self.unit_JouPerKiloGrPerKelvin_physical_dimension_ref = ET.SubElement(unit_JouPerKiloGrPerKelvin, 'PHYSICAL-DIMENSION-REF')
        unit_JouPerKiloGrPerKelvin_physical_dimension_ref.text = 'Len2TiNeg2TNeg1'
        unit_JouPerKiloGrPerKelvin_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_JouPerMol = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_JouPerMol_short_name = ET.SubElement(unit_JouPerMol, 'SHORT-NAME')
        unit_JouPerMol_short_name.text = 'JouPerMol'
        self.unit_JouPerMol_long_name = ET.SubElement(unit_JouPerMol, 'LONG-NAME')
        self.unit_JouPerMol_l_4 = ET.SubElement(unit_JouPerMol_long_name, 'L-4')
        unit_JouPerMol_l_4.text = 'Joule Per Mole'
        unit_JouPerMol_l_4.attrib = {'L': 'EN'}
        self.unit_JouPerMol_display_name = ET.SubElement(unit_JouPerMol, 'DISPLAY-NAME')
        unit_JouPerMol_display_name.text = 'J/mol'
        self.unit_JouPerMol_factor_si_to_unit = ET.SubElement(unit_JouPerMol, 'FACTOR-SI-TO-UNIT')
        unit_JouPerMol_factor_si_to_unit.text = '1'
        self.unit_JouPerMol_offset_si_to_unit = ET.SubElement(unit_JouPerMol, 'OFFSET-SI-TO-UNIT')
        unit_JouPerMol_offset_si_to_unit.text = '0'
        self.unit_JouPerMol_physical_dimension_ref = ET.SubElement(unit_JouPerMol, 'PHYSICAL-DIMENSION-REF')
        unit_JouPerMol_physical_dimension_ref.text = 'Len2M1TiNeg2AmntNeg1'
        unit_JouPerMol_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_JouPerMolPerKelvin = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_JouPerMolPerKelvin_short_name = ET.SubElement(unit_JouPerMolPerKelvin, 'SHORT-NAME')
        unit_JouPerMolPerKelvin_short_name.text = 'JouPerMolPerKelvin'
        self.unit_JouPerMolPerKelvin_long_name = ET.SubElement(unit_JouPerMolPerKelvin, 'LONG-NAME')
        self.unit_JouPerMolPerKelvin_l_4 = ET.SubElement(unit_JouPerMolPerKelvin_long_name, 'L-4')
        unit_JouPerMolPerKelvin_l_4.text = 'Joule Per Mole Per Kelvin'
        unit_JouPerMolPerKelvin_l_4.attrib = {'L': 'EN'}
        self.unit_JouPerMolPerKelvin_display_name = ET.SubElement(unit_JouPerMolPerKelvin, 'DISPLAY-NAME')
        unit_JouPerMolPerKelvin_display_name.text = 'J/(mol*K)'
        self.unit_JouPerMolPerKelvin_factor_si_to_unit = ET.SubElement(unit_JouPerMolPerKelvin, 'FACTOR-SI-TO-UNIT')
        unit_JouPerMolPerKelvin_factor_si_to_unit.text = '1'
        self.unit_JouPerMolPerKelvin_offset_si_to_unit = ET.SubElement(unit_JouPerMolPerKelvin, 'OFFSET-SI-TO-UNIT')
        unit_JouPerMolPerKelvin_offset_si_to_unit.text = '0'
        self.unit_JouPerMolPerKelvin_physical_dimension_ref = ET.SubElement(unit_JouPerMolPerKelvin, 'PHYSICAL-DIMENSION-REF')
        unit_JouPerMolPerKelvin_physical_dimension_ref.text = 'Len2M1TiNeg2TNeg1AmntNeg1'
        unit_JouPerMolPerKelvin_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Kat = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Kat_short_name = ET.SubElement(unit_Kat, 'SHORT-NAME')
        unit_Kat_short_name.text = 'Kat'
        self.unit_Kat_long_name = ET.SubElement(unit_Kat, 'LONG-NAME')
        self.unit_Kat_l_4 = ET.SubElement(unit_Kat_long_name, 'L-4')
        unit_Kat_l_4.text = 'Katal'
        unit_Kat_l_4.attrib = {'L': 'EN'}
        self.unit_Kat_display_name = ET.SubElement(unit_Kat, 'DISPLAY-NAME')
        unit_Kat_display_name.text = 'kat'
        self.unit_Kat_factor_si_to_unit = ET.SubElement(unit_Kat, 'FACTOR-SI-TO-UNIT')
        unit_Kat_factor_si_to_unit.text = '1'
        self.unit_Kat_offset_si_to_unit = ET.SubElement(unit_Kat, 'OFFSET-SI-TO-UNIT')
        unit_Kat_offset_si_to_unit.text = '0'
        self.unit_Kat_physical_dimension_ref = ET.SubElement(unit_Kat, 'PHYSICAL-DIMENSION-REF')
        unit_Kat_physical_dimension_ref.text = 'TiNeg1Amnt1'
        unit_Kat_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KelvinAbslt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KelvinAbslt_short_name = ET.SubElement(unit_KelvinAbslt, 'SHORT-NAME')
        unit_KelvinAbslt_short_name.text = 'KelvinAbslt'
        self.unit_KelvinAbslt_long_name = ET.SubElement(unit_KelvinAbslt, 'LONG-NAME')
        self.unit_KelvinAbslt_l_4 = ET.SubElement(unit_KelvinAbslt_long_name, 'L-4')
        unit_KelvinAbslt_l_4.text = 'Kelvin (Absolute Temperature)'
        unit_KelvinAbslt_l_4.attrib = {'L': 'EN'}
        self.unit_KelvinAbslt_display_name = ET.SubElement(unit_KelvinAbslt, 'DISPLAY-NAME')
        unit_KelvinAbslt_display_name.text = 'K'
        self.unit_KelvinAbslt_factor_si_to_unit = ET.SubElement(unit_KelvinAbslt, 'FACTOR-SI-TO-UNIT')
        unit_KelvinAbslt_factor_si_to_unit.text = '1'
        self.unit_KelvinAbslt_offset_si_to_unit = ET.SubElement(unit_KelvinAbslt, 'OFFSET-SI-TO-UNIT')
        unit_KelvinAbslt_offset_si_to_unit.text = '0'
        self.unit_KelvinAbslt_physical_dimension_ref = ET.SubElement(unit_KelvinAbslt, 'PHYSICAL-DIMENSION-REF')
        unit_KelvinAbslt_physical_dimension_ref.text = 'T1'
        unit_KelvinAbslt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KelvinPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KelvinPerSec_short_name = ET.SubElement(unit_KelvinPerSec, 'SHORT-NAME')
        unit_KelvinPerSec_short_name.text = 'KelvinPerSec'
        self.unit_KelvinPerSec_long_name = ET.SubElement(unit_KelvinPerSec, 'LONG-NAME')
        self.unit_KelvinPerSec_l_4 = ET.SubElement(unit_KelvinPerSec_long_name, 'L-4')
        unit_KelvinPerSec_l_4.text = 'Kelvin Per Second'
        unit_KelvinPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_KelvinPerSec_display_name = ET.SubElement(unit_KelvinPerSec, 'DISPLAY-NAME')
        unit_KelvinPerSec_display_name.text = 'K/s'
        self.unit_KelvinPerSec_factor_si_to_unit = ET.SubElement(unit_KelvinPerSec, 'FACTOR-SI-TO-UNIT')
        unit_KelvinPerSec_factor_si_to_unit.text = '1'
        self.unit_KelvinPerSec_offset_si_to_unit = ET.SubElement(unit_KelvinPerSec, 'OFFSET-SI-TO-UNIT')
        unit_KelvinPerSec_offset_si_to_unit.text = '0'
        self.unit_KelvinPerSec_physical_dimension_ref = ET.SubElement(unit_KelvinPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_KelvinPerSec_physical_dimension_ref.text = 'TiNeg1T1'
        unit_KelvinPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KelvinRel = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KelvinRel_short_name = ET.SubElement(unit_KelvinRel, 'SHORT-NAME')
        unit_KelvinRel_short_name.text = 'KelvinRel'
        self.unit_KelvinRel_long_name = ET.SubElement(unit_KelvinRel, 'LONG-NAME')
        self.unit_KelvinRel_l_4 = ET.SubElement(unit_KelvinRel_long_name, 'L-4')
        unit_KelvinRel_l_4.text = 'Kelvin (Relative Temperature, Temperature Difference)'
        unit_KelvinRel_l_4.attrib = {'L': 'EN'}
        self.unit_KelvinRel_display_name = ET.SubElement(unit_KelvinRel, 'DISPLAY-NAME')
        unit_KelvinRel_display_name.text = 'K'
        self.unit_KelvinRel_factor_si_to_unit = ET.SubElement(unit_KelvinRel, 'FACTOR-SI-TO-UNIT')
        unit_KelvinRel_factor_si_to_unit.text = '1'
        self.unit_KelvinRel_offset_si_to_unit = ET.SubElement(unit_KelvinRel, 'OFFSET-SI-TO-UNIT')
        unit_KelvinRel_offset_si_to_unit.text = '0'
        self.unit_KelvinRel_physical_dimension_ref = ET.SubElement(unit_KelvinRel, 'PHYSICAL-DIMENSION-REF')
        unit_KelvinRel_physical_dimension_ref.text = 'T1_1'
        unit_KelvinRel_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloBitPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloBitPerSec_short_name = ET.SubElement(unit_KiloBitPerSec, 'SHORT-NAME')
        unit_KiloBitPerSec_short_name.text = 'KiloBitPerSec'
        self.unit_KiloBitPerSec_long_name = ET.SubElement(unit_KiloBitPerSec, 'LONG-NAME')
        self.unit_KiloBitPerSec_l_4 = ET.SubElement(unit_KiloBitPerSec_long_name, 'L-4')
        unit_KiloBitPerSec_l_4.text = 'Kilobit Per Second'
        unit_KiloBitPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_KiloBitPerSec_display_name = ET.SubElement(unit_KiloBitPerSec, 'DISPLAY-NAME')
        unit_KiloBitPerSec_display_name.text = 'kbit/s'
        self.unit_KiloBitPerSec_factor_si_to_unit = ET.SubElement(unit_KiloBitPerSec, 'FACTOR-SI-TO-UNIT')
        unit_KiloBitPerSec_factor_si_to_unit.text = '0.001'
        self.unit_KiloBitPerSec_offset_si_to_unit = ET.SubElement(unit_KiloBitPerSec, 'OFFSET-SI-TO-UNIT')
        unit_KiloBitPerSec_offset_si_to_unit.text = '0'
        self.unit_KiloBitPerSec_physical_dimension_ref = ET.SubElement(unit_KiloBitPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_KiloBitPerSec_physical_dimension_ref.text = 'TiNeg1_3'
        unit_KiloBitPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloGr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloGr_short_name = ET.SubElement(unit_KiloGr, 'SHORT-NAME')
        unit_KiloGr_short_name.text = 'KiloGr'
        self.unit_KiloGr_long_name = ET.SubElement(unit_KiloGr, 'LONG-NAME')
        self.unit_KiloGr_l_4 = ET.SubElement(unit_KiloGr_long_name, 'L-4')
        unit_KiloGr_l_4.text = 'Kilogram'
        unit_KiloGr_l_4.attrib = {'L': 'EN'}
        self.unit_KiloGr_display_name = ET.SubElement(unit_KiloGr, 'DISPLAY-NAME')
        unit_KiloGr_display_name.text = 'kg'
        self.unit_KiloGr_factor_si_to_unit = ET.SubElement(unit_KiloGr, 'FACTOR-SI-TO-UNIT')
        unit_KiloGr_factor_si_to_unit.text = '1'
        self.unit_KiloGr_offset_si_to_unit = ET.SubElement(unit_KiloGr, 'OFFSET-SI-TO-UNIT')
        unit_KiloGr_offset_si_to_unit.text = '0'
        self.unit_KiloGr_physical_dimension_ref = ET.SubElement(unit_KiloGr, 'PHYSICAL-DIMENSION-REF')
        unit_KiloGr_physical_dimension_ref.text = 'M1'
        unit_KiloGr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloGrPerHr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloGrPerHr_short_name = ET.SubElement(unit_KiloGrPerHr, 'SHORT-NAME')
        unit_KiloGrPerHr_short_name.text = 'KiloGrPerHr'
        self.unit_KiloGrPerHr_long_name = ET.SubElement(unit_KiloGrPerHr, 'LONG-NAME')
        self.unit_KiloGrPerHr_l_4 = ET.SubElement(unit_KiloGrPerHr_long_name, 'L-4')
        unit_KiloGrPerHr_l_4.text = 'Kilogram Per Hour'
        unit_KiloGrPerHr_l_4.attrib = {'L': 'EN'}
        self.unit_KiloGrPerHr_display_name = ET.SubElement(unit_KiloGrPerHr, 'DISPLAY-NAME')
        unit_KiloGrPerHr_display_name.text = 'kg/h'
        self.unit_KiloGrPerHr_factor_si_to_unit = ET.SubElement(unit_KiloGrPerHr, 'FACTOR-SI-TO-UNIT')
        unit_KiloGrPerHr_factor_si_to_unit.text = '3600'
        self.unit_KiloGrPerHr_offset_si_to_unit = ET.SubElement(unit_KiloGrPerHr, 'OFFSET-SI-TO-UNIT')
        unit_KiloGrPerHr_offset_si_to_unit.text = '0'
        self.unit_KiloGrPerHr_physical_dimension_ref = ET.SubElement(unit_KiloGrPerHr, 'PHYSICAL-DIMENSION-REF')
        unit_KiloGrPerHr_physical_dimension_ref.text = 'M1TiNeg1'
        unit_KiloGrPerHr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloGrPerMtrCubd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloGrPerMtrCubd_short_name = ET.SubElement(unit_KiloGrPerMtrCubd, 'SHORT-NAME')
        unit_KiloGrPerMtrCubd_short_name.text = 'KiloGrPerMtrCubd'
        self.unit_KiloGrPerMtrCubd_long_name = ET.SubElement(unit_KiloGrPerMtrCubd, 'LONG-NAME')
        self.unit_KiloGrPerMtrCubd_l_4 = ET.SubElement(unit_KiloGrPerMtrCubd_long_name, 'L-4')
        unit_KiloGrPerMtrCubd_l_4.text = 'Kilogram Per Cubic Meter'
        unit_KiloGrPerMtrCubd_l_4.attrib = {'L': 'EN'}
        self.unit_KiloGrPerMtrCubd_display_name = ET.SubElement(unit_KiloGrPerMtrCubd, 'DISPLAY-NAME')
        unit_KiloGrPerMtrCubd_display_name.text = 'kg/(m^3)'
        self.unit_KiloGrPerMtrCubd_factor_si_to_unit = ET.SubElement(unit_KiloGrPerMtrCubd, 'FACTOR-SI-TO-UNIT')
        unit_KiloGrPerMtrCubd_factor_si_to_unit.text = '1'
        self.unit_KiloGrPerMtrCubd_offset_si_to_unit = ET.SubElement(unit_KiloGrPerMtrCubd, 'OFFSET-SI-TO-UNIT')
        unit_KiloGrPerMtrCubd_offset_si_to_unit.text = '0'
        self.unit_KiloGrPerMtrCubd_physical_dimension_ref = ET.SubElement(unit_KiloGrPerMtrCubd, 'PHYSICAL-DIMENSION-REF')
        unit_KiloGrPerMtrCubd_physical_dimension_ref.text = 'LenNeg3M1'
        unit_KiloGrPerMtrCubd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloGrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloGrPerSec_short_name = ET.SubElement(unit_KiloGrPerSec, 'SHORT-NAME')
        unit_KiloGrPerSec_short_name.text = 'KiloGrPerSec'
        self.unit_KiloGrPerSec_long_name = ET.SubElement(unit_KiloGrPerSec, 'LONG-NAME')
        self.unit_KiloGrPerSec_l_4 = ET.SubElement(unit_KiloGrPerSec_long_name, 'L-4')
        unit_KiloGrPerSec_l_4.text = 'Kilogram Per Second'
        unit_KiloGrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_KiloGrPerSec_display_name = ET.SubElement(unit_KiloGrPerSec, 'DISPLAY-NAME')
        unit_KiloGrPerSec_display_name.text = 'kg/s'
        self.unit_KiloGrPerSec_factor_si_to_unit = ET.SubElement(unit_KiloGrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_KiloGrPerSec_factor_si_to_unit.text = '1'
        self.unit_KiloGrPerSec_offset_si_to_unit = ET.SubElement(unit_KiloGrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_KiloGrPerSec_offset_si_to_unit.text = '0'
        self.unit_KiloGrPerSec_physical_dimension_ref = ET.SubElement(unit_KiloGrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_KiloGrPerSec_physical_dimension_ref.text = 'M1TiNeg1'
        unit_KiloGrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloGrSqrMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloGrSqrMtr_short_name = ET.SubElement(unit_KiloGrSqrMtr, 'SHORT-NAME')
        unit_KiloGrSqrMtr_short_name.text = 'KiloGrSqrMtr'
        self.unit_KiloGrSqrMtr_long_name = ET.SubElement(unit_KiloGrSqrMtr, 'LONG-NAME')
        self.unit_KiloGrSqrMtr_l_4 = ET.SubElement(unit_KiloGrSqrMtr_long_name, 'L-4')
        unit_KiloGrSqrMtr_l_4.text = 'Kilogram Square Meter'
        unit_KiloGrSqrMtr_l_4.attrib = {'L': 'EN'}
        self.unit_KiloGrSqrMtr_display_name = ET.SubElement(unit_KiloGrSqrMtr, 'DISPLAY-NAME')
        unit_KiloGrSqrMtr_display_name.text = 'kg*(m^2)'
        self.unit_KiloGrSqrMtr_factor_si_to_unit = ET.SubElement(unit_KiloGrSqrMtr, 'FACTOR-SI-TO-UNIT')
        unit_KiloGrSqrMtr_factor_si_to_unit.text = '1'
        self.unit_KiloGrSqrMtr_offset_si_to_unit = ET.SubElement(unit_KiloGrSqrMtr, 'OFFSET-SI-TO-UNIT')
        unit_KiloGrSqrMtr_offset_si_to_unit.text = '0'
        self.unit_KiloGrSqrMtr_physical_dimension_ref = ET.SubElement(unit_KiloGrSqrMtr, 'PHYSICAL-DIMENSION-REF')
        unit_KiloGrSqrMtr_physical_dimension_ref.text = 'Len2M1'
        unit_KiloGrSqrMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloHz = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloHz_short_name = ET.SubElement(unit_KiloHz, 'SHORT-NAME')
        unit_KiloHz_short_name.text = 'KiloHz'
        self.unit_KiloHz_long_name = ET.SubElement(unit_KiloHz, 'LONG-NAME')
        self.unit_KiloHz_l_4 = ET.SubElement(unit_KiloHz_long_name, 'L-4')
        unit_KiloHz_l_4.text = 'Kilohertz'
        unit_KiloHz_l_4.attrib = {'L': 'EN'}
        self.unit_KiloHz_display_name = ET.SubElement(unit_KiloHz, 'DISPLAY-NAME')
        unit_KiloHz_display_name.text = 'kHz'
        self.unit_KiloHz_factor_si_to_unit = ET.SubElement(unit_KiloHz, 'FACTOR-SI-TO-UNIT')
        unit_KiloHz_factor_si_to_unit.text = '0.001'
        self.unit_KiloHz_offset_si_to_unit = ET.SubElement(unit_KiloHz, 'OFFSET-SI-TO-UNIT')
        unit_KiloHz_offset_si_to_unit.text = '0'
        self.unit_KiloHz_physical_dimension_ref = ET.SubElement(unit_KiloHz, 'PHYSICAL-DIMENSION-REF')
        unit_KiloHz_physical_dimension_ref.text = 'TiNeg1'
        unit_KiloHz_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloJou = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloJou_short_name = ET.SubElement(unit_KiloJou, 'SHORT-NAME')
        unit_KiloJou_short_name.text = 'KiloJou'
        self.unit_KiloJou_long_name = ET.SubElement(unit_KiloJou, 'LONG-NAME')
        self.unit_KiloJou_l_4 = ET.SubElement(unit_KiloJou_long_name, 'L-4')
        unit_KiloJou_l_4.text = 'Kilojoule'
        unit_KiloJou_l_4.attrib = {'L': 'EN'}
        self.unit_KiloJou_display_name = ET.SubElement(unit_KiloJou, 'DISPLAY-NAME')
        unit_KiloJou_display_name.text = 'kJ'
        self.unit_KiloJou_factor_si_to_unit = ET.SubElement(unit_KiloJou, 'FACTOR-SI-TO-UNIT')
        unit_KiloJou_factor_si_to_unit.text = '0.001'
        self.unit_KiloJou_offset_si_to_unit = ET.SubElement(unit_KiloJou, 'OFFSET-SI-TO-UNIT')
        unit_KiloJou_offset_si_to_unit.text = '0'
        self.unit_KiloJou_physical_dimension_ref = ET.SubElement(unit_KiloJou, 'PHYSICAL-DIMENSION-REF')
        unit_KiloJou_physical_dimension_ref.text = 'Len2M1TiNeg2_1'
        unit_KiloJou_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloMtr_short_name = ET.SubElement(unit_KiloMtr, 'SHORT-NAME')
        unit_KiloMtr_short_name.text = 'KiloMtr'
        self.unit_KiloMtr_long_name = ET.SubElement(unit_KiloMtr, 'LONG-NAME')
        self.unit_KiloMtr_l_4 = ET.SubElement(unit_KiloMtr_long_name, 'L-4')
        unit_KiloMtr_l_4.text = 'Kilometer'
        unit_KiloMtr_l_4.attrib = {'L': 'EN'}
        self.unit_KiloMtr_display_name = ET.SubElement(unit_KiloMtr, 'DISPLAY-NAME')
        unit_KiloMtr_display_name.text = 'km'
        self.unit_KiloMtr_factor_si_to_unit = ET.SubElement(unit_KiloMtr, 'FACTOR-SI-TO-UNIT')
        unit_KiloMtr_factor_si_to_unit.text = '0.001'
        self.unit_KiloMtr_offset_si_to_unit = ET.SubElement(unit_KiloMtr, 'OFFSET-SI-TO-UNIT')
        unit_KiloMtr_offset_si_to_unit.text = '0'
        self.unit_KiloMtr_physical_dimension_ref = ET.SubElement(unit_KiloMtr, 'PHYSICAL-DIMENSION-REF')
        unit_KiloMtr_physical_dimension_ref.text = 'Len1'
        unit_KiloMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloMtrPerHr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloMtrPerHr_short_name = ET.SubElement(unit_KiloMtrPerHr, 'SHORT-NAME')
        unit_KiloMtrPerHr_short_name.text = 'KiloMtrPerHr'
        self.unit_KiloMtrPerHr_long_name = ET.SubElement(unit_KiloMtrPerHr, 'LONG-NAME')
        self.unit_KiloMtrPerHr_l_4 = ET.SubElement(unit_KiloMtrPerHr_long_name, 'L-4')
        unit_KiloMtrPerHr_l_4.text = 'Kilometer Per Hour'
        unit_KiloMtrPerHr_l_4.attrib = {'L': 'EN'}
        self.unit_KiloMtrPerHr_display_name = ET.SubElement(unit_KiloMtrPerHr, 'DISPLAY-NAME')
        unit_KiloMtrPerHr_display_name.text = 'km/h'
        self.unit_KiloMtrPerHr_factor_si_to_unit = ET.SubElement(unit_KiloMtrPerHr, 'FACTOR-SI-TO-UNIT')
        unit_KiloMtrPerHr_factor_si_to_unit.text = '3.6'
        self.unit_KiloMtrPerHr_offset_si_to_unit = ET.SubElement(unit_KiloMtrPerHr, 'OFFSET-SI-TO-UNIT')
        unit_KiloMtrPerHr_offset_si_to_unit.text = '0'
        self.unit_KiloMtrPerHr_physical_dimension_ref = ET.SubElement(unit_KiloMtrPerHr, 'PHYSICAL-DIMENSION-REF')
        unit_KiloMtrPerHr_physical_dimension_ref.text = 'Len1TiNeg1'
        unit_KiloMtrPerHr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloMtrPerHrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloMtrPerHrPerSec_short_name = ET.SubElement(unit_KiloMtrPerHrPerSec, 'SHORT-NAME')
        unit_KiloMtrPerHrPerSec_short_name.text = 'KiloMtrPerHrPerSec'
        self.unit_KiloMtrPerHrPerSec_long_name = ET.SubElement(unit_KiloMtrPerHrPerSec, 'LONG-NAME')
        self.unit_KiloMtrPerHrPerSec_l_4 = ET.SubElement(unit_KiloMtrPerHrPerSec_long_name, 'L-4')
        unit_KiloMtrPerHrPerSec_l_4.text = 'Kilometer Per Hour Per Second'
        unit_KiloMtrPerHrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_KiloMtrPerHrPerSec_display_name = ET.SubElement(unit_KiloMtrPerHrPerSec, 'DISPLAY-NAME')
        unit_KiloMtrPerHrPerSec_display_name.text = '(km/h)/s'
        self.unit_KiloMtrPerHrPerSec_factor_si_to_unit = ET.SubElement(unit_KiloMtrPerHrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_KiloMtrPerHrPerSec_factor_si_to_unit.text = '3.6'
        self.unit_KiloMtrPerHrPerSec_offset_si_to_unit = ET.SubElement(unit_KiloMtrPerHrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_KiloMtrPerHrPerSec_offset_si_to_unit.text = '0'
        self.unit_KiloMtrPerHrPerSec_physical_dimension_ref = ET.SubElement(unit_KiloMtrPerHrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_KiloMtrPerHrPerSec_physical_dimension_ref.text = 'Len1TiNeg2'
        unit_KiloMtrPerHrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloNwt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloNwt_short_name = ET.SubElement(unit_KiloNwt, 'SHORT-NAME')
        unit_KiloNwt_short_name.text = 'KiloNwt'
        self.unit_KiloNwt_long_name = ET.SubElement(unit_KiloNwt, 'LONG-NAME')
        self.unit_KiloNwt_l_4 = ET.SubElement(unit_KiloNwt_long_name, 'L-4')
        unit_KiloNwt_l_4.text = 'Kilonewton'
        unit_KiloNwt_l_4.attrib = {'L': 'EN'}
        self.unit_KiloNwt_display_name = ET.SubElement(unit_KiloNwt, 'DISPLAY-NAME')
        unit_KiloNwt_display_name.text = 'kN'
        self.unit_KiloNwt_factor_si_to_unit = ET.SubElement(unit_KiloNwt, 'FACTOR-SI-TO-UNIT')
        unit_KiloNwt_factor_si_to_unit.text = '0.001'
        self.unit_KiloNwt_offset_si_to_unit = ET.SubElement(unit_KiloNwt, 'OFFSET-SI-TO-UNIT')
        unit_KiloNwt_offset_si_to_unit.text = '0'
        self.unit_KiloNwt_physical_dimension_ref = ET.SubElement(unit_KiloNwt, 'PHYSICAL-DIMENSION-REF')
        unit_KiloNwt_physical_dimension_ref.text = 'Len1M1TiNeg2'
        unit_KiloNwt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloNwtMtrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloNwtMtrPerSec_short_name = ET.SubElement(unit_KiloNwtMtrPerSec, 'SHORT-NAME')
        unit_KiloNwtMtrPerSec_short_name.text = 'KiloNwtMtrPerSec'
        self.unit_KiloNwtMtrPerSec_long_name = ET.SubElement(unit_KiloNwtMtrPerSec, 'LONG-NAME')
        self.unit_KiloNwtMtrPerSec_l_4 = ET.SubElement(unit_KiloNwtMtrPerSec_long_name, 'L-4')
        unit_KiloNwtMtrPerSec_l_4.text = 'Kilonewtonmeter Per Second'
        unit_KiloNwtMtrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_KiloNwtMtrPerSec_display_name = ET.SubElement(unit_KiloNwtMtrPerSec, 'DISPLAY-NAME')
        unit_KiloNwtMtrPerSec_display_name.text = '(kN*m)/s'
        self.unit_KiloNwtMtrPerSec_factor_si_to_unit = ET.SubElement(unit_KiloNwtMtrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_KiloNwtMtrPerSec_factor_si_to_unit.text = '0.001'
        self.unit_KiloNwtMtrPerSec_offset_si_to_unit = ET.SubElement(unit_KiloNwtMtrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_KiloNwtMtrPerSec_offset_si_to_unit.text = '0'
        self.unit_KiloNwtMtrPerSec_physical_dimension_ref = ET.SubElement(unit_KiloNwtMtrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_KiloNwtMtrPerSec_physical_dimension_ref.text = 'Len2M1TiNeg3'
        unit_KiloNwtMtrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloOhm = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloOhm_short_name = ET.SubElement(unit_KiloOhm, 'SHORT-NAME')
        unit_KiloOhm_short_name.text = 'KiloOhm'
        self.unit_KiloOhm_long_name = ET.SubElement(unit_KiloOhm, 'LONG-NAME')
        self.unit_KiloOhm_l_4 = ET.SubElement(unit_KiloOhm_long_name, 'L-4')
        unit_KiloOhm_l_4.text = 'Kiloohm'
        unit_KiloOhm_l_4.attrib = {'L': 'EN'}
        self.unit_KiloOhm_display_name = ET.SubElement(unit_KiloOhm, 'DISPLAY-NAME')
        unit_KiloOhm_display_name.text = 'kΩ'
        self.unit_KiloOhm_factor_si_to_unit = ET.SubElement(unit_KiloOhm, 'FACTOR-SI-TO-UNIT')
        unit_KiloOhm_factor_si_to_unit.text = '0.001'
        self.unit_KiloOhm_offset_si_to_unit = ET.SubElement(unit_KiloOhm, 'OFFSET-SI-TO-UNIT')
        unit_KiloOhm_offset_si_to_unit.text = '0'
        self.unit_KiloOhm_physical_dimension_ref = ET.SubElement(unit_KiloOhm, 'PHYSICAL-DIMENSION-REF')
        unit_KiloOhm_physical_dimension_ref.text = 'Len2M1TiNeg3INeg2'
        unit_KiloOhm_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloVolt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloVolt_short_name = ET.SubElement(unit_KiloVolt, 'SHORT-NAME')
        unit_KiloVolt_short_name.text = 'KiloVolt'
        self.unit_KiloVolt_long_name = ET.SubElement(unit_KiloVolt, 'LONG-NAME')
        self.unit_KiloVolt_l_4 = ET.SubElement(unit_KiloVolt_long_name, 'L-4')
        unit_KiloVolt_l_4.text = 'Kilovolt'
        unit_KiloVolt_l_4.attrib = {'L': 'EN'}
        self.unit_KiloVolt_display_name = ET.SubElement(unit_KiloVolt, 'DISPLAY-NAME')
        unit_KiloVolt_display_name.text = 'kV'
        self.unit_KiloVolt_factor_si_to_unit = ET.SubElement(unit_KiloVolt, 'FACTOR-SI-TO-UNIT')
        unit_KiloVolt_factor_si_to_unit.text = '0.001'
        self.unit_KiloVolt_offset_si_to_unit = ET.SubElement(unit_KiloVolt, 'OFFSET-SI-TO-UNIT')
        unit_KiloVolt_offset_si_to_unit.text = '0'
        self.unit_KiloVolt_physical_dimension_ref = ET.SubElement(unit_KiloVolt, 'PHYSICAL-DIMENSION-REF')
        unit_KiloVolt_physical_dimension_ref.text = 'Len2M1TiNeg3INeg1'
        unit_KiloVolt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloWatt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloWatt_short_name = ET.SubElement(unit_KiloWatt, 'SHORT-NAME')
        unit_KiloWatt_short_name.text = 'KiloWatt'
        self.unit_KiloWatt_long_name = ET.SubElement(unit_KiloWatt, 'LONG-NAME')
        self.unit_KiloWatt_l_4 = ET.SubElement(unit_KiloWatt_long_name, 'L-4')
        unit_KiloWatt_l_4.text = 'Kilowatt'
        unit_KiloWatt_l_4.attrib = {'L': 'EN'}
        self.unit_KiloWatt_display_name = ET.SubElement(unit_KiloWatt, 'DISPLAY-NAME')
        unit_KiloWatt_display_name.text = 'kW'
        self.unit_KiloWatt_factor_si_to_unit = ET.SubElement(unit_KiloWatt, 'FACTOR-SI-TO-UNIT')
        unit_KiloWatt_factor_si_to_unit.text = '0.001'
        self.unit_KiloWatt_offset_si_to_unit = ET.SubElement(unit_KiloWatt, 'OFFSET-SI-TO-UNIT')
        unit_KiloWatt_offset_si_to_unit.text = '0'
        self.unit_KiloWatt_physical_dimension_ref = ET.SubElement(unit_KiloWatt, 'PHYSICAL-DIMENSION-REF')
        unit_KiloWatt_physical_dimension_ref.text = 'Len2M1TiNeg3_1'
        unit_KiloWatt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloWattHr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloWattHr_short_name = ET.SubElement(unit_KiloWattHr, 'SHORT-NAME')
        unit_KiloWattHr_short_name.text = 'KiloWattHr'
        self.unit_KiloWattHr_long_name = ET.SubElement(unit_KiloWattHr, 'LONG-NAME')
        self.unit_KiloWattHr_l_4 = ET.SubElement(unit_KiloWattHr_long_name, 'L-4')
        unit_KiloWattHr_l_4.text = 'Kilowatthour'
        unit_KiloWattHr_l_4.attrib = {'L': 'EN'}
        self.unit_KiloWattHr_display_name = ET.SubElement(unit_KiloWattHr, 'DISPLAY-NAME')
        unit_KiloWattHr_display_name.text = 'kWh'
        self.unit_KiloWattHr_factor_si_to_unit = ET.SubElement(unit_KiloWattHr, 'FACTOR-SI-TO-UNIT')
        unit_KiloWattHr_factor_si_to_unit.text = '2.77777777777778E-07'
        self.unit_KiloWattHr_offset_si_to_unit = ET.SubElement(unit_KiloWattHr, 'OFFSET-SI-TO-UNIT')
        unit_KiloWattHr_offset_si_to_unit.text = '0'
        self.unit_KiloWattHr_physical_dimension_ref = ET.SubElement(unit_KiloWattHr, 'PHYSICAL-DIMENSION-REF')
        unit_KiloWattHr_physical_dimension_ref.text = 'Len2M1TiNeg2_1'
        unit_KiloWattHr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_KiloWattHrPer100KiloMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_KiloWattHrPer100KiloMtr_short_name = ET.SubElement(unit_KiloWattHrPer100KiloMtr, 'SHORT-NAME')
        unit_KiloWattHrPer100KiloMtr_short_name.text = 'KiloWattHrPer100KiloMtr'
        self.unit_KiloWattHrPer100KiloMtr_long_name = ET.SubElement(unit_KiloWattHrPer100KiloMtr, 'LONG-NAME')
        self.unit_KiloWattHrPer100KiloMtr_l_4 = ET.SubElement(unit_KiloWattHrPer100KiloMtr_long_name, 'L-4')
        unit_KiloWattHrPer100KiloMtr_l_4.text = 'Kilowatthour Per 100 Kilometer'
        unit_KiloWattHrPer100KiloMtr_l_4.attrib = {'L': 'EN'}
        self.unit_KiloWattHrPer100KiloMtr_display_name = ET.SubElement(unit_KiloWattHrPer100KiloMtr, 'DISPLAY-NAME')
        unit_KiloWattHrPer100KiloMtr_display_name.text = 'kWh/(100*km)'
        self.unit_KiloWattHrPer100KiloMtr_factor_si_to_unit = ET.SubElement(unit_KiloWattHrPer100KiloMtr, 'FACTOR-SI-TO-UNIT')
        unit_KiloWattHrPer100KiloMtr_factor_si_to_unit.text = '0.0277777777777778'
        self.unit_KiloWattHrPer100KiloMtr_offset_si_to_unit = ET.SubElement(unit_KiloWattHrPer100KiloMtr, 'OFFSET-SI-TO-UNIT')
        unit_KiloWattHrPer100KiloMtr_offset_si_to_unit.text = '0'
        self.unit_KiloWattHrPer100KiloMtr_physical_dimension_ref = ET.SubElement(unit_KiloWattHrPer100KiloMtr, 'PHYSICAL-DIMENSION-REF')
        unit_KiloWattHrPer100KiloMtr_physical_dimension_ref.text = 'Len1M1TiNeg2_1'
        unit_KiloWattHrPer100KiloMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Ltr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Ltr_short_name = ET.SubElement(unit_Ltr, 'SHORT-NAME')
        unit_Ltr_short_name.text = 'Ltr'
        self.unit_Ltr_long_name = ET.SubElement(unit_Ltr, 'LONG-NAME')
        self.unit_Ltr_l_4 = ET.SubElement(unit_Ltr_long_name, 'L-4')
        unit_Ltr_l_4.text = 'Liter'
        unit_Ltr_l_4.attrib = {'L': 'EN'}
        self.unit_Ltr_display_name = ET.SubElement(unit_Ltr, 'DISPLAY-NAME')
        unit_Ltr_display_name.text = 'l'
        self.unit_Ltr_factor_si_to_unit = ET.SubElement(unit_Ltr, 'FACTOR-SI-TO-UNIT')
        unit_Ltr_factor_si_to_unit.text = '1000'
        self.unit_Ltr_offset_si_to_unit = ET.SubElement(unit_Ltr, 'OFFSET-SI-TO-UNIT')
        unit_Ltr_offset_si_to_unit.text = '0'
        self.unit_Ltr_physical_dimension_ref = ET.SubElement(unit_Ltr, 'PHYSICAL-DIMENSION-REF')
        unit_Ltr_physical_dimension_ref.text = 'Len3'
        unit_Ltr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_LtrPer100KiloMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_LtrPer100KiloMtr_short_name = ET.SubElement(unit_LtrPer100KiloMtr, 'SHORT-NAME')
        unit_LtrPer100KiloMtr_short_name.text = 'LtrPer100KiloMtr'
        self.unit_LtrPer100KiloMtr_long_name = ET.SubElement(unit_LtrPer100KiloMtr, 'LONG-NAME')
        self.unit_LtrPer100KiloMtr_l_4 = ET.SubElement(unit_LtrPer100KiloMtr_long_name, 'L-4')
        unit_LtrPer100KiloMtr_l_4.text = 'Liter Per 100 Kilometer'
        unit_LtrPer100KiloMtr_l_4.attrib = {'L': 'EN'}
        self.unit_LtrPer100KiloMtr_display_name = ET.SubElement(unit_LtrPer100KiloMtr, 'DISPLAY-NAME')
        unit_LtrPer100KiloMtr_display_name.text = 'l/(100km)'
        self.unit_LtrPer100KiloMtr_factor_si_to_unit = ET.SubElement(unit_LtrPer100KiloMtr, 'FACTOR-SI-TO-UNIT')
        unit_LtrPer100KiloMtr_factor_si_to_unit.text = '100000000'
        self.unit_LtrPer100KiloMtr_offset_si_to_unit = ET.SubElement(unit_LtrPer100KiloMtr, 'OFFSET-SI-TO-UNIT')
        unit_LtrPer100KiloMtr_offset_si_to_unit.text = '0'
        self.unit_LtrPer100KiloMtr_physical_dimension_ref = ET.SubElement(unit_LtrPer100KiloMtr, 'PHYSICAL-DIMENSION-REF')
        unit_LtrPer100KiloMtr_physical_dimension_ref.text = 'Len2_1'
        unit_LtrPer100KiloMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_LtrPerHr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_LtrPerHr_short_name = ET.SubElement(unit_LtrPerHr, 'SHORT-NAME')
        unit_LtrPerHr_short_name.text = 'LtrPerHr'
        self.unit_LtrPerHr_long_name = ET.SubElement(unit_LtrPerHr, 'LONG-NAME')
        self.unit_LtrPerHr_l_4 = ET.SubElement(unit_LtrPerHr_long_name, 'L-4')
        unit_LtrPerHr_l_4.text = 'Liter Per Hour'
        unit_LtrPerHr_l_4.attrib = {'L': 'EN'}
        self.unit_LtrPerHr_display_name = ET.SubElement(unit_LtrPerHr, 'DISPLAY-NAME')
        unit_LtrPerHr_display_name.text = 'l/h'
        self.unit_LtrPerHr_factor_si_to_unit = ET.SubElement(unit_LtrPerHr, 'FACTOR-SI-TO-UNIT')
        unit_LtrPerHr_factor_si_to_unit.text = '3600000'
        self.unit_LtrPerHr_offset_si_to_unit = ET.SubElement(unit_LtrPerHr, 'OFFSET-SI-TO-UNIT')
        unit_LtrPerHr_offset_si_to_unit.text = '0'
        self.unit_LtrPerHr_physical_dimension_ref = ET.SubElement(unit_LtrPerHr, 'PHYSICAL-DIMENSION-REF')
        unit_LtrPerHr_physical_dimension_ref.text = 'Len3TiNeg1'
        unit_LtrPerHr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_LtrPerKiloMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_LtrPerKiloMtr_short_name = ET.SubElement(unit_LtrPerKiloMtr, 'SHORT-NAME')
        unit_LtrPerKiloMtr_short_name.text = 'LtrPerKiloMtr'
        self.unit_LtrPerKiloMtr_long_name = ET.SubElement(unit_LtrPerKiloMtr, 'LONG-NAME')
        self.unit_LtrPerKiloMtr_l_4 = ET.SubElement(unit_LtrPerKiloMtr_long_name, 'L-4')
        unit_LtrPerKiloMtr_l_4.text = 'Liter Per Kilometer'
        unit_LtrPerKiloMtr_l_4.attrib = {'L': 'EN'}
        self.unit_LtrPerKiloMtr_display_name = ET.SubElement(unit_LtrPerKiloMtr, 'DISPLAY-NAME')
        unit_LtrPerKiloMtr_display_name.text = 'l/km'
        self.unit_LtrPerKiloMtr_factor_si_to_unit = ET.SubElement(unit_LtrPerKiloMtr, 'FACTOR-SI-TO-UNIT')
        unit_LtrPerKiloMtr_factor_si_to_unit.text = '1000000'
        self.unit_LtrPerKiloMtr_offset_si_to_unit = ET.SubElement(unit_LtrPerKiloMtr, 'OFFSET-SI-TO-UNIT')
        unit_LtrPerKiloMtr_offset_si_to_unit.text = '0'
        self.unit_LtrPerKiloMtr_physical_dimension_ref = ET.SubElement(unit_LtrPerKiloMtr, 'PHYSICAL-DIMENSION-REF')
        unit_LtrPerKiloMtr_physical_dimension_ref.text = 'Len2_1'
        unit_LtrPerKiloMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MegaBitPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MegaBitPerSec_short_name = ET.SubElement(unit_MegaBitPerSec, 'SHORT-NAME')
        unit_MegaBitPerSec_short_name.text = 'MegaBitPerSec'
        self.unit_MegaBitPerSec_long_name = ET.SubElement(unit_MegaBitPerSec, 'LONG-NAME')
        self.unit_MegaBitPerSec_l_4 = ET.SubElement(unit_MegaBitPerSec_long_name, 'L-4')
        unit_MegaBitPerSec_l_4.text = 'Megabit Per Second'
        unit_MegaBitPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MegaBitPerSec_display_name = ET.SubElement(unit_MegaBitPerSec, 'DISPLAY-NAME')
        unit_MegaBitPerSec_display_name.text = 'Mbit/s'
        self.unit_MegaBitPerSec_factor_si_to_unit = ET.SubElement(unit_MegaBitPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MegaBitPerSec_factor_si_to_unit.text = '1E-06'
        self.unit_MegaBitPerSec_offset_si_to_unit = ET.SubElement(unit_MegaBitPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MegaBitPerSec_offset_si_to_unit.text = '0'
        self.unit_MegaBitPerSec_physical_dimension_ref = ET.SubElement(unit_MegaBitPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MegaBitPerSec_physical_dimension_ref.text = 'TiNeg1_3'
        unit_MegaBitPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MegaHz = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MegaHz_short_name = ET.SubElement(unit_MegaHz, 'SHORT-NAME')
        unit_MegaHz_short_name.text = 'MegaHz'
        self.unit_MegaHz_long_name = ET.SubElement(unit_MegaHz, 'LONG-NAME')
        self.unit_MegaHz_l_4 = ET.SubElement(unit_MegaHz_long_name, 'L-4')
        unit_MegaHz_l_4.text = 'Megahertz'
        unit_MegaHz_l_4.attrib = {'L': 'EN'}
        self.unit_MegaHz_display_name = ET.SubElement(unit_MegaHz, 'DISPLAY-NAME')
        unit_MegaHz_display_name.text = 'MHz'
        self.unit_MegaHz_factor_si_to_unit = ET.SubElement(unit_MegaHz, 'FACTOR-SI-TO-UNIT')
        unit_MegaHz_factor_si_to_unit.text = '1E-06'
        self.unit_MegaHz_offset_si_to_unit = ET.SubElement(unit_MegaHz, 'OFFSET-SI-TO-UNIT')
        unit_MegaHz_offset_si_to_unit.text = '0'
        self.unit_MegaHz_physical_dimension_ref = ET.SubElement(unit_MegaHz, 'PHYSICAL-DIMENSION-REF')
        unit_MegaHz_physical_dimension_ref.text = 'TiNeg1'
        unit_MegaHz_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MegaJou = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MegaJou_short_name = ET.SubElement(unit_MegaJou, 'SHORT-NAME')
        unit_MegaJou_short_name.text = 'MegaJou'
        self.unit_MegaJou_long_name = ET.SubElement(unit_MegaJou, 'LONG-NAME')
        self.unit_MegaJou_l_4 = ET.SubElement(unit_MegaJou_long_name, 'L-4')
        unit_MegaJou_l_4.text = 'Megajoule'
        unit_MegaJou_l_4.attrib = {'L': 'EN'}
        self.unit_MegaJou_display_name = ET.SubElement(unit_MegaJou, 'DISPLAY-NAME')
        unit_MegaJou_display_name.text = 'MJ'
        self.unit_MegaJou_factor_si_to_unit = ET.SubElement(unit_MegaJou, 'FACTOR-SI-TO-UNIT')
        unit_MegaJou_factor_si_to_unit.text = '1E-06'
        self.unit_MegaJou_offset_si_to_unit = ET.SubElement(unit_MegaJou, 'OFFSET-SI-TO-UNIT')
        unit_MegaJou_offset_si_to_unit.text = '0'
        self.unit_MegaJou_physical_dimension_ref = ET.SubElement(unit_MegaJou, 'PHYSICAL-DIMENSION-REF')
        unit_MegaJou_physical_dimension_ref.text = 'Len2M1TiNeg2_1'
        unit_MegaJou_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MegaOhm = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MegaOhm_short_name = ET.SubElement(unit_MegaOhm, 'SHORT-NAME')
        unit_MegaOhm_short_name.text = 'MegaOhm'
        self.unit_MegaOhm_long_name = ET.SubElement(unit_MegaOhm, 'LONG-NAME')
        self.unit_MegaOhm_l_4 = ET.SubElement(unit_MegaOhm_long_name, 'L-4')
        unit_MegaOhm_l_4.text = 'Megaohm'
        unit_MegaOhm_l_4.attrib = {'L': 'EN'}
        self.unit_MegaOhm_display_name = ET.SubElement(unit_MegaOhm, 'DISPLAY-NAME')
        unit_MegaOhm_display_name.text = 'MΩ'
        self.unit_MegaOhm_factor_si_to_unit = ET.SubElement(unit_MegaOhm, 'FACTOR-SI-TO-UNIT')
        unit_MegaOhm_factor_si_to_unit.text = '1E-06'
        self.unit_MegaOhm_offset_si_to_unit = ET.SubElement(unit_MegaOhm, 'OFFSET-SI-TO-UNIT')
        unit_MegaOhm_offset_si_to_unit.text = '0'
        self.unit_MegaOhm_physical_dimension_ref = ET.SubElement(unit_MegaOhm, 'PHYSICAL-DIMENSION-REF')
        unit_MegaOhm_physical_dimension_ref.text = 'Len2M1TiNeg3INeg2'
        unit_MegaOhm_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MegaPa = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MegaPa_short_name = ET.SubElement(unit_MegaPa, 'SHORT-NAME')
        unit_MegaPa_short_name.text = 'MegaPa'
        self.unit_MegaPa_long_name = ET.SubElement(unit_MegaPa, 'LONG-NAME')
        self.unit_MegaPa_l_4 = ET.SubElement(unit_MegaPa_long_name, 'L-4')
        unit_MegaPa_l_4.text = 'Megapascal'
        unit_MegaPa_l_4.attrib = {'L': 'EN'}
        self.unit_MegaPa_display_name = ET.SubElement(unit_MegaPa, 'DISPLAY-NAME')
        unit_MegaPa_display_name.text = 'MPa'
        self.unit_MegaPa_factor_si_to_unit = ET.SubElement(unit_MegaPa, 'FACTOR-SI-TO-UNIT')
        unit_MegaPa_factor_si_to_unit.text = '1E-06'
        self.unit_MegaPa_offset_si_to_unit = ET.SubElement(unit_MegaPa, 'OFFSET-SI-TO-UNIT')
        unit_MegaPa_offset_si_to_unit.text = '0'
        self.unit_MegaPa_physical_dimension_ref = ET.SubElement(unit_MegaPa, 'PHYSICAL-DIMENSION-REF')
        unit_MegaPa_physical_dimension_ref.text = 'LenNeg1M1TiNeg2'
        unit_MegaPa_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MegaWatt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MegaWatt_short_name = ET.SubElement(unit_MegaWatt, 'SHORT-NAME')
        unit_MegaWatt_short_name.text = 'MegaWatt'
        self.unit_MegaWatt_long_name = ET.SubElement(unit_MegaWatt, 'LONG-NAME')
        self.unit_MegaWatt_l_4 = ET.SubElement(unit_MegaWatt_long_name, 'L-4')
        unit_MegaWatt_l_4.text = 'Megawatt'
        unit_MegaWatt_l_4.attrib = {'L': 'EN'}
        self.unit_MegaWatt_display_name = ET.SubElement(unit_MegaWatt, 'DISPLAY-NAME')
        unit_MegaWatt_display_name.text = 'MW'
        self.unit_MegaWatt_factor_si_to_unit = ET.SubElement(unit_MegaWatt, 'FACTOR-SI-TO-UNIT')
        unit_MegaWatt_factor_si_to_unit.text = '1E-06'
        self.unit_MegaWatt_offset_si_to_unit = ET.SubElement(unit_MegaWatt, 'OFFSET-SI-TO-UNIT')
        unit_MegaWatt_offset_si_to_unit.text = '0'
        self.unit_MegaWatt_physical_dimension_ref = ET.SubElement(unit_MegaWatt, 'PHYSICAL-DIMENSION-REF')
        unit_MegaWatt_physical_dimension_ref.text = 'Len2M1TiNeg3_1'
        unit_MegaWatt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroAmpr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroAmpr_short_name = ET.SubElement(unit_MicroAmpr, 'SHORT-NAME')
        unit_MicroAmpr_short_name.text = 'MicroAmpr'
        self.unit_MicroAmpr_long_name = ET.SubElement(unit_MicroAmpr, 'LONG-NAME')
        self.unit_MicroAmpr_l_4 = ET.SubElement(unit_MicroAmpr_long_name, 'L-4')
        unit_MicroAmpr_l_4.text = 'Microampere'
        unit_MicroAmpr_l_4.attrib = {'L': 'EN'}
        self.unit_MicroAmpr_display_name = ET.SubElement(unit_MicroAmpr, 'DISPLAY-NAME')
        unit_MicroAmpr_display_name.text = 'µA'
        self.unit_MicroAmpr_factor_si_to_unit = ET.SubElement(unit_MicroAmpr, 'FACTOR-SI-TO-UNIT')
        unit_MicroAmpr_factor_si_to_unit.text = '1000000'
        self.unit_MicroAmpr_offset_si_to_unit = ET.SubElement(unit_MicroAmpr, 'OFFSET-SI-TO-UNIT')
        unit_MicroAmpr_offset_si_to_unit.text = '0'
        self.unit_MicroAmpr_physical_dimension_ref = ET.SubElement(unit_MicroAmpr, 'PHYSICAL-DIMENSION-REF')
        unit_MicroAmpr_physical_dimension_ref.text = 'I1'
        unit_MicroAmpr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroFrd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroFrd_short_name = ET.SubElement(unit_MicroFrd, 'SHORT-NAME')
        unit_MicroFrd_short_name.text = 'MicroFrd'
        self.unit_MicroFrd_long_name = ET.SubElement(unit_MicroFrd, 'LONG-NAME')
        self.unit_MicroFrd_l_4 = ET.SubElement(unit_MicroFrd_long_name, 'L-4')
        unit_MicroFrd_l_4.text = 'Microfarad'
        unit_MicroFrd_l_4.attrib = {'L': 'EN'}
        self.unit_MicroFrd_display_name = ET.SubElement(unit_MicroFrd, 'DISPLAY-NAME')
        unit_MicroFrd_display_name.text = 'µF'
        self.unit_MicroFrd_factor_si_to_unit = ET.SubElement(unit_MicroFrd, 'FACTOR-SI-TO-UNIT')
        unit_MicroFrd_factor_si_to_unit.text = '1000000'
        self.unit_MicroFrd_offset_si_to_unit = ET.SubElement(unit_MicroFrd, 'OFFSET-SI-TO-UNIT')
        unit_MicroFrd_offset_si_to_unit.text = '0'
        self.unit_MicroFrd_physical_dimension_ref = ET.SubElement(unit_MicroFrd, 'PHYSICAL-DIMENSION-REF')
        unit_MicroFrd_physical_dimension_ref.text = 'LenNeg2MNeg1Ti4I2'
        unit_MicroFrd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroGr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroGr_short_name = ET.SubElement(unit_MicroGr, 'SHORT-NAME')
        unit_MicroGr_short_name.text = 'MicroGr'
        self.unit_MicroGr_long_name = ET.SubElement(unit_MicroGr, 'LONG-NAME')
        self.unit_MicroGr_l_4 = ET.SubElement(unit_MicroGr_long_name, 'L-4')
        unit_MicroGr_l_4.text = 'Microgram'
        unit_MicroGr_l_4.attrib = {'L': 'EN'}
        self.unit_MicroGr_display_name = ET.SubElement(unit_MicroGr, 'DISPLAY-NAME')
        unit_MicroGr_display_name.text = 'µg'
        self.unit_MicroGr_factor_si_to_unit = ET.SubElement(unit_MicroGr, 'FACTOR-SI-TO-UNIT')
        unit_MicroGr_factor_si_to_unit.text = '1000000000'
        self.unit_MicroGr_offset_si_to_unit = ET.SubElement(unit_MicroGr, 'OFFSET-SI-TO-UNIT')
        unit_MicroGr_offset_si_to_unit.text = '0'
        self.unit_MicroGr_physical_dimension_ref = ET.SubElement(unit_MicroGr, 'PHYSICAL-DIMENSION-REF')
        unit_MicroGr_physical_dimension_ref.text = 'M1'
        unit_MicroGr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroJou = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroJou_short_name = ET.SubElement(unit_MicroJou, 'SHORT-NAME')
        unit_MicroJou_short_name.text = 'MicroJou'
        self.unit_MicroJou_long_name = ET.SubElement(unit_MicroJou, 'LONG-NAME')
        self.unit_MicroJou_l_4 = ET.SubElement(unit_MicroJou_long_name, 'L-4')
        unit_MicroJou_l_4.text = 'Microjoule'
        unit_MicroJou_l_4.attrib = {'L': 'EN'}
        self.unit_MicroJou_display_name = ET.SubElement(unit_MicroJou, 'DISPLAY-NAME')
        unit_MicroJou_display_name.text = 'µJ'
        self.unit_MicroJou_factor_si_to_unit = ET.SubElement(unit_MicroJou, 'FACTOR-SI-TO-UNIT')
        unit_MicroJou_factor_si_to_unit.text = '1000000'
        self.unit_MicroJou_offset_si_to_unit = ET.SubElement(unit_MicroJou, 'OFFSET-SI-TO-UNIT')
        unit_MicroJou_offset_si_to_unit.text = '0'
        self.unit_MicroJou_physical_dimension_ref = ET.SubElement(unit_MicroJou, 'PHYSICAL-DIMENSION-REF')
        unit_MicroJou_physical_dimension_ref.text = 'Len2M1TiNeg2_1'
        unit_MicroJou_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroLtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroLtr_short_name = ET.SubElement(unit_MicroLtr, 'SHORT-NAME')
        unit_MicroLtr_short_name.text = 'MicroLtr'
        self.unit_MicroLtr_long_name = ET.SubElement(unit_MicroLtr, 'LONG-NAME')
        self.unit_MicroLtr_l_4 = ET.SubElement(unit_MicroLtr_long_name, 'L-4')
        unit_MicroLtr_l_4.text = 'Microliter'
        unit_MicroLtr_l_4.attrib = {'L': 'EN'}
        self.unit_MicroLtr_display_name = ET.SubElement(unit_MicroLtr, 'DISPLAY-NAME')
        unit_MicroLtr_display_name.text = 'µl'
        self.unit_MicroLtr_factor_si_to_unit = ET.SubElement(unit_MicroLtr, 'FACTOR-SI-TO-UNIT')
        unit_MicroLtr_factor_si_to_unit.text = '1000000000'
        self.unit_MicroLtr_offset_si_to_unit = ET.SubElement(unit_MicroLtr, 'OFFSET-SI-TO-UNIT')
        unit_MicroLtr_offset_si_to_unit.text = '0'
        self.unit_MicroLtr_physical_dimension_ref = ET.SubElement(unit_MicroLtr, 'PHYSICAL-DIMENSION-REF')
        unit_MicroLtr_physical_dimension_ref.text = 'Len3'
        unit_MicroLtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroLtrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroLtrPerSec_short_name = ET.SubElement(unit_MicroLtrPerSec, 'SHORT-NAME')
        unit_MicroLtrPerSec_short_name.text = 'MicroLtrPerSec'
        self.unit_MicroLtrPerSec_long_name = ET.SubElement(unit_MicroLtrPerSec, 'LONG-NAME')
        self.unit_MicroLtrPerSec_l_4 = ET.SubElement(unit_MicroLtrPerSec_long_name, 'L-4')
        unit_MicroLtrPerSec_l_4.text = 'Microliter Per Second'
        unit_MicroLtrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MicroLtrPerSec_display_name = ET.SubElement(unit_MicroLtrPerSec, 'DISPLAY-NAME')
        unit_MicroLtrPerSec_display_name.text = 'µl/s'
        self.unit_MicroLtrPerSec_factor_si_to_unit = ET.SubElement(unit_MicroLtrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MicroLtrPerSec_factor_si_to_unit.text = '1000000000'
        self.unit_MicroLtrPerSec_offset_si_to_unit = ET.SubElement(unit_MicroLtrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MicroLtrPerSec_offset_si_to_unit.text = '0'
        self.unit_MicroLtrPerSec_physical_dimension_ref = ET.SubElement(unit_MicroLtrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MicroLtrPerSec_physical_dimension_ref.text = 'Len3TiNeg1'
        unit_MicroLtrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroMtr_short_name = ET.SubElement(unit_MicroMtr, 'SHORT-NAME')
        unit_MicroMtr_short_name.text = 'MicroMtr'
        self.unit_MicroMtr_long_name = ET.SubElement(unit_MicroMtr, 'LONG-NAME')
        self.unit_MicroMtr_l_4 = ET.SubElement(unit_MicroMtr_long_name, 'L-4')
        unit_MicroMtr_l_4.text = 'Micrometer'
        unit_MicroMtr_l_4.attrib = {'L': 'EN'}
        self.unit_MicroMtr_display_name = ET.SubElement(unit_MicroMtr, 'DISPLAY-NAME')
        unit_MicroMtr_display_name.text = 'µm'
        self.unit_MicroMtr_factor_si_to_unit = ET.SubElement(unit_MicroMtr, 'FACTOR-SI-TO-UNIT')
        unit_MicroMtr_factor_si_to_unit.text = '1000000'
        self.unit_MicroMtr_offset_si_to_unit = ET.SubElement(unit_MicroMtr, 'OFFSET-SI-TO-UNIT')
        unit_MicroMtr_offset_si_to_unit.text = '0'
        self.unit_MicroMtr_physical_dimension_ref = ET.SubElement(unit_MicroMtr, 'PHYSICAL-DIMENSION-REF')
        unit_MicroMtr_physical_dimension_ref.text = 'Len1'
        unit_MicroMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroSec_short_name = ET.SubElement(unit_MicroSec, 'SHORT-NAME')
        unit_MicroSec_short_name.text = 'MicroSec'
        self.unit_MicroSec_long_name = ET.SubElement(unit_MicroSec, 'LONG-NAME')
        self.unit_MicroSec_l_4 = ET.SubElement(unit_MicroSec_long_name, 'L-4')
        unit_MicroSec_l_4.text = 'Microsecond'
        unit_MicroSec_l_4.attrib = {'L': 'EN'}
        self.unit_MicroSec_display_name = ET.SubElement(unit_MicroSec, 'DISPLAY-NAME')
        unit_MicroSec_display_name.text = 'µs'
        self.unit_MicroSec_factor_si_to_unit = ET.SubElement(unit_MicroSec, 'FACTOR-SI-TO-UNIT')
        unit_MicroSec_factor_si_to_unit.text = '1000000'
        self.unit_MicroSec_offset_si_to_unit = ET.SubElement(unit_MicroSec, 'OFFSET-SI-TO-UNIT')
        unit_MicroSec_offset_si_to_unit.text = '0'
        self.unit_MicroSec_physical_dimension_ref = ET.SubElement(unit_MicroSec, 'PHYSICAL-DIMENSION-REF')
        unit_MicroSec_physical_dimension_ref.text = 'Ti1'
        unit_MicroSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MicroTesla = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MicroTesla_short_name = ET.SubElement(unit_MicroTesla, 'SHORT-NAME')
        unit_MicroTesla_short_name.text = 'MicroTesla'
        self.unit_MicroTesla_long_name = ET.SubElement(unit_MicroTesla, 'LONG-NAME')
        self.unit_MicroTesla_l_4 = ET.SubElement(unit_MicroTesla_long_name, 'L-4')
        unit_MicroTesla_l_4.text = 'Microtesla'
        unit_MicroTesla_l_4.attrib = {'L': 'EN'}
        self.unit_MicroTesla_display_name = ET.SubElement(unit_MicroTesla, 'DISPLAY-NAME')
        unit_MicroTesla_display_name.text = 'µT'
        self.unit_MicroTesla_factor_si_to_unit = ET.SubElement(unit_MicroTesla, 'FACTOR-SI-TO-UNIT')
        unit_MicroTesla_factor_si_to_unit.text = '1000000'
        self.unit_MicroTesla_offset_si_to_unit = ET.SubElement(unit_MicroTesla, 'OFFSET-SI-TO-UNIT')
        unit_MicroTesla_offset_si_to_unit.text = '0'
        self.unit_MicroTesla_physical_dimension_ref = ET.SubElement(unit_MicroTesla, 'PHYSICAL-DIMENSION-REF')
        unit_MicroTesla_physical_dimension_ref.text = 'M1TiNeg2INeg1'
        unit_MicroTesla_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliAmpr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliAmpr_short_name = ET.SubElement(unit_MilliAmpr, 'SHORT-NAME')
        unit_MilliAmpr_short_name.text = 'MilliAmpr'
        self.unit_MilliAmpr_long_name = ET.SubElement(unit_MilliAmpr, 'LONG-NAME')
        self.unit_MilliAmpr_l_4 = ET.SubElement(unit_MilliAmpr_long_name, 'L-4')
        unit_MilliAmpr_l_4.text = 'Milliampere'
        unit_MilliAmpr_l_4.attrib = {'L': 'EN'}
        self.unit_MilliAmpr_display_name = ET.SubElement(unit_MilliAmpr, 'DISPLAY-NAME')
        unit_MilliAmpr_display_name.text = 'mA/s'
        self.unit_MilliAmpr_factor_si_to_unit = ET.SubElement(unit_MilliAmpr, 'FACTOR-SI-TO-UNIT')
        unit_MilliAmpr_factor_si_to_unit.text = '1000'
        self.unit_MilliAmpr_offset_si_to_unit = ET.SubElement(unit_MilliAmpr, 'OFFSET-SI-TO-UNIT')
        unit_MilliAmpr_offset_si_to_unit.text = '0'
        self.unit_MilliAmpr_physical_dimension_ref = ET.SubElement(unit_MilliAmpr, 'PHYSICAL-DIMENSION-REF')
        unit_MilliAmpr_physical_dimension_ref.text = 'I1'
        unit_MilliAmpr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliAmprPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliAmprPerSec_short_name = ET.SubElement(unit_MilliAmprPerSec, 'SHORT-NAME')
        unit_MilliAmprPerSec_short_name.text = 'MilliAmprPerSec'
        self.unit_MilliAmprPerSec_long_name = ET.SubElement(unit_MilliAmprPerSec, 'LONG-NAME')
        self.unit_MilliAmprPerSec_l_4 = ET.SubElement(unit_MilliAmprPerSec_long_name, 'L-4')
        unit_MilliAmprPerSec_l_4.text = 'Milliampere Per Second'
        unit_MilliAmprPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MilliAmprPerSec_display_name = ET.SubElement(unit_MilliAmprPerSec, 'DISPLAY-NAME')
        unit_MilliAmprPerSec_display_name.text = 'mA/s'
        self.unit_MilliAmprPerSec_factor_si_to_unit = ET.SubElement(unit_MilliAmprPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MilliAmprPerSec_factor_si_to_unit.text = '1000'
        self.unit_MilliAmprPerSec_offset_si_to_unit = ET.SubElement(unit_MilliAmprPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MilliAmprPerSec_offset_si_to_unit.text = '0'
        self.unit_MilliAmprPerSec_physical_dimension_ref = ET.SubElement(unit_MilliAmprPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MilliAmprPerSec_physical_dimension_ref.text = 'TiNeg1I1'
        unit_MilliAmprPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliBar = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliBar_short_name = ET.SubElement(unit_MilliBar, 'SHORT-NAME')
        unit_MilliBar_short_name.text = 'MilliBar'
        self.unit_MilliBar_long_name = ET.SubElement(unit_MilliBar, 'LONG-NAME')
        self.unit_MilliBar_l_4 = ET.SubElement(unit_MilliBar_long_name, 'L-4')
        unit_MilliBar_l_4.text = 'Millibar'
        unit_MilliBar_l_4.attrib = {'L': 'EN'}
        self.unit_MilliBar_display_name = ET.SubElement(unit_MilliBar, 'DISPLAY-NAME')
        unit_MilliBar_display_name.text = 'mbar'
        self.unit_MilliBar_factor_si_to_unit = ET.SubElement(unit_MilliBar, 'FACTOR-SI-TO-UNIT')
        unit_MilliBar_factor_si_to_unit.text = '0.01'
        self.unit_MilliBar_offset_si_to_unit = ET.SubElement(unit_MilliBar, 'OFFSET-SI-TO-UNIT')
        unit_MilliBar_offset_si_to_unit.text = '0'
        self.unit_MilliBar_physical_dimension_ref = ET.SubElement(unit_MilliBar, 'PHYSICAL-DIMENSION-REF')
        unit_MilliBar_physical_dimension_ref.text = 'LenNeg1M1TiNeg2'
        unit_MilliBar_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliFrd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliFrd_short_name = ET.SubElement(unit_MilliFrd, 'SHORT-NAME')
        unit_MilliFrd_short_name.text = 'MilliFrd'
        self.unit_MilliFrd_long_name = ET.SubElement(unit_MilliFrd, 'LONG-NAME')
        self.unit_MilliFrd_l_4 = ET.SubElement(unit_MilliFrd_long_name, 'L-4')
        unit_MilliFrd_l_4.text = 'Millifarad'
        unit_MilliFrd_l_4.attrib = {'L': 'EN'}
        self.unit_MilliFrd_display_name = ET.SubElement(unit_MilliFrd, 'DISPLAY-NAME')
        unit_MilliFrd_display_name.text = 'mF'
        self.unit_MilliFrd_factor_si_to_unit = ET.SubElement(unit_MilliFrd, 'FACTOR-SI-TO-UNIT')
        unit_MilliFrd_factor_si_to_unit.text = '1000'
        self.unit_MilliFrd_offset_si_to_unit = ET.SubElement(unit_MilliFrd, 'OFFSET-SI-TO-UNIT')
        unit_MilliFrd_offset_si_to_unit.text = '0'
        self.unit_MilliFrd_physical_dimension_ref = ET.SubElement(unit_MilliFrd, 'PHYSICAL-DIMENSION-REF')
        unit_MilliFrd_physical_dimension_ref.text = 'LenNeg2MNeg1Ti4I2'
        unit_MilliFrd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliGr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliGr_short_name = ET.SubElement(unit_MilliGr, 'SHORT-NAME')
        unit_MilliGr_short_name.text = 'MilliGr'
        self.unit_MilliGr_long_name = ET.SubElement(unit_MilliGr, 'LONG-NAME')
        self.unit_MilliGr_l_4 = ET.SubElement(unit_MilliGr_long_name, 'L-4')
        unit_MilliGr_l_4.text = 'Milligram'
        unit_MilliGr_l_4.attrib = {'L': 'EN'}
        self.unit_MilliGr_display_name = ET.SubElement(unit_MilliGr, 'DISPLAY-NAME')
        unit_MilliGr_display_name.text = 'mg'
        self.unit_MilliGr_factor_si_to_unit = ET.SubElement(unit_MilliGr, 'FACTOR-SI-TO-UNIT')
        unit_MilliGr_factor_si_to_unit.text = '1000000'
        self.unit_MilliGr_offset_si_to_unit = ET.SubElement(unit_MilliGr, 'OFFSET-SI-TO-UNIT')
        unit_MilliGr_offset_si_to_unit.text = '0'
        self.unit_MilliGr_physical_dimension_ref = ET.SubElement(unit_MilliGr, 'PHYSICAL-DIMENSION-REF')
        unit_MilliGr_physical_dimension_ref.text = 'M1'
        unit_MilliGr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliGrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliGrPerSec_short_name = ET.SubElement(unit_MilliGrPerSec, 'SHORT-NAME')
        unit_MilliGrPerSec_short_name.text = 'MilliGrPerSec'
        self.unit_MilliGrPerSec_long_name = ET.SubElement(unit_MilliGrPerSec, 'LONG-NAME')
        self.unit_MilliGrPerSec_l_4 = ET.SubElement(unit_MilliGrPerSec_long_name, 'L-4')
        unit_MilliGrPerSec_l_4.text = 'Milligram Per Second'
        unit_MilliGrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MilliGrPerSec_display_name = ET.SubElement(unit_MilliGrPerSec, 'DISPLAY-NAME')
        unit_MilliGrPerSec_display_name.text = 'mg/s'
        self.unit_MilliGrPerSec_factor_si_to_unit = ET.SubElement(unit_MilliGrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MilliGrPerSec_factor_si_to_unit.text = '1000000'
        self.unit_MilliGrPerSec_offset_si_to_unit = ET.SubElement(unit_MilliGrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MilliGrPerSec_offset_si_to_unit.text = '0'
        self.unit_MilliGrPerSec_physical_dimension_ref = ET.SubElement(unit_MilliGrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MilliGrPerSec_physical_dimension_ref.text = 'M1TiNeg1'
        unit_MilliGrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliJou = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliJou_short_name = ET.SubElement(unit_MilliJou, 'SHORT-NAME')
        unit_MilliJou_short_name.text = 'MilliJou'
        self.unit_MilliJou_long_name = ET.SubElement(unit_MilliJou, 'LONG-NAME')
        self.unit_MilliJou_l_4 = ET.SubElement(unit_MilliJou_long_name, 'L-4')
        unit_MilliJou_l_4.text = 'Millijoule'
        unit_MilliJou_l_4.attrib = {'L': 'EN'}
        self.unit_MilliJou_display_name = ET.SubElement(unit_MilliJou, 'DISPLAY-NAME')
        unit_MilliJou_display_name.text = 'mJ'
        self.unit_MilliJou_factor_si_to_unit = ET.SubElement(unit_MilliJou, 'FACTOR-SI-TO-UNIT')
        unit_MilliJou_factor_si_to_unit.text = '1000'
        self.unit_MilliJou_offset_si_to_unit = ET.SubElement(unit_MilliJou, 'OFFSET-SI-TO-UNIT')
        unit_MilliJou_offset_si_to_unit.text = '0'
        self.unit_MilliJou_physical_dimension_ref = ET.SubElement(unit_MilliJou, 'PHYSICAL-DIMENSION-REF')
        unit_MilliJou_physical_dimension_ref.text = 'Len2M1TiNeg2_1'
        unit_MilliJou_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliLtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliLtr_short_name = ET.SubElement(unit_MilliLtr, 'SHORT-NAME')
        unit_MilliLtr_short_name.text = 'MilliLtr'
        self.unit_MilliLtr_long_name = ET.SubElement(unit_MilliLtr, 'LONG-NAME')
        self.unit_MilliLtr_l_4 = ET.SubElement(unit_MilliLtr_long_name, 'L-4')
        unit_MilliLtr_l_4.text = 'Milliliter'
        unit_MilliLtr_l_4.attrib = {'L': 'EN'}
        self.unit_MilliLtr_display_name = ET.SubElement(unit_MilliLtr, 'DISPLAY-NAME')
        unit_MilliLtr_display_name.text = 'ml'
        self.unit_MilliLtr_factor_si_to_unit = ET.SubElement(unit_MilliLtr, 'FACTOR-SI-TO-UNIT')
        unit_MilliLtr_factor_si_to_unit.text = '1000000'
        self.unit_MilliLtr_offset_si_to_unit = ET.SubElement(unit_MilliLtr, 'OFFSET-SI-TO-UNIT')
        unit_MilliLtr_offset_si_to_unit.text = '0'
        self.unit_MilliLtr_physical_dimension_ref = ET.SubElement(unit_MilliLtr, 'PHYSICAL-DIMENSION-REF')
        unit_MilliLtr_physical_dimension_ref.text = 'Len3'
        unit_MilliLtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliMtr_short_name = ET.SubElement(unit_MilliMtr, 'SHORT-NAME')
        unit_MilliMtr_short_name.text = 'MilliMtr'
        self.unit_MilliMtr_long_name = ET.SubElement(unit_MilliMtr, 'LONG-NAME')
        self.unit_MilliMtr_l_4 = ET.SubElement(unit_MilliMtr_long_name, 'L-4')
        unit_MilliMtr_l_4.text = 'Millimeter'
        unit_MilliMtr_l_4.attrib = {'L': 'EN'}
        self.unit_MilliMtr_display_name = ET.SubElement(unit_MilliMtr, 'DISPLAY-NAME')
        unit_MilliMtr_display_name.text = 'mm'
        self.unit_MilliMtr_factor_si_to_unit = ET.SubElement(unit_MilliMtr, 'FACTOR-SI-TO-UNIT')
        unit_MilliMtr_factor_si_to_unit.text = '1000'
        self.unit_MilliMtr_offset_si_to_unit = ET.SubElement(unit_MilliMtr, 'OFFSET-SI-TO-UNIT')
        unit_MilliMtr_offset_si_to_unit.text = '0'
        self.unit_MilliMtr_physical_dimension_ref = ET.SubElement(unit_MilliMtr, 'PHYSICAL-DIMENSION-REF')
        unit_MilliMtr_physical_dimension_ref.text = 'Len1'
        unit_MilliMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliMtrCubd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliMtrCubd_short_name = ET.SubElement(unit_MilliMtrCubd, 'SHORT-NAME')
        unit_MilliMtrCubd_short_name.text = 'MilliMtrCubd'
        self.unit_MilliMtrCubd_long_name = ET.SubElement(unit_MilliMtrCubd, 'LONG-NAME')
        self.unit_MilliMtrCubd_l_4 = ET.SubElement(unit_MilliMtrCubd_long_name, 'L-4')
        unit_MilliMtrCubd_l_4.text = 'Cubic Millimeter'
        unit_MilliMtrCubd_l_4.attrib = {'L': 'EN'}
        self.unit_MilliMtrCubd_display_name = ET.SubElement(unit_MilliMtrCubd, 'DISPLAY-NAME')
        unit_MilliMtrCubd_display_name.text = 'mm^3'
        self.unit_MilliMtrCubd_factor_si_to_unit = ET.SubElement(unit_MilliMtrCubd, 'FACTOR-SI-TO-UNIT')
        unit_MilliMtrCubd_factor_si_to_unit.text = '1000000000'
        self.unit_MilliMtrCubd_offset_si_to_unit = ET.SubElement(unit_MilliMtrCubd, 'OFFSET-SI-TO-UNIT')
        unit_MilliMtrCubd_offset_si_to_unit.text = '0'
        self.unit_MilliMtrCubd_physical_dimension_ref = ET.SubElement(unit_MilliMtrCubd, 'PHYSICAL-DIMENSION-REF')
        unit_MilliMtrCubd_physical_dimension_ref.text = 'Len3'
        unit_MilliMtrCubd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliMtrCubdPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliMtrCubdPerSec_short_name = ET.SubElement(unit_MilliMtrCubdPerSec, 'SHORT-NAME')
        unit_MilliMtrCubdPerSec_short_name.text = 'MilliMtrCubdPerSec'
        self.unit_MilliMtrCubdPerSec_long_name = ET.SubElement(unit_MilliMtrCubdPerSec, 'LONG-NAME')
        self.unit_MilliMtrCubdPerSec_l_4 = ET.SubElement(unit_MilliMtrCubdPerSec_long_name, 'L-4')
        unit_MilliMtrCubdPerSec_l_4.text = 'Cubic Millimeter Per Second'
        unit_MilliMtrCubdPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MilliMtrCubdPerSec_display_name = ET.SubElement(unit_MilliMtrCubdPerSec, 'DISPLAY-NAME')
        unit_MilliMtrCubdPerSec_display_name.text = '(mm^3)/s'
        self.unit_MilliMtrCubdPerSec_factor_si_to_unit = ET.SubElement(unit_MilliMtrCubdPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MilliMtrCubdPerSec_factor_si_to_unit.text = '1000000000'
        self.unit_MilliMtrCubdPerSec_offset_si_to_unit = ET.SubElement(unit_MilliMtrCubdPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MilliMtrCubdPerSec_offset_si_to_unit.text = '0'
        self.unit_MilliMtrCubdPerSec_physical_dimension_ref = ET.SubElement(unit_MilliMtrCubdPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MilliMtrCubdPerSec_physical_dimension_ref.text = 'Len3TiNeg1'
        unit_MilliMtrCubdPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliOhm = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliOhm_short_name = ET.SubElement(unit_MilliOhm, 'SHORT-NAME')
        unit_MilliOhm_short_name.text = 'MilliOhm'
        self.unit_MilliOhm_long_name = ET.SubElement(unit_MilliOhm, 'LONG-NAME')
        self.unit_MilliOhm_l_4 = ET.SubElement(unit_MilliOhm_long_name, 'L-4')
        unit_MilliOhm_l_4.text = 'Milliohm'
        unit_MilliOhm_l_4.attrib = {'L': 'EN'}
        self.unit_MilliOhm_display_name = ET.SubElement(unit_MilliOhm, 'DISPLAY-NAME')
        unit_MilliOhm_display_name.text = 'mΩ'
        self.unit_MilliOhm_factor_si_to_unit = ET.SubElement(unit_MilliOhm, 'FACTOR-SI-TO-UNIT')
        unit_MilliOhm_factor_si_to_unit.text = '1000'
        self.unit_MilliOhm_offset_si_to_unit = ET.SubElement(unit_MilliOhm, 'OFFSET-SI-TO-UNIT')
        unit_MilliOhm_offset_si_to_unit.text = '0'
        self.unit_MilliOhm_physical_dimension_ref = ET.SubElement(unit_MilliOhm, 'PHYSICAL-DIMENSION-REF')
        unit_MilliOhm_physical_dimension_ref.text = 'Len2M1TiNeg3INeg2'
        unit_MilliOhm_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliSec_short_name = ET.SubElement(unit_MilliSec, 'SHORT-NAME')
        unit_MilliSec_short_name.text = 'MilliSec'
        self.unit_MilliSec_long_name = ET.SubElement(unit_MilliSec, 'LONG-NAME')
        self.unit_MilliSec_l_4 = ET.SubElement(unit_MilliSec_long_name, 'L-4')
        unit_MilliSec_l_4.text = 'Millisecond'
        unit_MilliSec_l_4.attrib = {'L': 'EN'}
        self.unit_MilliSec_display_name = ET.SubElement(unit_MilliSec, 'DISPLAY-NAME')
        unit_MilliSec_display_name.text = 'ms'
        self.unit_MilliSec_factor_si_to_unit = ET.SubElement(unit_MilliSec, 'FACTOR-SI-TO-UNIT')
        unit_MilliSec_factor_si_to_unit.text = '1000'
        self.unit_MilliSec_offset_si_to_unit = ET.SubElement(unit_MilliSec, 'OFFSET-SI-TO-UNIT')
        unit_MilliSec_offset_si_to_unit.text = '0'
        self.unit_MilliSec_physical_dimension_ref = ET.SubElement(unit_MilliSec, 'PHYSICAL-DIMENSION-REF')
        unit_MilliSec_physical_dimension_ref.text = 'Ti1'
        unit_MilliSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliTesla = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliTesla_short_name = ET.SubElement(unit_MilliTesla, 'SHORT-NAME')
        unit_MilliTesla_short_name.text = 'MilliTesla'
        self.unit_MilliTesla_long_name = ET.SubElement(unit_MilliTesla, 'LONG-NAME')
        self.unit_MilliTesla_l_4 = ET.SubElement(unit_MilliTesla_long_name, 'L-4')
        unit_MilliTesla_l_4.text = 'Millitesla'
        unit_MilliTesla_l_4.attrib = {'L': 'EN'}
        self.unit_MilliTesla_display_name = ET.SubElement(unit_MilliTesla, 'DISPLAY-NAME')
        unit_MilliTesla_display_name.text = 'mT'
        self.unit_MilliTesla_factor_si_to_unit = ET.SubElement(unit_MilliTesla, 'FACTOR-SI-TO-UNIT')
        unit_MilliTesla_factor_si_to_unit.text = '1000'
        self.unit_MilliTesla_offset_si_to_unit = ET.SubElement(unit_MilliTesla, 'OFFSET-SI-TO-UNIT')
        unit_MilliTesla_offset_si_to_unit.text = '0'
        self.unit_MilliTesla_physical_dimension_ref = ET.SubElement(unit_MilliTesla, 'PHYSICAL-DIMENSION-REF')
        unit_MilliTesla_physical_dimension_ref.text = 'M1TiNeg2INeg1'
        unit_MilliTesla_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliVolt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliVolt_short_name = ET.SubElement(unit_MilliVolt, 'SHORT-NAME')
        unit_MilliVolt_short_name.text = 'MilliVolt'
        self.unit_MilliVolt_long_name = ET.SubElement(unit_MilliVolt, 'LONG-NAME')
        self.unit_MilliVolt_l_4 = ET.SubElement(unit_MilliVolt_long_name, 'L-4')
        unit_MilliVolt_l_4.text = 'Millivolt'
        unit_MilliVolt_l_4.attrib = {'L': 'EN'}
        self.unit_MilliVolt_display_name = ET.SubElement(unit_MilliVolt, 'DISPLAY-NAME')
        unit_MilliVolt_display_name.text = 'mV'
        self.unit_MilliVolt_factor_si_to_unit = ET.SubElement(unit_MilliVolt, 'FACTOR-SI-TO-UNIT')
        unit_MilliVolt_factor_si_to_unit.text = '1000'
        self.unit_MilliVolt_offset_si_to_unit = ET.SubElement(unit_MilliVolt, 'OFFSET-SI-TO-UNIT')
        unit_MilliVolt_offset_si_to_unit.text = '0'
        self.unit_MilliVolt_physical_dimension_ref = ET.SubElement(unit_MilliVolt, 'PHYSICAL-DIMENSION-REF')
        unit_MilliVolt_physical_dimension_ref.text = 'Len2M1TiNeg3INeg1'
        unit_MilliVolt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliVoltPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliVoltPerSec_short_name = ET.SubElement(unit_MilliVoltPerSec, 'SHORT-NAME')
        unit_MilliVoltPerSec_short_name.text = 'MilliVoltPerSec'
        self.unit_MilliVoltPerSec_long_name = ET.SubElement(unit_MilliVoltPerSec, 'LONG-NAME')
        self.unit_MilliVoltPerSec_l_4 = ET.SubElement(unit_MilliVoltPerSec_long_name, 'L-4')
        unit_MilliVoltPerSec_l_4.text = 'Millivolt Per Second'
        unit_MilliVoltPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MilliVoltPerSec_display_name = ET.SubElement(unit_MilliVoltPerSec, 'DISPLAY-NAME')
        unit_MilliVoltPerSec_display_name.text = 'mV/s'
        self.unit_MilliVoltPerSec_factor_si_to_unit = ET.SubElement(unit_MilliVoltPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MilliVoltPerSec_factor_si_to_unit.text = '1000'
        self.unit_MilliVoltPerSec_offset_si_to_unit = ET.SubElement(unit_MilliVoltPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MilliVoltPerSec_offset_si_to_unit.text = '0'
        self.unit_MilliVoltPerSec_physical_dimension_ref = ET.SubElement(unit_MilliVoltPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MilliVoltPerSec_physical_dimension_ref.text = 'Len2M1TiNeg4INeg1'
        unit_MilliVoltPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MilliWatt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MilliWatt_short_name = ET.SubElement(unit_MilliWatt, 'SHORT-NAME')
        unit_MilliWatt_short_name.text = 'MilliWatt'
        self.unit_MilliWatt_long_name = ET.SubElement(unit_MilliWatt, 'LONG-NAME')
        self.unit_MilliWatt_l_4 = ET.SubElement(unit_MilliWatt_long_name, 'L-4')
        unit_MilliWatt_l_4.text = 'Milliwatt'
        unit_MilliWatt_l_4.attrib = {'L': 'EN'}
        self.unit_MilliWatt_display_name = ET.SubElement(unit_MilliWatt, 'DISPLAY-NAME')
        unit_MilliWatt_display_name.text = 'mW'
        self.unit_MilliWatt_factor_si_to_unit = ET.SubElement(unit_MilliWatt, 'FACTOR-SI-TO-UNIT')
        unit_MilliWatt_factor_si_to_unit.text = '1000'
        self.unit_MilliWatt_offset_si_to_unit = ET.SubElement(unit_MilliWatt, 'OFFSET-SI-TO-UNIT')
        unit_MilliWatt_offset_si_to_unit.text = '0'
        self.unit_MilliWatt_physical_dimension_ref = ET.SubElement(unit_MilliWatt, 'PHYSICAL-DIMENSION-REF')
        unit_MilliWatt_physical_dimension_ref.text = 'Len2M1TiNeg3_1'
        unit_MilliWatt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Mins = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Mins_short_name = ET.SubElement(unit_Mins, 'SHORT-NAME')
        unit_Mins_short_name.text = 'Mins'
        self.unit_Mins_long_name = ET.SubElement(unit_Mins, 'LONG-NAME')
        self.unit_Mins_l_4 = ET.SubElement(unit_Mins_long_name, 'L-4')
        unit_Mins_l_4.text = 'Minute'
        unit_Mins_l_4.attrib = {'L': 'EN'}
        self.unit_Mins_display_name = ET.SubElement(unit_Mins, 'DISPLAY-NAME')
        unit_Mins_display_name.text = 'min'
        self.unit_Mins_factor_si_to_unit = ET.SubElement(unit_Mins, 'FACTOR-SI-TO-UNIT')
        unit_Mins_factor_si_to_unit.text = '0.0166666666666667'
        self.unit_Mins_offset_si_to_unit = ET.SubElement(unit_Mins, 'OFFSET-SI-TO-UNIT')
        unit_Mins_offset_si_to_unit.text = '0'
        self.unit_Mins_physical_dimension_ref = ET.SubElement(unit_Mins, 'PHYSICAL-DIMENSION-REF')
        unit_Mins_physical_dimension_ref.text = 'Ti1'
        unit_Mins_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Ml = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Ml_short_name = ET.SubElement(unit_Ml, 'SHORT-NAME')
        unit_Ml_short_name.text = 'Ml'
        self.unit_Ml_long_name = ET.SubElement(unit_Ml, 'LONG-NAME')
        self.unit_Ml_l_4 = ET.SubElement(unit_Ml_long_name, 'L-4')
        unit_Ml_l_4.text = 'Mile'
        unit_Ml_l_4.attrib = {'L': 'EN'}
        self.unit_Ml_display_name = ET.SubElement(unit_Ml, 'DISPLAY-NAME')
        unit_Ml_display_name.text = 'mile'
        self.unit_Ml_factor_si_to_unit = ET.SubElement(unit_Ml, 'FACTOR-SI-TO-UNIT')
        unit_Ml_factor_si_to_unit.text = '0.000621371192237333'
        self.unit_Ml_offset_si_to_unit = ET.SubElement(unit_Ml, 'OFFSET-SI-TO-UNIT')
        unit_Ml_offset_si_to_unit.text = '0'
        self.unit_Ml_physical_dimension_ref = ET.SubElement(unit_Ml, 'PHYSICAL-DIMENSION-REF')
        unit_Ml_physical_dimension_ref.text = 'Len1'
        unit_Ml_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MlPerHr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MlPerHr_short_name = ET.SubElement(unit_MlPerHr, 'SHORT-NAME')
        unit_MlPerHr_short_name.text = 'MlPerHr'
        self.unit_MlPerHr_long_name = ET.SubElement(unit_MlPerHr, 'LONG-NAME')
        self.unit_MlPerHr_l_4 = ET.SubElement(unit_MlPerHr_long_name, 'L-4')
        unit_MlPerHr_l_4.text = 'Miles Per Hour'
        unit_MlPerHr_l_4.attrib = {'L': 'EN'}
        self.unit_MlPerHr_display_name = ET.SubElement(unit_MlPerHr, 'DISPLAY-NAME')
        unit_MlPerHr_display_name.text = 'mph'
        self.unit_MlPerHr_factor_si_to_unit = ET.SubElement(unit_MlPerHr, 'FACTOR-SI-TO-UNIT')
        unit_MlPerHr_factor_si_to_unit.text = '2.2369362920544'
        self.unit_MlPerHr_offset_si_to_unit = ET.SubElement(unit_MlPerHr, 'OFFSET-SI-TO-UNIT')
        unit_MlPerHr_offset_si_to_unit.text = '0'
        self.unit_MlPerHr_physical_dimension_ref = ET.SubElement(unit_MlPerHr, 'PHYSICAL-DIMENSION-REF')
        unit_MlPerHr_physical_dimension_ref.text = 'Len1TiNeg1'
        unit_MlPerHr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Mol = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Mol_short_name = ET.SubElement(unit_Mol, 'SHORT-NAME')
        unit_Mol_short_name.text = 'Mol'
        self.unit_Mol_long_name = ET.SubElement(unit_Mol, 'LONG-NAME')
        self.unit_Mol_l_4 = ET.SubElement(unit_Mol_long_name, 'L-4')
        unit_Mol_l_4.text = 'Mole'
        unit_Mol_l_4.attrib = {'L': 'EN'}
        self.unit_Mol_display_name = ET.SubElement(unit_Mol, 'DISPLAY-NAME')
        unit_Mol_display_name.text = 'mol'
        self.unit_Mol_factor_si_to_unit = ET.SubElement(unit_Mol, 'FACTOR-SI-TO-UNIT')
        unit_Mol_factor_si_to_unit.text = '1'
        self.unit_Mol_offset_si_to_unit = ET.SubElement(unit_Mol, 'OFFSET-SI-TO-UNIT')
        unit_Mol_offset_si_to_unit.text = '0'
        self.unit_Mol_physical_dimension_ref = ET.SubElement(unit_Mol, 'PHYSICAL-DIMENSION-REF')
        unit_Mol_physical_dimension_ref.text = 'Amnt1'
        unit_Mol_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MolPerLtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MolPerLtr_short_name = ET.SubElement(unit_MolPerLtr, 'SHORT-NAME')
        unit_MolPerLtr_short_name.text = 'MolPerLtr'
        self.unit_MolPerLtr_long_name = ET.SubElement(unit_MolPerLtr, 'LONG-NAME')
        self.unit_MolPerLtr_l_4 = ET.SubElement(unit_MolPerLtr_long_name, 'L-4')
        unit_MolPerLtr_l_4.text = 'Mole Per Liter'
        unit_MolPerLtr_l_4.attrib = {'L': 'EN'}
        self.unit_MolPerLtr_display_name = ET.SubElement(unit_MolPerLtr, 'DISPLAY-NAME')
        unit_MolPerLtr_display_name.text = 'mol/l'
        self.unit_MolPerLtr_factor_si_to_unit = ET.SubElement(unit_MolPerLtr, 'FACTOR-SI-TO-UNIT')
        unit_MolPerLtr_factor_si_to_unit.text = '0.001'
        self.unit_MolPerLtr_offset_si_to_unit = ET.SubElement(unit_MolPerLtr, 'OFFSET-SI-TO-UNIT')
        unit_MolPerLtr_offset_si_to_unit.text = '0'
        self.unit_MolPerLtr_physical_dimension_ref = ET.SubElement(unit_MolPerLtr, 'PHYSICAL-DIMENSION-REF')
        unit_MolPerLtr_physical_dimension_ref.text = 'LenNeg3Amnt1'
        unit_MolPerLtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MolPerLtrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MolPerLtrPerSec_short_name = ET.SubElement(unit_MolPerLtrPerSec, 'SHORT-NAME')
        unit_MolPerLtrPerSec_short_name.text = 'MolPerLtrPerSec'
        self.unit_MolPerLtrPerSec_long_name = ET.SubElement(unit_MolPerLtrPerSec, 'LONG-NAME')
        self.unit_MolPerLtrPerSec_l_4 = ET.SubElement(unit_MolPerLtrPerSec_long_name, 'L-4')
        unit_MolPerLtrPerSec_l_4.text = 'Mol Per Liter Per Second'
        unit_MolPerLtrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MolPerLtrPerSec_display_name = ET.SubElement(unit_MolPerLtrPerSec, 'DISPLAY-NAME')
        unit_MolPerLtrPerSec_display_name.text = '(mol/l)/s'
        self.unit_MolPerLtrPerSec_factor_si_to_unit = ET.SubElement(unit_MolPerLtrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MolPerLtrPerSec_factor_si_to_unit.text = '0.001'
        self.unit_MolPerLtrPerSec_offset_si_to_unit = ET.SubElement(unit_MolPerLtrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MolPerLtrPerSec_offset_si_to_unit.text = '0'
        self.unit_MolPerLtrPerSec_physical_dimension_ref = ET.SubElement(unit_MolPerLtrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MolPerLtrPerSec_physical_dimension_ref.text = 'LenNeg3TiNeg1Amnt1'
        unit_MolPerLtrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MolPerMtrCubd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MolPerMtrCubd_short_name = ET.SubElement(unit_MolPerMtrCubd, 'SHORT-NAME')
        unit_MolPerMtrCubd_short_name.text = 'MolPerMtrCubd'
        self.unit_MolPerMtrCubd_long_name = ET.SubElement(unit_MolPerMtrCubd, 'LONG-NAME')
        self.unit_MolPerMtrCubd_l_4 = ET.SubElement(unit_MolPerMtrCubd_long_name, 'L-4')
        unit_MolPerMtrCubd_l_4.text = 'Mole Per Cubic Meter'
        unit_MolPerMtrCubd_l_4.attrib = {'L': 'EN'}
        self.unit_MolPerMtrCubd_display_name = ET.SubElement(unit_MolPerMtrCubd, 'DISPLAY-NAME')
        unit_MolPerMtrCubd_display_name.text = 'mol/(m^3)'
        self.unit_MolPerMtrCubd_factor_si_to_unit = ET.SubElement(unit_MolPerMtrCubd, 'FACTOR-SI-TO-UNIT')
        unit_MolPerMtrCubd_factor_si_to_unit.text = '1'
        self.unit_MolPerMtrCubd_offset_si_to_unit = ET.SubElement(unit_MolPerMtrCubd, 'OFFSET-SI-TO-UNIT')
        unit_MolPerMtrCubd_offset_si_to_unit.text = '0'
        self.unit_MolPerMtrCubd_physical_dimension_ref = ET.SubElement(unit_MolPerMtrCubd, 'PHYSICAL-DIMENSION-REF')
        unit_MolPerMtrCubd_physical_dimension_ref.text = 'LenNeg3Amnt1'
        unit_MolPerMtrCubd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MolPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MolPerSec_short_name = ET.SubElement(unit_MolPerSec, 'SHORT-NAME')
        unit_MolPerSec_short_name.text = 'MolPerSec'
        self.unit_MolPerSec_long_name = ET.SubElement(unit_MolPerSec, 'LONG-NAME')
        self.unit_MolPerSec_l_4 = ET.SubElement(unit_MolPerSec_long_name, 'L-4')
        unit_MolPerSec_l_4.text = 'Mole Per Second'
        unit_MolPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MolPerSec_display_name = ET.SubElement(unit_MolPerSec, 'DISPLAY-NAME')
        unit_MolPerSec_display_name.text = 'mol/s'
        self.unit_MolPerSec_factor_si_to_unit = ET.SubElement(unit_MolPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MolPerSec_factor_si_to_unit.text = '1'
        self.unit_MolPerSec_offset_si_to_unit = ET.SubElement(unit_MolPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MolPerSec_offset_si_to_unit.text = '0'
        self.unit_MolPerSec_physical_dimension_ref = ET.SubElement(unit_MolPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MolPerSec_physical_dimension_ref.text = 'TiNeg1Amnt1'
        unit_MolPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Mtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Mtr_short_name = ET.SubElement(unit_Mtr, 'SHORT-NAME')
        unit_Mtr_short_name.text = 'Mtr'
        self.unit_Mtr_long_name = ET.SubElement(unit_Mtr, 'LONG-NAME')
        self.unit_Mtr_l_4 = ET.SubElement(unit_Mtr_long_name, 'L-4')
        unit_Mtr_l_4.text = 'Meter'
        unit_Mtr_l_4.attrib = {'L': 'EN'}
        self.unit_Mtr_display_name = ET.SubElement(unit_Mtr, 'DISPLAY-NAME')
        unit_Mtr_display_name.text = 'm'
        self.unit_Mtr_factor_si_to_unit = ET.SubElement(unit_Mtr, 'FACTOR-SI-TO-UNIT')
        unit_Mtr_factor_si_to_unit.text = '1'
        self.unit_Mtr_offset_si_to_unit = ET.SubElement(unit_Mtr, 'OFFSET-SI-TO-UNIT')
        unit_Mtr_offset_si_to_unit.text = '0'
        self.unit_Mtr_physical_dimension_ref = ET.SubElement(unit_Mtr, 'PHYSICAL-DIMENSION-REF')
        unit_Mtr_physical_dimension_ref.text = 'Len1'
        unit_Mtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrCubd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrCubd_short_name = ET.SubElement(unit_MtrCubd, 'SHORT-NAME')
        unit_MtrCubd_short_name.text = 'MtrCubd'
        self.unit_MtrCubd_long_name = ET.SubElement(unit_MtrCubd, 'LONG-NAME')
        self.unit_MtrCubd_l_4 = ET.SubElement(unit_MtrCubd_long_name, 'L-4')
        unit_MtrCubd_l_4.text = 'Cubic Meter'
        unit_MtrCubd_l_4.attrib = {'L': 'EN'}
        self.unit_MtrCubd_display_name = ET.SubElement(unit_MtrCubd, 'DISPLAY-NAME')
        unit_MtrCubd_display_name.text = 'm^3'
        self.unit_MtrCubd_factor_si_to_unit = ET.SubElement(unit_MtrCubd, 'FACTOR-SI-TO-UNIT')
        unit_MtrCubd_factor_si_to_unit.text = '1'
        self.unit_MtrCubd_offset_si_to_unit = ET.SubElement(unit_MtrCubd, 'OFFSET-SI-TO-UNIT')
        unit_MtrCubd_offset_si_to_unit.text = '0'
        self.unit_MtrCubd_physical_dimension_ref = ET.SubElement(unit_MtrCubd, 'PHYSICAL-DIMENSION-REF')
        unit_MtrCubd_physical_dimension_ref.text = 'Len3'
        unit_MtrCubd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrCubdPerHr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrCubdPerHr_short_name = ET.SubElement(unit_MtrCubdPerHr, 'SHORT-NAME')
        unit_MtrCubdPerHr_short_name.text = 'MtrCubdPerHr'
        self.unit_MtrCubdPerHr_long_name = ET.SubElement(unit_MtrCubdPerHr, 'LONG-NAME')
        self.unit_MtrCubdPerHr_l_4 = ET.SubElement(unit_MtrCubdPerHr_long_name, 'L-4')
        unit_MtrCubdPerHr_l_4.text = 'Cubic Meter Per Hour'
        unit_MtrCubdPerHr_l_4.attrib = {'L': 'EN'}
        self.unit_MtrCubdPerHr_display_name = ET.SubElement(unit_MtrCubdPerHr, 'DISPLAY-NAME')
        unit_MtrCubdPerHr_display_name.text = '(m^3)/h'
        self.unit_MtrCubdPerHr_factor_si_to_unit = ET.SubElement(unit_MtrCubdPerHr, 'FACTOR-SI-TO-UNIT')
        unit_MtrCubdPerHr_factor_si_to_unit.text = '3600'
        self.unit_MtrCubdPerHr_offset_si_to_unit = ET.SubElement(unit_MtrCubdPerHr, 'OFFSET-SI-TO-UNIT')
        unit_MtrCubdPerHr_offset_si_to_unit.text = '0'
        self.unit_MtrCubdPerHr_physical_dimension_ref = ET.SubElement(unit_MtrCubdPerHr, 'PHYSICAL-DIMENSION-REF')
        unit_MtrCubdPerHr_physical_dimension_ref.text = 'Len3TiNeg1'
        unit_MtrCubdPerHr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrCubdPerHrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrCubdPerHrPerSec_short_name = ET.SubElement(unit_MtrCubdPerHrPerSec, 'SHORT-NAME')
        unit_MtrCubdPerHrPerSec_short_name.text = 'MtrCubdPerHrPerSec'
        self.unit_MtrCubdPerHrPerSec_long_name = ET.SubElement(unit_MtrCubdPerHrPerSec, 'LONG-NAME')
        self.unit_MtrCubdPerHrPerSec_l_4 = ET.SubElement(unit_MtrCubdPerHrPerSec_long_name, 'L-4')
        unit_MtrCubdPerHrPerSec_l_4.text = 'Cubic Meter Per Hour Per Second'
        unit_MtrCubdPerHrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MtrCubdPerHrPerSec_display_name = ET.SubElement(unit_MtrCubdPerHrPerSec, 'DISPLAY-NAME')
        unit_MtrCubdPerHrPerSec_display_name.text = '(m^3)/(h*s)'
        self.unit_MtrCubdPerHrPerSec_factor_si_to_unit = ET.SubElement(unit_MtrCubdPerHrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MtrCubdPerHrPerSec_factor_si_to_unit.text = '3600'
        self.unit_MtrCubdPerHrPerSec_offset_si_to_unit = ET.SubElement(unit_MtrCubdPerHrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MtrCubdPerHrPerSec_offset_si_to_unit.text = '0'
        self.unit_MtrCubdPerHrPerSec_physical_dimension_ref = ET.SubElement(unit_MtrCubdPerHrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MtrCubdPerHrPerSec_physical_dimension_ref.text = 'Len3TiNeg2'
        unit_MtrCubdPerHrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrCubdPerKiloGr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrCubdPerKiloGr_short_name = ET.SubElement(unit_MtrCubdPerKiloGr, 'SHORT-NAME')
        unit_MtrCubdPerKiloGr_short_name.text = 'MtrCubdPerKiloGr'
        self.unit_MtrCubdPerKiloGr_long_name = ET.SubElement(unit_MtrCubdPerKiloGr, 'LONG-NAME')
        self.unit_MtrCubdPerKiloGr_l_4 = ET.SubElement(unit_MtrCubdPerKiloGr_long_name, 'L-4')
        unit_MtrCubdPerKiloGr_l_4.text = 'Cubic Meter Per Kilogram'
        unit_MtrCubdPerKiloGr_l_4.attrib = {'L': 'EN'}
        self.unit_MtrCubdPerKiloGr_display_name = ET.SubElement(unit_MtrCubdPerKiloGr, 'DISPLAY-NAME')
        unit_MtrCubdPerKiloGr_display_name.text = '(m^3)/kg'
        self.unit_MtrCubdPerKiloGr_factor_si_to_unit = ET.SubElement(unit_MtrCubdPerKiloGr, 'FACTOR-SI-TO-UNIT')
        unit_MtrCubdPerKiloGr_factor_si_to_unit.text = '1'
        self.unit_MtrCubdPerKiloGr_offset_si_to_unit = ET.SubElement(unit_MtrCubdPerKiloGr, 'OFFSET-SI-TO-UNIT')
        unit_MtrCubdPerKiloGr_offset_si_to_unit.text = '0'
        self.unit_MtrCubdPerKiloGr_physical_dimension_ref = ET.SubElement(unit_MtrCubdPerKiloGr, 'PHYSICAL-DIMENSION-REF')
        unit_MtrCubdPerKiloGr_physical_dimension_ref.text = 'Len3MNeg1'
        unit_MtrCubdPerKiloGr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrPerSec_short_name = ET.SubElement(unit_MtrPerSec, 'SHORT-NAME')
        unit_MtrPerSec_short_name.text = 'MtrPerSec'
        self.unit_MtrPerSec_long_name = ET.SubElement(unit_MtrPerSec, 'LONG-NAME')
        self.unit_MtrPerSec_l_4 = ET.SubElement(unit_MtrPerSec_long_name, 'L-4')
        unit_MtrPerSec_l_4.text = 'Meter Per Second'
        unit_MtrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MtrPerSec_display_name = ET.SubElement(unit_MtrPerSec, 'DISPLAY-NAME')
        unit_MtrPerSec_display_name.text = 'm/s'
        self.unit_MtrPerSec_factor_si_to_unit = ET.SubElement(unit_MtrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MtrPerSec_factor_si_to_unit.text = '1'
        self.unit_MtrPerSec_offset_si_to_unit = ET.SubElement(unit_MtrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MtrPerSec_offset_si_to_unit.text = '0'
        self.unit_MtrPerSec_physical_dimension_ref = ET.SubElement(unit_MtrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MtrPerSec_physical_dimension_ref.text = 'Len1TiNeg1'
        unit_MtrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrPerSecCubd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrPerSecCubd_short_name = ET.SubElement(unit_MtrPerSecCubd, 'SHORT-NAME')
        unit_MtrPerSecCubd_short_name.text = 'MtrPerSecCubd'
        self.unit_MtrPerSecCubd_long_name = ET.SubElement(unit_MtrPerSecCubd, 'LONG-NAME')
        self.unit_MtrPerSecCubd_l_4 = ET.SubElement(unit_MtrPerSecCubd_long_name, 'L-4')
        unit_MtrPerSecCubd_l_4.text = 'Meter Per Cubic Second'
        unit_MtrPerSecCubd_l_4.attrib = {'L': 'EN'}
        self.unit_MtrPerSecCubd_display_name = ET.SubElement(unit_MtrPerSecCubd, 'DISPLAY-NAME')
        unit_MtrPerSecCubd_display_name.text = 'm/(s^3)'
        self.unit_MtrPerSecCubd_factor_si_to_unit = ET.SubElement(unit_MtrPerSecCubd, 'FACTOR-SI-TO-UNIT')
        unit_MtrPerSecCubd_factor_si_to_unit.text = '1'
        self.unit_MtrPerSecCubd_offset_si_to_unit = ET.SubElement(unit_MtrPerSecCubd, 'OFFSET-SI-TO-UNIT')
        unit_MtrPerSecCubd_offset_si_to_unit.text = '0'
        self.unit_MtrPerSecCubd_physical_dimension_ref = ET.SubElement(unit_MtrPerSecCubd, 'PHYSICAL-DIMENSION-REF')
        unit_MtrPerSecCubd_physical_dimension_ref.text = 'Len1TiNeg3'
        unit_MtrPerSecCubd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrPerSecSqd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrPerSecSqd_short_name = ET.SubElement(unit_MtrPerSecSqd, 'SHORT-NAME')
        unit_MtrPerSecSqd_short_name.text = 'MtrPerSecSqd'
        self.unit_MtrPerSecSqd_long_name = ET.SubElement(unit_MtrPerSecSqd, 'LONG-NAME')
        self.unit_MtrPerSecSqd_l_4 = ET.SubElement(unit_MtrPerSecSqd_long_name, 'L-4')
        unit_MtrPerSecSqd_l_4.text = 'Meter Per Square Second'
        unit_MtrPerSecSqd_l_4.attrib = {'L': 'EN'}
        self.unit_MtrPerSecSqd_display_name = ET.SubElement(unit_MtrPerSecSqd, 'DISPLAY-NAME')
        unit_MtrPerSecSqd_display_name.text = 'm/(s^2)'
        self.unit_MtrPerSecSqd_factor_si_to_unit = ET.SubElement(unit_MtrPerSecSqd, 'FACTOR-SI-TO-UNIT')
        unit_MtrPerSecSqd_factor_si_to_unit.text = '1'
        self.unit_MtrPerSecSqd_offset_si_to_unit = ET.SubElement(unit_MtrPerSecSqd, 'OFFSET-SI-TO-UNIT')
        unit_MtrPerSecSqd_offset_si_to_unit.text = '0'
        self.unit_MtrPerSecSqd_physical_dimension_ref = ET.SubElement(unit_MtrPerSecSqd, 'PHYSICAL-DIMENSION-REF')
        unit_MtrPerSecSqd_physical_dimension_ref.text = 'Len1TiNeg2'
        unit_MtrPerSecSqd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrSqd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrSqd_short_name = ET.SubElement(unit_MtrSqd, 'SHORT-NAME')
        unit_MtrSqd_short_name.text = 'MtrSqd'
        self.unit_MtrSqd_long_name = ET.SubElement(unit_MtrSqd, 'LONG-NAME')
        self.unit_MtrSqd_l_4 = ET.SubElement(unit_MtrSqd_long_name, 'L-4')
        unit_MtrSqd_l_4.text = 'Square Meter'
        unit_MtrSqd_l_4.attrib = {'L': 'EN'}
        self.unit_MtrSqd_display_name = ET.SubElement(unit_MtrSqd, 'DISPLAY-NAME')
        unit_MtrSqd_display_name.text = 'm^2'
        self.unit_MtrSqd_factor_si_to_unit = ET.SubElement(unit_MtrSqd, 'FACTOR-SI-TO-UNIT')
        unit_MtrSqd_factor_si_to_unit.text = '1'
        self.unit_MtrSqd_offset_si_to_unit = ET.SubElement(unit_MtrSqd, 'OFFSET-SI-TO-UNIT')
        unit_MtrSqd_offset_si_to_unit.text = '0'
        self.unit_MtrSqd_physical_dimension_ref = ET.SubElement(unit_MtrSqd, 'PHYSICAL-DIMENSION-REF')
        unit_MtrSqd_physical_dimension_ref.text = 'Len2'
        unit_MtrSqd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_MtrSqdPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_MtrSqdPerSec_short_name = ET.SubElement(unit_MtrSqdPerSec, 'SHORT-NAME')
        unit_MtrSqdPerSec_short_name.text = 'MtrSqdPerSec'
        self.unit_MtrSqdPerSec_long_name = ET.SubElement(unit_MtrSqdPerSec, 'LONG-NAME')
        self.unit_MtrSqdPerSec_l_4 = ET.SubElement(unit_MtrSqdPerSec_long_name, 'L-4')
        unit_MtrSqdPerSec_l_4.text = 'Square Meter Per Second'
        unit_MtrSqdPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_MtrSqdPerSec_display_name = ET.SubElement(unit_MtrSqdPerSec, 'DISPLAY-NAME')
        unit_MtrSqdPerSec_display_name.text = '(m^2)/s'
        self.unit_MtrSqdPerSec_factor_si_to_unit = ET.SubElement(unit_MtrSqdPerSec, 'FACTOR-SI-TO-UNIT')
        unit_MtrSqdPerSec_factor_si_to_unit.text = '1'
        self.unit_MtrSqdPerSec_offset_si_to_unit = ET.SubElement(unit_MtrSqdPerSec, 'OFFSET-SI-TO-UNIT')
        unit_MtrSqdPerSec_offset_si_to_unit.text = '0'
        self.unit_MtrSqdPerSec_physical_dimension_ref = ET.SubElement(unit_MtrSqdPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_MtrSqdPerSec_physical_dimension_ref.text = 'Len2Ti1'
        unit_MtrSqdPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NanoFrd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NanoFrd_short_name = ET.SubElement(unit_NanoFrd, 'SHORT-NAME')
        unit_NanoFrd_short_name.text = 'NanoFrd'
        self.unit_NanoFrd_long_name = ET.SubElement(unit_NanoFrd, 'LONG-NAME')
        self.unit_NanoFrd_l_4 = ET.SubElement(unit_NanoFrd_long_name, 'L-4')
        unit_NanoFrd_l_4.text = 'Nanofarad'
        unit_NanoFrd_l_4.attrib = {'L': 'EN'}
        self.unit_NanoFrd_display_name = ET.SubElement(unit_NanoFrd, 'DISPLAY-NAME')
        unit_NanoFrd_display_name.text = 'nF'
        self.unit_NanoFrd_factor_si_to_unit = ET.SubElement(unit_NanoFrd, 'FACTOR-SI-TO-UNIT')
        unit_NanoFrd_factor_si_to_unit.text = '1000000000'
        self.unit_NanoFrd_offset_si_to_unit = ET.SubElement(unit_NanoFrd, 'OFFSET-SI-TO-UNIT')
        unit_NanoFrd_offset_si_to_unit.text = '0'
        self.unit_NanoFrd_physical_dimension_ref = ET.SubElement(unit_NanoFrd, 'PHYSICAL-DIMENSION-REF')
        unit_NanoFrd_physical_dimension_ref.text = 'LenNeg2MNeg1Ti4I2'
        unit_NanoFrd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NanoSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NanoSec_short_name = ET.SubElement(unit_NanoSec, 'SHORT-NAME')
        unit_NanoSec_short_name.text = 'NanoSec'
        self.unit_NanoSec_long_name = ET.SubElement(unit_NanoSec, 'LONG-NAME')
        self.unit_NanoSec_l_4 = ET.SubElement(unit_NanoSec_long_name, 'L-4')
        unit_NanoSec_l_4.text = 'Nanosecond'
        unit_NanoSec_l_4.attrib = {'L': 'EN'}
        self.unit_NanoSec_display_name = ET.SubElement(unit_NanoSec, 'DISPLAY-NAME')
        unit_NanoSec_display_name.text = 'ns'
        self.unit_NanoSec_factor_si_to_unit = ET.SubElement(unit_NanoSec, 'FACTOR-SI-TO-UNIT')
        unit_NanoSec_factor_si_to_unit.text = '1000000000'
        self.unit_NanoSec_offset_si_to_unit = ET.SubElement(unit_NanoSec, 'OFFSET-SI-TO-UNIT')
        unit_NanoSec_offset_si_to_unit.text = '0'
        self.unit_NanoSec_physical_dimension_ref = ET.SubElement(unit_NanoSec, 'PHYSICAL-DIMENSION-REF')
        unit_NanoSec_physical_dimension_ref.text = 'Ti1'
        unit_NanoSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NoUnit = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NoUnit_short_name = ET.SubElement(unit_NoUnit, 'SHORT-NAME')
        unit_NoUnit_short_name.text = 'NoUnit'
        self.unit_NoUnit_long_name = ET.SubElement(unit_NoUnit, 'LONG-NAME')
        self.unit_NoUnit_l_4 = ET.SubElement(unit_NoUnit_long_name, 'L-4')
        unit_NoUnit_l_4.text = 'Neither Physical nor Mathematical Unit'
        unit_NoUnit_l_4.attrib = {'L': 'EN'}
        self.unit_NoUnit_display_name = ET.SubElement(unit_NoUnit, 'DISPLAY-NAME')
        unit_NoUnit_display_name.text = '-'
        self.unit_NoUnit_factor_si_to_unit = ET.SubElement(unit_NoUnit, 'FACTOR-SI-TO-UNIT')
        unit_NoUnit_factor_si_to_unit.text = '1'
        self.unit_NoUnit_offset_si_to_unit = ET.SubElement(unit_NoUnit, 'OFFSET-SI-TO-UNIT')
        unit_NoUnit_offset_si_to_unit.text = '0'
        self.unit_NoUnit_physical_dimension_ref = ET.SubElement(unit_NoUnit, 'PHYSICAL-DIMENSION-REF')
        unit_NoUnit_physical_dimension_ref.text = 'NoDimension'
        unit_NoUnit_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Nwt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Nwt_short_name = ET.SubElement(unit_Nwt, 'SHORT-NAME')
        unit_Nwt_short_name.text = 'Nwt'
        self.unit_Nwt_long_name = ET.SubElement(unit_Nwt, 'LONG-NAME')
        self.unit_Nwt_l_4 = ET.SubElement(unit_Nwt_long_name, 'L-4')
        unit_Nwt_l_4.text = 'Newton'
        unit_Nwt_l_4.attrib = {'L': 'EN'}
        self.unit_Nwt_display_name = ET.SubElement(unit_Nwt, 'DISPLAY-NAME')
        unit_Nwt_display_name.text = 'N'
        self.unit_Nwt_factor_si_to_unit = ET.SubElement(unit_Nwt, 'FACTOR-SI-TO-UNIT')
        unit_Nwt_factor_si_to_unit.text = '1'
        self.unit_Nwt_offset_si_to_unit = ET.SubElement(unit_Nwt, 'OFFSET-SI-TO-UNIT')
        unit_Nwt_offset_si_to_unit.text = '0'
        self.unit_Nwt_physical_dimension_ref = ET.SubElement(unit_Nwt, 'PHYSICAL-DIMENSION-REF')
        unit_Nwt_physical_dimension_ref.text = 'Len1M1TiNeg2'
        unit_Nwt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtMtr_short_name = ET.SubElement(unit_NwtMtr, 'SHORT-NAME')
        unit_NwtMtr_short_name.text = 'NwtMtr'
        self.unit_NwtMtr_long_name = ET.SubElement(unit_NwtMtr, 'LONG-NAME')
        self.unit_NwtMtr_l_4 = ET.SubElement(unit_NwtMtr_long_name, 'L-4')
        unit_NwtMtr_l_4.text = 'Newtonmeter'
        unit_NwtMtr_l_4.attrib = {'L': 'EN'}
        self.unit_NwtMtr_display_name = ET.SubElement(unit_NwtMtr, 'DISPLAY-NAME')
        unit_NwtMtr_display_name.text = 'Nm'
        self.unit_NwtMtr_factor_si_to_unit = ET.SubElement(unit_NwtMtr, 'FACTOR-SI-TO-UNIT')
        unit_NwtMtr_factor_si_to_unit.text = '1'
        self.unit_NwtMtr_offset_si_to_unit = ET.SubElement(unit_NwtMtr, 'OFFSET-SI-TO-UNIT')
        unit_NwtMtr_offset_si_to_unit.text = '0'
        self.unit_NwtMtr_physical_dimension_ref = ET.SubElement(unit_NwtMtr, 'PHYSICAL-DIMENSION-REF')
        unit_NwtMtr_physical_dimension_ref.text = 'Len2M1TiNeg2'
        unit_NwtMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtMtrPerRpm = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtMtrPerRpm_short_name = ET.SubElement(unit_NwtMtrPerRpm, 'SHORT-NAME')
        unit_NwtMtrPerRpm_short_name.text = 'NwtMtrPerRpm'
        self.unit_NwtMtrPerRpm_long_name = ET.SubElement(unit_NwtMtrPerRpm, 'LONG-NAME')
        self.unit_NwtMtrPerRpm_l_4 = ET.SubElement(unit_NwtMtrPerRpm_long_name, 'L-4')
        unit_NwtMtrPerRpm_l_4.text = 'Newtonmeter Per Rpm'
        unit_NwtMtrPerRpm_l_4.attrib = {'L': 'EN'}
        self.unit_NwtMtrPerRpm_display_name = ET.SubElement(unit_NwtMtrPerRpm, 'DISPLAY-NAME')
        unit_NwtMtrPerRpm_display_name.text = 'Nm/rpm'
        self.unit_NwtMtrPerRpm_factor_si_to_unit = ET.SubElement(unit_NwtMtrPerRpm, 'FACTOR-SI-TO-UNIT')
        unit_NwtMtrPerRpm_factor_si_to_unit.text = '0.0166666666666667'
        self.unit_NwtMtrPerRpm_offset_si_to_unit = ET.SubElement(unit_NwtMtrPerRpm, 'OFFSET-SI-TO-UNIT')
        unit_NwtMtrPerRpm_offset_si_to_unit.text = '0'
        self.unit_NwtMtrPerRpm_physical_dimension_ref = ET.SubElement(unit_NwtMtrPerRpm, 'PHYSICAL-DIMENSION-REF')
        unit_NwtMtrPerRpm_physical_dimension_ref.text = 'Len2M1TiNeg1'
        unit_NwtMtrPerRpm_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtMtrPerRpmPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtMtrPerRpmPerSec_short_name = ET.SubElement(unit_NwtMtrPerRpmPerSec, 'SHORT-NAME')
        unit_NwtMtrPerRpmPerSec_short_name.text = 'NwtMtrPerRpmPerSec'
        self.unit_NwtMtrPerRpmPerSec_long_name = ET.SubElement(unit_NwtMtrPerRpmPerSec, 'LONG-NAME')
        self.unit_NwtMtrPerRpmPerSec_l_4 = ET.SubElement(unit_NwtMtrPerRpmPerSec_long_name, 'L-4')
        unit_NwtMtrPerRpmPerSec_l_4.text = 'Newtonmeter Per Rpm Per Second'
        unit_NwtMtrPerRpmPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_NwtMtrPerRpmPerSec_display_name = ET.SubElement(unit_NwtMtrPerRpmPerSec, 'DISPLAY-NAME')
        unit_NwtMtrPerRpmPerSec_display_name.text = 'Nm/(rpm/s)'
        self.unit_NwtMtrPerRpmPerSec_factor_si_to_unit = ET.SubElement(unit_NwtMtrPerRpmPerSec, 'FACTOR-SI-TO-UNIT')
        unit_NwtMtrPerRpmPerSec_factor_si_to_unit.text = '0.0166666666666667'
        self.unit_NwtMtrPerRpmPerSec_offset_si_to_unit = ET.SubElement(unit_NwtMtrPerRpmPerSec, 'OFFSET-SI-TO-UNIT')
        unit_NwtMtrPerRpmPerSec_offset_si_to_unit.text = '0'
        self.unit_NwtMtrPerRpmPerSec_physical_dimension_ref = ET.SubElement(unit_NwtMtrPerRpmPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_NwtMtrPerRpmPerSec_physical_dimension_ref.text = 'Len2M1'
        unit_NwtMtrPerRpmPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtMtrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtMtrPerSec_short_name = ET.SubElement(unit_NwtMtrPerSec, 'SHORT-NAME')
        unit_NwtMtrPerSec_short_name.text = 'NwtMtrPerSec'
        self.unit_NwtMtrPerSec_long_name = ET.SubElement(unit_NwtMtrPerSec, 'LONG-NAME')
        self.unit_NwtMtrPerSec_l_4 = ET.SubElement(unit_NwtMtrPerSec_long_name, 'L-4')
        unit_NwtMtrPerSec_l_4.text = 'Newtonmeter Per Second'
        unit_NwtMtrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_NwtMtrPerSec_display_name = ET.SubElement(unit_NwtMtrPerSec, 'DISPLAY-NAME')
        unit_NwtMtrPerSec_display_name.text = '(N*m)/s'
        self.unit_NwtMtrPerSec_factor_si_to_unit = ET.SubElement(unit_NwtMtrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_NwtMtrPerSec_factor_si_to_unit.text = '1'
        self.unit_NwtMtrPerSec_offset_si_to_unit = ET.SubElement(unit_NwtMtrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_NwtMtrPerSec_offset_si_to_unit.text = '0'
        self.unit_NwtMtrPerSec_physical_dimension_ref = ET.SubElement(unit_NwtMtrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_NwtMtrPerSec_physical_dimension_ref.text = 'Len2M1TiNeg3'
        unit_NwtMtrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtMtrSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtMtrSec_short_name = ET.SubElement(unit_NwtMtrSec, 'SHORT-NAME')
        unit_NwtMtrSec_short_name.text = 'NwtMtrSec'
        self.unit_NwtMtrSec_long_name = ET.SubElement(unit_NwtMtrSec, 'LONG-NAME')
        self.unit_NwtMtrSec_l_4 = ET.SubElement(unit_NwtMtrSec_long_name, 'L-4')
        unit_NwtMtrSec_l_4.text = 'Newtonmeter Second'
        unit_NwtMtrSec_l_4.attrib = {'L': 'EN'}
        self.unit_NwtMtrSec_display_name = ET.SubElement(unit_NwtMtrSec, 'DISPLAY-NAME')
        unit_NwtMtrSec_display_name.text = 'Nm*s'
        self.unit_NwtMtrSec_factor_si_to_unit = ET.SubElement(unit_NwtMtrSec, 'FACTOR-SI-TO-UNIT')
        unit_NwtMtrSec_factor_si_to_unit.text = '1'
        self.unit_NwtMtrSec_offset_si_to_unit = ET.SubElement(unit_NwtMtrSec, 'OFFSET-SI-TO-UNIT')
        unit_NwtMtrSec_offset_si_to_unit.text = '0'
        self.unit_NwtMtrSec_physical_dimension_ref = ET.SubElement(unit_NwtMtrSec, 'PHYSICAL-DIMENSION-REF')
        unit_NwtMtrSec_physical_dimension_ref.text = 'Len2M1TiNeg1'
        unit_NwtMtrSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtMtrSqrSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtMtrSqrSec_short_name = ET.SubElement(unit_NwtMtrSqrSec, 'SHORT-NAME')
        unit_NwtMtrSqrSec_short_name.text = 'NwtMtrSqrSec'
        self.unit_NwtMtrSqrSec_long_name = ET.SubElement(unit_NwtMtrSqrSec, 'LONG-NAME')
        self.unit_NwtMtrSqrSec_l_4 = ET.SubElement(unit_NwtMtrSqrSec_long_name, 'L-4')
        unit_NwtMtrSqrSec_l_4.text = 'Newtonmeter Square Second'
        unit_NwtMtrSqrSec_l_4.attrib = {'L': 'EN'}
        self.unit_NwtMtrSqrSec_display_name = ET.SubElement(unit_NwtMtrSqrSec, 'DISPLAY-NAME')
        unit_NwtMtrSqrSec_display_name.text = 'Nm*(s^2)'
        self.unit_NwtMtrSqrSec_factor_si_to_unit = ET.SubElement(unit_NwtMtrSqrSec, 'FACTOR-SI-TO-UNIT')
        unit_NwtMtrSqrSec_factor_si_to_unit.text = '1'
        self.unit_NwtMtrSqrSec_offset_si_to_unit = ET.SubElement(unit_NwtMtrSqrSec, 'OFFSET-SI-TO-UNIT')
        unit_NwtMtrSqrSec_offset_si_to_unit.text = '0'
        self.unit_NwtMtrSqrSec_physical_dimension_ref = ET.SubElement(unit_NwtMtrSqrSec, 'PHYSICAL-DIMENSION-REF')
        unit_NwtMtrSqrSec_physical_dimension_ref.text = 'Len2M1'
        unit_NwtMtrSqrSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtPerMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtPerMtr_short_name = ET.SubElement(unit_NwtPerMtr, 'SHORT-NAME')
        unit_NwtPerMtr_short_name.text = 'NwtPerMtr'
        self.unit_NwtPerMtr_long_name = ET.SubElement(unit_NwtPerMtr, 'LONG-NAME')
        self.unit_NwtPerMtr_l_4 = ET.SubElement(unit_NwtPerMtr_long_name, 'L-4')
        unit_NwtPerMtr_l_4.text = 'Newton Per Meter'
        unit_NwtPerMtr_l_4.attrib = {'L': 'EN'}
        self.unit_NwtPerMtr_display_name = ET.SubElement(unit_NwtPerMtr, 'DISPLAY-NAME')
        unit_NwtPerMtr_display_name.text = 'N/m'
        self.unit_NwtPerMtr_factor_si_to_unit = ET.SubElement(unit_NwtPerMtr, 'FACTOR-SI-TO-UNIT')
        unit_NwtPerMtr_factor_si_to_unit.text = '1'
        self.unit_NwtPerMtr_offset_si_to_unit = ET.SubElement(unit_NwtPerMtr, 'OFFSET-SI-TO-UNIT')
        unit_NwtPerMtr_offset_si_to_unit.text = '0'
        self.unit_NwtPerMtr_physical_dimension_ref = ET.SubElement(unit_NwtPerMtr, 'PHYSICAL-DIMENSION-REF')
        unit_NwtPerMtr_physical_dimension_ref.text = 'M1TiNeg2'
        unit_NwtPerMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_NwtSecPerMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_NwtSecPerMtr_short_name = ET.SubElement(unit_NwtSecPerMtr, 'SHORT-NAME')
        unit_NwtSecPerMtr_short_name.text = 'NwtSecPerMtr'
        self.unit_NwtSecPerMtr_long_name = ET.SubElement(unit_NwtSecPerMtr, 'LONG-NAME')
        self.unit_NwtSecPerMtr_l_4 = ET.SubElement(unit_NwtSecPerMtr_long_name, 'L-4')
        unit_NwtSecPerMtr_l_4.text = 'Newtonsecond Per Meter'
        unit_NwtSecPerMtr_l_4.attrib = {'L': 'EN'}
        self.unit_NwtSecPerMtr_display_name = ET.SubElement(unit_NwtSecPerMtr, 'DISPLAY-NAME')
        unit_NwtSecPerMtr_display_name.text = 'Ns/m'
        self.unit_NwtSecPerMtr_factor_si_to_unit = ET.SubElement(unit_NwtSecPerMtr, 'FACTOR-SI-TO-UNIT')
        unit_NwtSecPerMtr_factor_si_to_unit.text = '1'
        self.unit_NwtSecPerMtr_offset_si_to_unit = ET.SubElement(unit_NwtSecPerMtr, 'OFFSET-SI-TO-UNIT')
        unit_NwtSecPerMtr_offset_si_to_unit.text = '0'
        self.unit_NwtSecPerMtr_physical_dimension_ref = ET.SubElement(unit_NwtSecPerMtr, 'PHYSICAL-DIMENSION-REF')
        unit_NwtSecPerMtr_physical_dimension_ref.text = 'M1TiNeg1_1'
        unit_NwtSecPerMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Ohm = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Ohm_short_name = ET.SubElement(unit_Ohm, 'SHORT-NAME')
        unit_Ohm_short_name.text = 'Ohm'
        self.unit_Ohm_long_name = ET.SubElement(unit_Ohm, 'LONG-NAME')
        self.unit_Ohm_l_4 = ET.SubElement(unit_Ohm_long_name, 'L-4')
        unit_Ohm_l_4.text = 'Ohm'
        unit_Ohm_l_4.attrib = {'L': 'EN'}
        self.unit_Ohm_display_name = ET.SubElement(unit_Ohm, 'DISPLAY-NAME')
        unit_Ohm_display_name.text = 'Ω'
        self.unit_Ohm_factor_si_to_unit = ET.SubElement(unit_Ohm, 'FACTOR-SI-TO-UNIT')
        unit_Ohm_factor_si_to_unit.text = '1'
        self.unit_Ohm_offset_si_to_unit = ET.SubElement(unit_Ohm, 'OFFSET-SI-TO-UNIT')
        unit_Ohm_offset_si_to_unit.text = '0'
        self.unit_Ohm_physical_dimension_ref = ET.SubElement(unit_Ohm, 'PHYSICAL-DIMENSION-REF')
        unit_Ohm_physical_dimension_ref.text = 'Len2M1TiNeg3INeg2'
        unit_Ohm_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Pa = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Pa_short_name = ET.SubElement(unit_Pa, 'SHORT-NAME')
        unit_Pa_short_name.text = 'Pa'
        self.unit_Pa_long_name = ET.SubElement(unit_Pa, 'LONG-NAME')
        self.unit_Pa_l_4 = ET.SubElement(unit_Pa_long_name, 'L-4')
        unit_Pa_l_4.text = 'Pascal'
        unit_Pa_l_4.attrib = {'L': 'EN'}
        self.unit_Pa_display_name = ET.SubElement(unit_Pa, 'DISPLAY-NAME')
        unit_Pa_display_name.text = 'Pa'
        self.unit_Pa_factor_si_to_unit = ET.SubElement(unit_Pa, 'FACTOR-SI-TO-UNIT')
        unit_Pa_factor_si_to_unit.text = '1'
        self.unit_Pa_offset_si_to_unit = ET.SubElement(unit_Pa, 'OFFSET-SI-TO-UNIT')
        unit_Pa_offset_si_to_unit.text = '0'
        self.unit_Pa_physical_dimension_ref = ET.SubElement(unit_Pa, 'PHYSICAL-DIMENSION-REF')
        unit_Pa_physical_dimension_ref.text = 'LenNeg1M1TiNeg2'
        unit_Pa_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PaPerMtrCubdPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PaPerMtrCubdPerSec_short_name = ET.SubElement(unit_PaPerMtrCubdPerSec, 'SHORT-NAME')
        unit_PaPerMtrCubdPerSec_short_name.text = 'PaPerMtrCubdPerSec'
        self.unit_PaPerMtrCubdPerSec_long_name = ET.SubElement(unit_PaPerMtrCubdPerSec, 'LONG-NAME')
        self.unit_PaPerMtrCubdPerSec_l_4 = ET.SubElement(unit_PaPerMtrCubdPerSec_long_name, 'L-4')
        unit_PaPerMtrCubdPerSec_l_4.text = 'Pascal Per Cubic Meter Per Second'
        unit_PaPerMtrCubdPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_PaPerMtrCubdPerSec_display_name = ET.SubElement(unit_PaPerMtrCubdPerSec, 'DISPLAY-NAME')
        unit_PaPerMtrCubdPerSec_display_name.text = 'Pa/((m^3)/s)'
        self.unit_PaPerMtrCubdPerSec_factor_si_to_unit = ET.SubElement(unit_PaPerMtrCubdPerSec, 'FACTOR-SI-TO-UNIT')
        unit_PaPerMtrCubdPerSec_factor_si_to_unit.text = '1'
        self.unit_PaPerMtrCubdPerSec_offset_si_to_unit = ET.SubElement(unit_PaPerMtrCubdPerSec, 'OFFSET-SI-TO-UNIT')
        unit_PaPerMtrCubdPerSec_offset_si_to_unit.text = '0'
        self.unit_PaPerMtrCubdPerSec_physical_dimension_ref = ET.SubElement(unit_PaPerMtrCubdPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_PaPerMtrCubdPerSec_physical_dimension_ref.text = 'LenNeg4M1TiNeg1'
        unit_PaPerMtrCubdPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PaPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PaPerSec_short_name = ET.SubElement(unit_PaPerSec, 'SHORT-NAME')
        unit_PaPerSec_short_name.text = 'PaPerSec'
        self.unit_PaPerSec_long_name = ET.SubElement(unit_PaPerSec, 'LONG-NAME')
        self.unit_PaPerSec_l_4 = ET.SubElement(unit_PaPerSec_long_name, 'L-4')
        unit_PaPerSec_l_4.text = 'Pascal Per Second'
        unit_PaPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_PaPerSec_display_name = ET.SubElement(unit_PaPerSec, 'DISPLAY-NAME')
        unit_PaPerSec_display_name.text = 'Pa/s'
        self.unit_PaPerSec_factor_si_to_unit = ET.SubElement(unit_PaPerSec, 'FACTOR-SI-TO-UNIT')
        unit_PaPerSec_factor_si_to_unit.text = '1'
        self.unit_PaPerSec_offset_si_to_unit = ET.SubElement(unit_PaPerSec, 'OFFSET-SI-TO-UNIT')
        unit_PaPerSec_offset_si_to_unit.text = '0'
        self.unit_PaPerSec_physical_dimension_ref = ET.SubElement(unit_PaPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_PaPerSec_physical_dimension_ref.text = 'LenNeg1M1TiNeg3'
        unit_PaPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PaSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PaSec_short_name = ET.SubElement(unit_PaSec, 'SHORT-NAME')
        unit_PaSec_short_name.text = 'PaSec'
        self.unit_PaSec_long_name = ET.SubElement(unit_PaSec, 'LONG-NAME')
        self.unit_PaSec_l_4 = ET.SubElement(unit_PaSec_long_name, 'L-4')
        unit_PaSec_l_4.text = 'Pascal Second'
        unit_PaSec_l_4.attrib = {'L': 'EN'}
        self.unit_PaSec_display_name = ET.SubElement(unit_PaSec, 'DISPLAY-NAME')
        unit_PaSec_display_name.text = 'Pa*s'
        self.unit_PaSec_factor_si_to_unit = ET.SubElement(unit_PaSec, 'FACTOR-SI-TO-UNIT')
        unit_PaSec_factor_si_to_unit.text = '1'
        self.unit_PaSec_offset_si_to_unit = ET.SubElement(unit_PaSec, 'OFFSET-SI-TO-UNIT')
        unit_PaSec_offset_si_to_unit.text = '0'
        self.unit_PaSec_physical_dimension_ref = ET.SubElement(unit_PaSec, 'PHYSICAL-DIMENSION-REF')
        unit_PaSec_physical_dimension_ref.text = 'LenNeg1M1TiNeg1'
        unit_PaSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PerMille = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PerMille_short_name = ET.SubElement(unit_PerMille, 'SHORT-NAME')
        unit_PerMille_short_name.text = 'PerMille'
        self.unit_PerMille_long_name = ET.SubElement(unit_PerMille, 'LONG-NAME')
        self.unit_PerMille_l_4 = ET.SubElement(unit_PerMille_long_name, 'L-4')
        unit_PerMille_l_4.text = 'Permille'
        unit_PerMille_l_4.attrib = {'L': 'EN'}
        self.unit_PerMille_display_name = ET.SubElement(unit_PerMille, 'DISPLAY-NAME')
        unit_PerMille_display_name.text = '‰'
        self.unit_PerMille_factor_si_to_unit = ET.SubElement(unit_PerMille, 'FACTOR-SI-TO-UNIT')
        unit_PerMille_factor_si_to_unit.text = '1000'
        self.unit_PerMille_offset_si_to_unit = ET.SubElement(unit_PerMille, 'OFFSET-SI-TO-UNIT')
        unit_PerMille_offset_si_to_unit.text = '0'
        self.unit_PerMille_physical_dimension_ref = ET.SubElement(unit_PerMille, 'PHYSICAL-DIMENSION-REF')
        unit_PerMille_physical_dimension_ref.text = 'NoDimension_1'
        unit_PerMille_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PerMin = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PerMin_short_name = ET.SubElement(unit_PerMin, 'SHORT-NAME')
        unit_PerMin_short_name.text = 'PerMin'
        self.unit_PerMin_long_name = ET.SubElement(unit_PerMin, 'LONG-NAME')
        self.unit_PerMin_l_4 = ET.SubElement(unit_PerMin_long_name, 'L-4')
        unit_PerMin_l_4.text = 'Per Minute'
        unit_PerMin_l_4.attrib = {'L': 'EN'}
        self.unit_PerMin_display_name = ET.SubElement(unit_PerMin, 'DISPLAY-NAME')
        unit_PerMin_display_name.text = '1/min'
        self.unit_PerMin_factor_si_to_unit = ET.SubElement(unit_PerMin, 'FACTOR-SI-TO-UNIT')
        unit_PerMin_factor_si_to_unit.text = '60'
        self.unit_PerMin_offset_si_to_unit = ET.SubElement(unit_PerMin, 'OFFSET-SI-TO-UNIT')
        unit_PerMin_offset_si_to_unit.text = '0'
        self.unit_PerMin_physical_dimension_ref = ET.SubElement(unit_PerMin, 'PHYSICAL-DIMENSION-REF')
        unit_PerMin_physical_dimension_ref.text = 'TiNeg1_2'
        unit_PerMin_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PerMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PerMtr_short_name = ET.SubElement(unit_PerMtr, 'SHORT-NAME')
        unit_PerMtr_short_name.text = 'PerMtr'
        self.unit_PerMtr_long_name = ET.SubElement(unit_PerMtr, 'LONG-NAME')
        self.unit_PerMtr_l_4 = ET.SubElement(unit_PerMtr_long_name, 'L-4')
        unit_PerMtr_l_4.text = 'Per Meter'
        unit_PerMtr_l_4.attrib = {'L': 'EN'}
        self.unit_PerMtr_display_name = ET.SubElement(unit_PerMtr, 'DISPLAY-NAME')
        unit_PerMtr_display_name.text = '1/m'
        self.unit_PerMtr_factor_si_to_unit = ET.SubElement(unit_PerMtr, 'FACTOR-SI-TO-UNIT')
        unit_PerMtr_factor_si_to_unit.text = '1'
        self.unit_PerMtr_offset_si_to_unit = ET.SubElement(unit_PerMtr, 'OFFSET-SI-TO-UNIT')
        unit_PerMtr_offset_si_to_unit.text = '0'
        self.unit_PerMtr_physical_dimension_ref = ET.SubElement(unit_PerMtr, 'PHYSICAL-DIMENSION-REF')
        unit_PerMtr_physical_dimension_ref.text = 'LenNeg1'
        unit_PerMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PerSec_short_name = ET.SubElement(unit_PerSec, 'SHORT-NAME')
        unit_PerSec_short_name.text = 'PerSec'
        self.unit_PerSec_long_name = ET.SubElement(unit_PerSec, 'LONG-NAME')
        self.unit_PerSec_l_4 = ET.SubElement(unit_PerSec_long_name, 'L-4')
        unit_PerSec_l_4.text = 'Per Second'
        unit_PerSec_l_4.attrib = {'L': 'EN'}
        self.unit_PerSec_display_name = ET.SubElement(unit_PerSec, 'DISPLAY-NAME')
        unit_PerSec_display_name.text = '1/s'
        self.unit_PerSec_factor_si_to_unit = ET.SubElement(unit_PerSec, 'FACTOR-SI-TO-UNIT')
        unit_PerSec_factor_si_to_unit.text = '1'
        self.unit_PerSec_offset_si_to_unit = ET.SubElement(unit_PerSec, 'OFFSET-SI-TO-UNIT')
        unit_PerSec_offset_si_to_unit.text = '0'
        self.unit_PerSec_physical_dimension_ref = ET.SubElement(unit_PerSec, 'PHYSICAL-DIMENSION-REF')
        unit_PerSec_physical_dimension_ref.text = 'TiNeg1_2'
        unit_PerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PerSecSqd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PerSecSqd_short_name = ET.SubElement(unit_PerSecSqd, 'SHORT-NAME')
        unit_PerSecSqd_short_name.text = 'PerSecSqd'
        self.unit_PerSecSqd_long_name = ET.SubElement(unit_PerSecSqd, 'LONG-NAME')
        self.unit_PerSecSqd_l_4 = ET.SubElement(unit_PerSecSqd_long_name, 'L-4')
        unit_PerSecSqd_l_4.text = 'Per Square Second'
        unit_PerSecSqd_l_4.attrib = {'L': 'EN'}
        self.unit_PerSecSqd_display_name = ET.SubElement(unit_PerSecSqd, 'DISPLAY-NAME')
        unit_PerSecSqd_display_name.text = '1/(s^2)'
        self.unit_PerSecSqd_factor_si_to_unit = ET.SubElement(unit_PerSecSqd, 'FACTOR-SI-TO-UNIT')
        unit_PerSecSqd_factor_si_to_unit.text = '1'
        self.unit_PerSecSqd_offset_si_to_unit = ET.SubElement(unit_PerSecSqd, 'OFFSET-SI-TO-UNIT')
        unit_PerSecSqd_offset_si_to_unit.text = '0'
        self.unit_PerSecSqd_physical_dimension_ref = ET.SubElement(unit_PerSecSqd, 'PHYSICAL-DIMENSION-REF')
        unit_PerSecSqd_physical_dimension_ref.text = 'TiNeg2'
        unit_PerSecSqd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Perc = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Perc_short_name = ET.SubElement(unit_Perc, 'SHORT-NAME')
        unit_Perc_short_name.text = 'Perc'
        self.unit_Perc_long_name = ET.SubElement(unit_Perc, 'LONG-NAME')
        self.unit_Perc_l_4 = ET.SubElement(unit_Perc_long_name, 'L-4')
        unit_Perc_l_4.text = 'Percent'
        unit_Perc_l_4.attrib = {'L': 'EN'}
        self.unit_Perc_display_name = ET.SubElement(unit_Perc, 'DISPLAY-NAME')
        unit_Perc_display_name.text = '%'
        self.unit_Perc_factor_si_to_unit = ET.SubElement(unit_Perc, 'FACTOR-SI-TO-UNIT')
        unit_Perc_factor_si_to_unit.text = '100'
        self.unit_Perc_offset_si_to_unit = ET.SubElement(unit_Perc, 'OFFSET-SI-TO-UNIT')
        unit_Perc_offset_si_to_unit.text = '0'
        self.unit_Perc_physical_dimension_ref = ET.SubElement(unit_Perc, 'PHYSICAL-DIMENSION-REF')
        unit_Perc_physical_dimension_ref.text = 'NoDimension_1'
        unit_Perc_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PercPerMilliSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PercPerMilliSec_short_name = ET.SubElement(unit_PercPerMilliSec, 'SHORT-NAME')
        unit_PercPerMilliSec_short_name.text = 'PercPerMilliSec'
        self.unit_PercPerMilliSec_long_name = ET.SubElement(unit_PercPerMilliSec, 'LONG-NAME')
        self.unit_PercPerMilliSec_l_4 = ET.SubElement(unit_PercPerMilliSec_long_name, 'L-4')
        unit_PercPerMilliSec_l_4.text = 'Percent Per Millisecond'
        unit_PercPerMilliSec_l_4.attrib = {'L': 'EN'}
        self.unit_PercPerMilliSec_display_name = ET.SubElement(unit_PercPerMilliSec, 'DISPLAY-NAME')
        unit_PercPerMilliSec_display_name.text = '%/ms'
        self.unit_PercPerMilliSec_factor_si_to_unit = ET.SubElement(unit_PercPerMilliSec, 'FACTOR-SI-TO-UNIT')
        unit_PercPerMilliSec_factor_si_to_unit.text = '0.1'
        self.unit_PercPerMilliSec_offset_si_to_unit = ET.SubElement(unit_PercPerMilliSec, 'OFFSET-SI-TO-UNIT')
        unit_PercPerMilliSec_offset_si_to_unit.text = '0'
        self.unit_PercPerMilliSec_physical_dimension_ref = ET.SubElement(unit_PercPerMilliSec, 'PHYSICAL-DIMENSION-REF')
        unit_PercPerMilliSec_physical_dimension_ref.text = 'TiNeg1_1'
        unit_PercPerMilliSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PercPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PercPerSec_short_name = ET.SubElement(unit_PercPerSec, 'SHORT-NAME')
        unit_PercPerSec_short_name.text = 'PercPerSec'
        self.unit_PercPerSec_long_name = ET.SubElement(unit_PercPerSec, 'LONG-NAME')
        self.unit_PercPerSec_l_4 = ET.SubElement(unit_PercPerSec_long_name, 'L-4')
        unit_PercPerSec_l_4.text = 'Percent Per Second'
        unit_PercPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_PercPerSec_display_name = ET.SubElement(unit_PercPerSec, 'DISPLAY-NAME')
        unit_PercPerSec_display_name.text = '%/s'
        self.unit_PercPerSec_factor_si_to_unit = ET.SubElement(unit_PercPerSec, 'FACTOR-SI-TO-UNIT')
        unit_PercPerSec_factor_si_to_unit.text = '100'
        self.unit_PercPerSec_offset_si_to_unit = ET.SubElement(unit_PercPerSec, 'OFFSET-SI-TO-UNIT')
        unit_PercPerSec_offset_si_to_unit.text = '0'
        self.unit_PercPerSec_physical_dimension_ref = ET.SubElement(unit_PercPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_PercPerSec_physical_dimension_ref.text = 'TiNeg1_1'
        unit_PercPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PicoFrd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PicoFrd_short_name = ET.SubElement(unit_PicoFrd, 'SHORT-NAME')
        unit_PicoFrd_short_name.text = 'PicoFrd'
        self.unit_PicoFrd_long_name = ET.SubElement(unit_PicoFrd, 'LONG-NAME')
        self.unit_PicoFrd_l_4 = ET.SubElement(unit_PicoFrd_long_name, 'L-4')
        unit_PicoFrd_l_4.text = 'Picofarad'
        unit_PicoFrd_l_4.attrib = {'L': 'EN'}
        self.unit_PicoFrd_display_name = ET.SubElement(unit_PicoFrd, 'DISPLAY-NAME')
        unit_PicoFrd_display_name.text = 'pF'
        self.unit_PicoFrd_factor_si_to_unit = ET.SubElement(unit_PicoFrd, 'FACTOR-SI-TO-UNIT')
        unit_PicoFrd_factor_si_to_unit.text = '1000000000000'
        self.unit_PicoFrd_offset_si_to_unit = ET.SubElement(unit_PicoFrd, 'OFFSET-SI-TO-UNIT')
        unit_PicoFrd_offset_si_to_unit.text = '0'
        self.unit_PicoFrd_physical_dimension_ref = ET.SubElement(unit_PicoFrd, 'PHYSICAL-DIMENSION-REF')
        unit_PicoFrd_physical_dimension_ref.text = 'LenNeg2MNeg1Ti4I2'
        unit_PicoFrd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_PicoSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_PicoSec_short_name = ET.SubElement(unit_PicoSec, 'SHORT-NAME')
        unit_PicoSec_short_name.text = 'PicoSec'
        self.unit_PicoSec_long_name = ET.SubElement(unit_PicoSec, 'LONG-NAME')
        self.unit_PicoSec_l_4 = ET.SubElement(unit_PicoSec_long_name, 'L-4')
        unit_PicoSec_l_4.text = 'Picosecond'
        unit_PicoSec_l_4.attrib = {'L': 'EN'}
        self.unit_PicoSec_display_name = ET.SubElement(unit_PicoSec, 'DISPLAY-NAME')
        unit_PicoSec_display_name.text = 'ps'
        self.unit_PicoSec_factor_si_to_unit = ET.SubElement(unit_PicoSec, 'FACTOR-SI-TO-UNIT')
        unit_PicoSec_factor_si_to_unit.text = '1000000000000'
        self.unit_PicoSec_offset_si_to_unit = ET.SubElement(unit_PicoSec, 'OFFSET-SI-TO-UNIT')
        unit_PicoSec_offset_si_to_unit.text = '0'
        self.unit_PicoSec_physical_dimension_ref = ET.SubElement(unit_PicoSec, 'PHYSICAL-DIMENSION-REF')
        unit_PicoSec_physical_dimension_ref.text = 'Ti1'
        unit_PicoSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Ppm = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Ppm_short_name = ET.SubElement(unit_Ppm, 'SHORT-NAME')
        unit_Ppm_short_name.text = 'Ppm'
        self.unit_Ppm_long_name = ET.SubElement(unit_Ppm, 'LONG-NAME')
        self.unit_Ppm_l_4 = ET.SubElement(unit_Ppm_long_name, 'L-4')
        unit_Ppm_l_4.text = 'Parts Per Million'
        unit_Ppm_l_4.attrib = {'L': 'EN'}
        self.unit_Ppm_display_name = ET.SubElement(unit_Ppm, 'DISPLAY-NAME')
        unit_Ppm_display_name.text = 'ppm'
        self.unit_Ppm_factor_si_to_unit = ET.SubElement(unit_Ppm, 'FACTOR-SI-TO-UNIT')
        unit_Ppm_factor_si_to_unit.text = '1000000'
        self.unit_Ppm_offset_si_to_unit = ET.SubElement(unit_Ppm, 'OFFSET-SI-TO-UNIT')
        unit_Ppm_offset_si_to_unit.text = '0'
        self.unit_Ppm_physical_dimension_ref = ET.SubElement(unit_Ppm, 'PHYSICAL-DIMENSION-REF')
        unit_Ppm_physical_dimension_ref.text = 'NoDimension_1'
        unit_Ppm_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Rad = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Rad_short_name = ET.SubElement(unit_Rad, 'SHORT-NAME')
        unit_Rad_short_name.text = 'Rad'
        self.unit_Rad_long_name = ET.SubElement(unit_Rad, 'LONG-NAME')
        self.unit_Rad_l_4 = ET.SubElement(unit_Rad_long_name, 'L-4')
        unit_Rad_l_4.text = 'Radian'
        unit_Rad_l_4.attrib = {'L': 'EN'}
        self.unit_Rad_display_name = ET.SubElement(unit_Rad, 'DISPLAY-NAME')
        unit_Rad_display_name.text = 'rad'
        self.unit_Rad_factor_si_to_unit = ET.SubElement(unit_Rad, 'FACTOR-SI-TO-UNIT')
        unit_Rad_factor_si_to_unit.text = '6.28318530717958'
        self.unit_Rad_offset_si_to_unit = ET.SubElement(unit_Rad, 'OFFSET-SI-TO-UNIT')
        unit_Rad_offset_si_to_unit.text = '0'
        self.unit_Rad_physical_dimension_ref = ET.SubElement(unit_Rad, 'PHYSICAL-DIMENSION-REF')
        unit_Rad_physical_dimension_ref.text = 'NoDimension_2'
        unit_Rad_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_RadPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_RadPerSec_short_name = ET.SubElement(unit_RadPerSec, 'SHORT-NAME')
        unit_RadPerSec_short_name.text = 'RadPerSec'
        self.unit_RadPerSec_long_name = ET.SubElement(unit_RadPerSec, 'LONG-NAME')
        self.unit_RadPerSec_l_4 = ET.SubElement(unit_RadPerSec_long_name, 'L-4')
        unit_RadPerSec_l_4.text = 'Radian Per Second'
        unit_RadPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_RadPerSec_display_name = ET.SubElement(unit_RadPerSec, 'DISPLAY-NAME')
        unit_RadPerSec_display_name.text = 'rad/s'
        self.unit_RadPerSec_factor_si_to_unit = ET.SubElement(unit_RadPerSec, 'FACTOR-SI-TO-UNIT')
        unit_RadPerSec_factor_si_to_unit.text = '6.28318530717958'
        self.unit_RadPerSec_offset_si_to_unit = ET.SubElement(unit_RadPerSec, 'OFFSET-SI-TO-UNIT')
        unit_RadPerSec_offset_si_to_unit.text = '0'
        self.unit_RadPerSec_physical_dimension_ref = ET.SubElement(unit_RadPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_RadPerSec_physical_dimension_ref.text = 'TiNeg1_2'
        unit_RadPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_RadPerSecSqd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_RadPerSecSqd_short_name = ET.SubElement(unit_RadPerSecSqd, 'SHORT-NAME')
        unit_RadPerSecSqd_short_name.text = 'RadPerSecSqd'
        self.unit_RadPerSecSqd_long_name = ET.SubElement(unit_RadPerSecSqd, 'LONG-NAME')
        self.unit_RadPerSecSqd_l_4 = ET.SubElement(unit_RadPerSecSqd_long_name, 'L-4')
        unit_RadPerSecSqd_l_4.text = 'Radian Per Square Second'
        unit_RadPerSecSqd_l_4.attrib = {'L': 'EN'}
        self.unit_RadPerSecSqd_display_name = ET.SubElement(unit_RadPerSecSqd, 'DISPLAY-NAME')
        unit_RadPerSecSqd_display_name.text = 'rad/(s^2)'
        self.unit_RadPerSecSqd_factor_si_to_unit = ET.SubElement(unit_RadPerSecSqd, 'FACTOR-SI-TO-UNIT')
        unit_RadPerSecSqd_factor_si_to_unit.text = '6.28318530717958'
        self.unit_RadPerSecSqd_offset_si_to_unit = ET.SubElement(unit_RadPerSecSqd, 'OFFSET-SI-TO-UNIT')
        unit_RadPerSecSqd_offset_si_to_unit.text = '0'
        self.unit_RadPerSecSqd_physical_dimension_ref = ET.SubElement(unit_RadPerSecSqd, 'PHYSICAL-DIMENSION-REF')
        unit_RadPerSecSqd_physical_dimension_ref.text = 'TiNeg2'
        unit_RadPerSecSqd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Rpm = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Rpm_short_name = ET.SubElement(unit_Rpm, 'SHORT-NAME')
        unit_Rpm_short_name.text = 'Rpm'
        self.unit_Rpm_long_name = ET.SubElement(unit_Rpm, 'LONG-NAME')
        self.unit_Rpm_l_4 = ET.SubElement(unit_Rpm_long_name, 'L-4')
        unit_Rpm_l_4.text = 'Revolutions Per Minute'
        unit_Rpm_l_4.attrib = {'L': 'EN'}
        self.unit_Rpm_display_name = ET.SubElement(unit_Rpm, 'DISPLAY-NAME')
        unit_Rpm_display_name.text = 'rpm'
        self.unit_Rpm_factor_si_to_unit = ET.SubElement(unit_Rpm, 'FACTOR-SI-TO-UNIT')
        unit_Rpm_factor_si_to_unit.text = '60'
        self.unit_Rpm_offset_si_to_unit = ET.SubElement(unit_Rpm, 'OFFSET-SI-TO-UNIT')
        unit_Rpm_offset_si_to_unit.text = '0'
        self.unit_Rpm_physical_dimension_ref = ET.SubElement(unit_Rpm, 'PHYSICAL-DIMENSION-REF')
        unit_Rpm_physical_dimension_ref.text = 'TiNeg1_2'
        unit_Rpm_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_RpmPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_RpmPerSec_short_name = ET.SubElement(unit_RpmPerSec, 'SHORT-NAME')
        unit_RpmPerSec_short_name.text = 'RpmPerSec'
        self.unit_RpmPerSec_long_name = ET.SubElement(unit_RpmPerSec, 'LONG-NAME')
        self.unit_RpmPerSec_l_4 = ET.SubElement(unit_RpmPerSec_long_name, 'L-4')
        unit_RpmPerSec_l_4.text = 'Revolutions Per Minute Per Second'
        unit_RpmPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_RpmPerSec_display_name = ET.SubElement(unit_RpmPerSec, 'DISPLAY-NAME')
        unit_RpmPerSec_display_name.text = 'rpm/s'
        self.unit_RpmPerSec_factor_si_to_unit = ET.SubElement(unit_RpmPerSec, 'FACTOR-SI-TO-UNIT')
        unit_RpmPerSec_factor_si_to_unit.text = '60'
        self.unit_RpmPerSec_offset_si_to_unit = ET.SubElement(unit_RpmPerSec, 'OFFSET-SI-TO-UNIT')
        unit_RpmPerSec_offset_si_to_unit.text = '0'
        self.unit_RpmPerSec_physical_dimension_ref = ET.SubElement(unit_RpmPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_RpmPerSec_physical_dimension_ref.text = 'TiNeg2'
        unit_RpmPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_S = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_S_short_name = ET.SubElement(unit_S, 'SHORT-NAME')
        unit_S_short_name.text = 'S'
        self.unit_S_long_name = ET.SubElement(unit_S, 'LONG-NAME')
        self.unit_S_l_4 = ET.SubElement(unit_S_long_name, 'L-4')
        unit_S_l_4.text = 'Siemens'
        unit_S_l_4.attrib = {'L': 'EN'}
        self.unit_S_display_name = ET.SubElement(unit_S, 'DISPLAY-NAME')
        unit_S_display_name.text = 'S'
        self.unit_S_factor_si_to_unit = ET.SubElement(unit_S, 'FACTOR-SI-TO-UNIT')
        unit_S_factor_si_to_unit.text = '1'
        self.unit_S_offset_si_to_unit = ET.SubElement(unit_S, 'OFFSET-SI-TO-UNIT')
        unit_S_offset_si_to_unit.text = '0'
        self.unit_S_physical_dimension_ref = ET.SubElement(unit_S, 'PHYSICAL-DIMENSION-REF')
        unit_S_physical_dimension_ref.text = 'LenNeg2MNeg1Ti3I2'
        unit_S_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_SPerMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_SPerMtr_short_name = ET.SubElement(unit_SPerMtr, 'SHORT-NAME')
        unit_SPerMtr_short_name.text = 'SPerMtr'
        self.unit_SPerMtr_long_name = ET.SubElement(unit_SPerMtr, 'LONG-NAME')
        self.unit_SPerMtr_l_4 = ET.SubElement(unit_SPerMtr_long_name, 'L-4')
        unit_SPerMtr_l_4.text = 'Siemens Per Meter'
        unit_SPerMtr_l_4.attrib = {'L': 'EN'}
        self.unit_SPerMtr_display_name = ET.SubElement(unit_SPerMtr, 'DISPLAY-NAME')
        unit_SPerMtr_display_name.text = 'S/m'
        self.unit_SPerMtr_factor_si_to_unit = ET.SubElement(unit_SPerMtr, 'FACTOR-SI-TO-UNIT')
        unit_SPerMtr_factor_si_to_unit.text = '1'
        self.unit_SPerMtr_offset_si_to_unit = ET.SubElement(unit_SPerMtr, 'OFFSET-SI-TO-UNIT')
        unit_SPerMtr_offset_si_to_unit.text = '0'
        self.unit_SPerMtr_physical_dimension_ref = ET.SubElement(unit_SPerMtr, 'PHYSICAL-DIMENSION-REF')
        unit_SPerMtr_physical_dimension_ref.text = 'LenNeg3MNeg1Ti3I2'
        unit_SPerMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_SPerMtrPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_SPerMtrPerSec_short_name = ET.SubElement(unit_SPerMtrPerSec, 'SHORT-NAME')
        unit_SPerMtrPerSec_short_name.text = 'SPerMtrPerSec'
        self.unit_SPerMtrPerSec_long_name = ET.SubElement(unit_SPerMtrPerSec, 'LONG-NAME')
        self.unit_SPerMtrPerSec_l_4 = ET.SubElement(unit_SPerMtrPerSec_long_name, 'L-4')
        unit_SPerMtrPerSec_l_4.text = 'Siemens Per Meter Per Second'
        unit_SPerMtrPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_SPerMtrPerSec_display_name = ET.SubElement(unit_SPerMtrPerSec, 'DISPLAY-NAME')
        unit_SPerMtrPerSec_display_name.text = 'S/(m*s)'
        self.unit_SPerMtrPerSec_factor_si_to_unit = ET.SubElement(unit_SPerMtrPerSec, 'FACTOR-SI-TO-UNIT')
        unit_SPerMtrPerSec_factor_si_to_unit.text = '1'
        self.unit_SPerMtrPerSec_offset_si_to_unit = ET.SubElement(unit_SPerMtrPerSec, 'OFFSET-SI-TO-UNIT')
        unit_SPerMtrPerSec_offset_si_to_unit.text = '0'
        self.unit_SPerMtrPerSec_physical_dimension_ref = ET.SubElement(unit_SPerMtrPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_SPerMtrPerSec_physical_dimension_ref.text = 'LenNeg3MNeg1Ti2I2'
        unit_SPerMtrPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Sec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Sec_short_name = ET.SubElement(unit_Sec, 'SHORT-NAME')
        unit_Sec_short_name.text = 'Sec'
        self.unit_Sec_long_name = ET.SubElement(unit_Sec, 'LONG-NAME')
        self.unit_Sec_l_4 = ET.SubElement(unit_Sec_long_name, 'L-4')
        unit_Sec_l_4.text = 'Second'
        unit_Sec_l_4.attrib = {'L': 'EN'}
        self.unit_Sec_display_name = ET.SubElement(unit_Sec, 'DISPLAY-NAME')
        unit_Sec_display_name.text = 's'
        self.unit_Sec_factor_si_to_unit = ET.SubElement(unit_Sec, 'FACTOR-SI-TO-UNIT')
        unit_Sec_factor_si_to_unit.text = '1'
        self.unit_Sec_offset_si_to_unit = ET.SubElement(unit_Sec, 'OFFSET-SI-TO-UNIT')
        unit_Sec_offset_si_to_unit.text = '0'
        self.unit_Sec_physical_dimension_ref = ET.SubElement(unit_Sec, 'PHYSICAL-DIMENSION-REF')
        unit_Sec_physical_dimension_ref.text = 'Ti1'
        unit_Sec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Tesla = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Tesla_short_name = ET.SubElement(unit_Tesla, 'SHORT-NAME')
        unit_Tesla_short_name.text = 'Tesla'
        self.unit_Tesla_long_name = ET.SubElement(unit_Tesla, 'LONG-NAME')
        self.unit_Tesla_l_4 = ET.SubElement(unit_Tesla_long_name, 'L-4')
        unit_Tesla_l_4.text = 'Tesla'
        unit_Tesla_l_4.attrib = {'L': 'EN'}
        self.unit_Tesla_display_name = ET.SubElement(unit_Tesla, 'DISPLAY-NAME')
        unit_Tesla_display_name.text = 'T'
        self.unit_Tesla_factor_si_to_unit = ET.SubElement(unit_Tesla, 'FACTOR-SI-TO-UNIT')
        unit_Tesla_factor_si_to_unit.text = '1'
        self.unit_Tesla_offset_si_to_unit = ET.SubElement(unit_Tesla, 'OFFSET-SI-TO-UNIT')
        unit_Tesla_offset_si_to_unit.text = '0'
        self.unit_Tesla_physical_dimension_ref = ET.SubElement(unit_Tesla, 'PHYSICAL-DIMENSION-REF')
        unit_Tesla_physical_dimension_ref.text = 'M1TiNeg2INeg1'
        unit_Tesla_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Tonne = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Tonne_short_name = ET.SubElement(unit_Tonne, 'SHORT-NAME')
        unit_Tonne_short_name.text = 'Tonne'
        self.unit_Tonne_long_name = ET.SubElement(unit_Tonne, 'LONG-NAME')
        self.unit_Tonne_l_4 = ET.SubElement(unit_Tonne_long_name, 'L-4')
        unit_Tonne_l_4.text = 'Tonne'
        unit_Tonne_l_4.attrib = {'L': 'EN'}
        self.unit_Tonne_display_name = ET.SubElement(unit_Tonne, 'DISPLAY-NAME')
        unit_Tonne_display_name.text = 't'
        self.unit_Tonne_factor_si_to_unit = ET.SubElement(unit_Tonne, 'FACTOR-SI-TO-UNIT')
        unit_Tonne_factor_si_to_unit.text = '0.001'
        self.unit_Tonne_offset_si_to_unit = ET.SubElement(unit_Tonne, 'OFFSET-SI-TO-UNIT')
        unit_Tonne_offset_si_to_unit.text = '0'
        self.unit_Tonne_physical_dimension_ref = ET.SubElement(unit_Tonne, 'PHYSICAL-DIMENSION-REF')
        unit_Tonne_physical_dimension_ref.text = 'M1'
        unit_Tonne_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Volt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Volt_short_name = ET.SubElement(unit_Volt, 'SHORT-NAME')
        unit_Volt_short_name.text = 'Volt'
        self.unit_Volt_long_name = ET.SubElement(unit_Volt, 'LONG-NAME')
        self.unit_Volt_l_4 = ET.SubElement(unit_Volt_long_name, 'L-4')
        unit_Volt_l_4.text = 'Volt'
        unit_Volt_l_4.attrib = {'L': 'EN'}
        self.unit_Volt_display_name = ET.SubElement(unit_Volt, 'DISPLAY-NAME')
        unit_Volt_display_name.text = 'V'
        self.unit_Volt_factor_si_to_unit = ET.SubElement(unit_Volt, 'FACTOR-SI-TO-UNIT')
        unit_Volt_factor_si_to_unit.text = '1'
        self.unit_Volt_offset_si_to_unit = ET.SubElement(unit_Volt, 'OFFSET-SI-TO-UNIT')
        unit_Volt_offset_si_to_unit.text = '0'
        self.unit_Volt_physical_dimension_ref = ET.SubElement(unit_Volt, 'PHYSICAL-DIMENSION-REF')
        unit_Volt_physical_dimension_ref.text = 'Len2M1TiNeg3INeg1'
        unit_Volt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_VoltPerMilliSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_VoltPerMilliSec_short_name = ET.SubElement(unit_VoltPerMilliSec, 'SHORT-NAME')
        unit_VoltPerMilliSec_short_name.text = 'VoltPerMilliSec'
        self.unit_VoltPerMilliSec_long_name = ET.SubElement(unit_VoltPerMilliSec, 'LONG-NAME')
        self.unit_VoltPerMilliSec_l_4 = ET.SubElement(unit_VoltPerMilliSec_long_name, 'L-4')
        unit_VoltPerMilliSec_l_4.text = 'Volt Per Millisecond'
        unit_VoltPerMilliSec_l_4.attrib = {'L': 'EN'}
        self.unit_VoltPerMilliSec_display_name = ET.SubElement(unit_VoltPerMilliSec, 'DISPLAY-NAME')
        unit_VoltPerMilliSec_display_name.text = 'V/ms'
        self.unit_VoltPerMilliSec_factor_si_to_unit = ET.SubElement(unit_VoltPerMilliSec, 'FACTOR-SI-TO-UNIT')
        unit_VoltPerMilliSec_factor_si_to_unit.text = '0.001'
        self.unit_VoltPerMilliSec_offset_si_to_unit = ET.SubElement(unit_VoltPerMilliSec, 'OFFSET-SI-TO-UNIT')
        unit_VoltPerMilliSec_offset_si_to_unit.text = '0'
        self.unit_VoltPerMilliSec_physical_dimension_ref = ET.SubElement(unit_VoltPerMilliSec, 'PHYSICAL-DIMENSION-REF')
        unit_VoltPerMilliSec_physical_dimension_ref.text = 'Len2M1TiNeg4INeg1'
        unit_VoltPerMilliSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_VoltPerMtr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_VoltPerMtr_short_name = ET.SubElement(unit_VoltPerMtr, 'SHORT-NAME')
        unit_VoltPerMtr_short_name.text = 'VoltPerMtr'
        self.unit_VoltPerMtr_long_name = ET.SubElement(unit_VoltPerMtr, 'LONG-NAME')
        self.unit_VoltPerMtr_l_4 = ET.SubElement(unit_VoltPerMtr_long_name, 'L-4')
        unit_VoltPerMtr_l_4.text = 'Volt Per Meter'
        unit_VoltPerMtr_l_4.attrib = {'L': 'EN'}
        self.unit_VoltPerMtr_display_name = ET.SubElement(unit_VoltPerMtr, 'DISPLAY-NAME')
        unit_VoltPerMtr_display_name.text = 'V/m'
        self.unit_VoltPerMtr_factor_si_to_unit = ET.SubElement(unit_VoltPerMtr, 'FACTOR-SI-TO-UNIT')
        unit_VoltPerMtr_factor_si_to_unit.text = '1'
        self.unit_VoltPerMtr_offset_si_to_unit = ET.SubElement(unit_VoltPerMtr, 'OFFSET-SI-TO-UNIT')
        unit_VoltPerMtr_offset_si_to_unit.text = '0'
        self.unit_VoltPerMtr_physical_dimension_ref = ET.SubElement(unit_VoltPerMtr, 'PHYSICAL-DIMENSION-REF')
        unit_VoltPerMtr_physical_dimension_ref.text = 'Len1M1TiNeg3INeg1'
        unit_VoltPerMtr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_VoltPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_VoltPerSec_short_name = ET.SubElement(unit_VoltPerSec, 'SHORT-NAME')
        unit_VoltPerSec_short_name.text = 'VoltPerSec'
        self.unit_VoltPerSec_long_name = ET.SubElement(unit_VoltPerSec, 'LONG-NAME')
        self.unit_VoltPerSec_l_4 = ET.SubElement(unit_VoltPerSec_long_name, 'L-4')
        unit_VoltPerSec_l_4.text = 'Volt Per Second'
        unit_VoltPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_VoltPerSec_display_name = ET.SubElement(unit_VoltPerSec, 'DISPLAY-NAME')
        unit_VoltPerSec_display_name.text = 'V/s'
        self.unit_VoltPerSec_factor_si_to_unit = ET.SubElement(unit_VoltPerSec, 'FACTOR-SI-TO-UNIT')
        unit_VoltPerSec_factor_si_to_unit.text = '1'
        self.unit_VoltPerSec_offset_si_to_unit = ET.SubElement(unit_VoltPerSec, 'OFFSET-SI-TO-UNIT')
        unit_VoltPerSec_offset_si_to_unit.text = '0'
        self.unit_VoltPerSec_physical_dimension_ref = ET.SubElement(unit_VoltPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_VoltPerSec_physical_dimension_ref.text = 'Len2M1TiNeg4INeg1'
        unit_VoltPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Watt = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Watt_short_name = ET.SubElement(unit_Watt, 'SHORT-NAME')
        unit_Watt_short_name.text = 'Watt'
        self.unit_Watt_long_name = ET.SubElement(unit_Watt, 'LONG-NAME')
        self.unit_Watt_l_4 = ET.SubElement(unit_Watt_long_name, 'L-4')
        unit_Watt_l_4.text = 'Watt'
        unit_Watt_l_4.attrib = {'L': 'EN'}
        self.unit_Watt_display_name = ET.SubElement(unit_Watt, 'DISPLAY-NAME')
        unit_Watt_display_name.text = 'W'
        self.unit_Watt_factor_si_to_unit = ET.SubElement(unit_Watt, 'FACTOR-SI-TO-UNIT')
        unit_Watt_factor_si_to_unit.text = '1'
        self.unit_Watt_offset_si_to_unit = ET.SubElement(unit_Watt, 'OFFSET-SI-TO-UNIT')
        unit_Watt_offset_si_to_unit.text = '0'
        self.unit_Watt_physical_dimension_ref = ET.SubElement(unit_Watt, 'PHYSICAL-DIMENSION-REF')
        unit_Watt_physical_dimension_ref.text = 'Len2M1TiNeg3_1'
        unit_Watt_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_WattPerKelvinPerMtrSqd = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_WattPerKelvinPerMtrSqd_short_name = ET.SubElement(unit_WattPerKelvinPerMtrSqd, 'SHORT-NAME')
        unit_WattPerKelvinPerMtrSqd_short_name.text = 'WattPerKelvinPerMtrSqd'
        self.unit_WattPerKelvinPerMtrSqd_long_name = ET.SubElement(unit_WattPerKelvinPerMtrSqd, 'LONG-NAME')
        self.unit_WattPerKelvinPerMtrSqd_l_4 = ET.SubElement(unit_WattPerKelvinPerMtrSqd_long_name, 'L-4')
        unit_WattPerKelvinPerMtrSqd_l_4.text = 'Watt Per Kelvin Per Square Meter'
        unit_WattPerKelvinPerMtrSqd_l_4.attrib = {'L': 'EN'}
        self.unit_WattPerKelvinPerMtrSqd_display_name = ET.SubElement(unit_WattPerKelvinPerMtrSqd, 'DISPLAY-NAME')
        unit_WattPerKelvinPerMtrSqd_display_name.text = 'W/(K*m^2)'
        self.unit_WattPerKelvinPerMtrSqd_factor_si_to_unit = ET.SubElement(unit_WattPerKelvinPerMtrSqd, 'FACTOR-SI-TO-UNIT')
        unit_WattPerKelvinPerMtrSqd_factor_si_to_unit.text = '1'
        self.unit_WattPerKelvinPerMtrSqd_offset_si_to_unit = ET.SubElement(unit_WattPerKelvinPerMtrSqd, 'OFFSET-SI-TO-UNIT')
        unit_WattPerKelvinPerMtrSqd_offset_si_to_unit.text = '0'
        self.unit_WattPerKelvinPerMtrSqd_physical_dimension_ref = ET.SubElement(unit_WattPerKelvinPerMtrSqd, 'PHYSICAL-DIMENSION-REF')
        unit_WattPerKelvinPerMtrSqd_physical_dimension_ref.text = 'M1TiNeg3TNeg1'
        unit_WattPerKelvinPerMtrSqd_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_WattPerMtrPerKelvin = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_WattPerMtrPerKelvin_short_name = ET.SubElement(unit_WattPerMtrPerKelvin, 'SHORT-NAME')
        unit_WattPerMtrPerKelvin_short_name.text = 'WattPerMtrPerKelvin'
        self.unit_WattPerMtrPerKelvin_long_name = ET.SubElement(unit_WattPerMtrPerKelvin, 'LONG-NAME')
        self.unit_WattPerMtrPerKelvin_l_4 = ET.SubElement(unit_WattPerMtrPerKelvin_long_name, 'L-4')
        unit_WattPerMtrPerKelvin_l_4.text = 'Watt Per Meter Per Kelvin'
        unit_WattPerMtrPerKelvin_l_4.attrib = {'L': 'EN'}
        self.unit_WattPerMtrPerKelvin_display_name = ET.SubElement(unit_WattPerMtrPerKelvin, 'DISPLAY-NAME')
        unit_WattPerMtrPerKelvin_display_name.text = 'W/(m*K)'
        self.unit_WattPerMtrPerKelvin_factor_si_to_unit = ET.SubElement(unit_WattPerMtrPerKelvin, 'FACTOR-SI-TO-UNIT')
        unit_WattPerMtrPerKelvin_factor_si_to_unit.text = '1'
        self.unit_WattPerMtrPerKelvin_offset_si_to_unit = ET.SubElement(unit_WattPerMtrPerKelvin, 'OFFSET-SI-TO-UNIT')
        unit_WattPerMtrPerKelvin_offset_si_to_unit.text = '0'
        self.unit_WattPerMtrPerKelvin_physical_dimension_ref = ET.SubElement(unit_WattPerMtrPerKelvin, 'PHYSICAL-DIMENSION-REF')
        unit_WattPerMtrPerKelvin_physical_dimension_ref.text = 'Len1M1TiNeg3TNeg1'
        unit_WattPerMtrPerKelvin_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_WattPerSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_WattPerSec_short_name = ET.SubElement(unit_WattPerSec, 'SHORT-NAME')
        unit_WattPerSec_short_name.text = 'WattPerSec'
        self.unit_WattPerSec_long_name = ET.SubElement(unit_WattPerSec, 'LONG-NAME')
        self.unit_WattPerSec_l_4 = ET.SubElement(unit_WattPerSec_long_name, 'L-4')
        unit_WattPerSec_l_4.text = 'Watt Per Second'
        unit_WattPerSec_l_4.attrib = {'L': 'EN'}
        self.unit_WattPerSec_display_name = ET.SubElement(unit_WattPerSec, 'DISPLAY-NAME')
        unit_WattPerSec_display_name.text = 'W/s'
        self.unit_WattPerSec_factor_si_to_unit = ET.SubElement(unit_WattPerSec, 'FACTOR-SI-TO-UNIT')
        unit_WattPerSec_factor_si_to_unit.text = '1'
        self.unit_WattPerSec_offset_si_to_unit = ET.SubElement(unit_WattPerSec, 'OFFSET-SI-TO-UNIT')
        unit_WattPerSec_offset_si_to_unit.text = '0'
        self.unit_WattPerSec_physical_dimension_ref = ET.SubElement(unit_WattPerSec, 'PHYSICAL-DIMENSION-REF')
        unit_WattPerSec_physical_dimension_ref.text = 'Len2M1TiNeg4'
        unit_WattPerSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_WattSec = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_WattSec_short_name = ET.SubElement(unit_WattSec, 'SHORT-NAME')
        unit_WattSec_short_name.text = 'WattSec'
        self.unit_WattSec_long_name = ET.SubElement(unit_WattSec, 'LONG-NAME')
        self.unit_WattSec_l_4 = ET.SubElement(unit_WattSec_long_name, 'L-4')
        unit_WattSec_l_4.text = 'Wattsecond'
        unit_WattSec_l_4.attrib = {'L': 'EN'}
        self.unit_WattSec_display_name = ET.SubElement(unit_WattSec, 'DISPLAY-NAME')
        unit_WattSec_display_name.text = 'Ws'
        self.unit_WattSec_factor_si_to_unit = ET.SubElement(unit_WattSec, 'FACTOR-SI-TO-UNIT')
        unit_WattSec_factor_si_to_unit.text = '1'
        self.unit_WattSec_offset_si_to_unit = ET.SubElement(unit_WattSec, 'OFFSET-SI-TO-UNIT')
        unit_WattSec_offset_si_to_unit.text = '0'
        self.unit_WattSec_physical_dimension_ref = ET.SubElement(unit_WattSec, 'PHYSICAL-DIMENSION-REF')
        unit_WattSec_physical_dimension_ref.text = 'Len2M1TiNeg2_1'
        unit_WattSec_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Wb = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Wb_short_name = ET.SubElement(unit_Wb, 'SHORT-NAME')
        unit_Wb_short_name.text = 'Wb'
        self.unit_Wb_long_name = ET.SubElement(unit_Wb, 'LONG-NAME')
        self.unit_Wb_l_4 = ET.SubElement(unit_Wb_long_name, 'L-4')
        unit_Wb_l_4.text = 'Weber'
        unit_Wb_l_4.attrib = {'L': 'EN'}
        self.unit_Wb_display_name = ET.SubElement(unit_Wb, 'DISPLAY-NAME')
        unit_Wb_display_name.text = 'Wb'
        self.unit_Wb_factor_si_to_unit = ET.SubElement(unit_Wb, 'FACTOR-SI-TO-UNIT')
        unit_Wb_factor_si_to_unit.text = '1'
        self.unit_Wb_offset_si_to_unit = ET.SubElement(unit_Wb, 'OFFSET-SI-TO-UNIT')
        unit_Wb_offset_si_to_unit.text = '0'
        self.unit_Wb_physical_dimension_ref = ET.SubElement(unit_Wb, 'PHYSICAL-DIMENSION-REF')
        unit_Wb_physical_dimension_ref.text = 'Len2M1TiNeg2INeg1'
        unit_Wb_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.unit_Yr = ET.SubElement(Units_folder_elements, 'UNIT')
        self.unit_Yr_short_name = ET.SubElement(unit_Yr, 'SHORT-NAME')
        unit_Yr_short_name.text = 'Yr'
        self.unit_Yr_long_name = ET.SubElement(unit_Yr, 'LONG-NAME')
        self.unit_Yr_l_4 = ET.SubElement(unit_Yr_long_name, 'L-4')
        unit_Yr_l_4.text = 'Year'
        unit_Yr_l_4.attrib = {'L': 'EN'}
        self.unit_Yr_display_name = ET.SubElement(unit_Yr, 'DISPLAY-NAME')
        unit_Yr_display_name.text = 'a'
        self.unit_Yr_factor_si_to_unit = ET.SubElement(unit_Yr, 'FACTOR-SI-TO-UNIT')
        unit_Yr_factor_si_to_unit.text = '3.16880878140289E-08'
        self.unit_Yr_offset_si_to_unit = ET.SubElement(unit_Yr, 'OFFSET-SI-TO-UNIT')
        unit_Yr_offset_si_to_unit.text = '0'
        self.unit_Yr_physical_dimension_ref = ET.SubElement(unit_Yr, 'PHYSICAL-DIMENSION-REF')
        unit_Yr_physical_dimension_ref.text = 'Ti1'
        unit_Yr_physical_dimension_ref.attrib = {'DEST': 'PHYSICAL-DIMENSION', 'BASE': 'PhysicalDimensions'}
        self.AUTOSAR_Platform_folder = ET.SubElement(autosar_subfolders, 'AR-PACKAGE')
        self.AUTOSAR_Platform_folder_short_name = ET.SubElement(AUTOSAR_Platform_folder, 'SHORT-NAME')
        AUTOSAR_Platform_folder_short_name.text = 'AUTOSAR_Platform'
        self.AUTOSAR_Platform_subfolder = ET.SubElement(AUTOSAR_Platform_folder, 'AR-PACKAGES')
        self.BaseTypes_folder = ET.SubElement(AUTOSAR_Platform_subfolder, 'AR-PACKAGE')
        self.BaseTypes_folder_short_name = ET.SubElement(BaseTypes_folder, 'SHORT-NAME')
        BaseTypes_folder_short_name.text = 'BaseTypes'
        self.BaseTypes_folder_short_name_category = ET.SubElement(BaseTypes_folder, 'CATEGORY')
        BaseTypes_folder_short_name_category.text = 'STANDARD'
        self.BaseTypes_folder_elements = ET.SubElement(BaseTypes_folder, 'ELEMENTS')
        self.sw_base_type_boolean = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_boolean_short_name = ET.SubElement(sw_base_type_boolean, 'SHORT-NAME')
        sw_base_type_boolean_short_name.text = 'boolean'
        self.sw_base_type_boolean_long_name = ET.SubElement(sw_base_type_boolean, 'LONG-NAME')
        self.sw_base_type_boolean_l_4 = ET.SubElement(sw_base_type_boolean_long_name, 'L-4')
        sw_base_type_boolean_l_4.text = 'boolean'
        sw_base_type_boolean_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_boolean_category = ET.SubElement(sw_base_type_boolean, 'CATEGORY')
        sw_base_type_boolean_category.text = 'FIXED_LENGTH'
        self.sw_base_type_boolean_base_type_size = ET.SubElement(sw_base_type_boolean, 'BASE-TYPE-SIZE')
        sw_base_type_boolean_base_type_size.text = '8'
        self.sw_base_type_boolean_base_type_encoding = ET.SubElement(sw_base_type_boolean, 'BASE-TYPE-ENCODING')
        sw_base_type_boolean_base_type_encoding.text = 'BOOLEAN'
        self.sw_base_type_float32 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_float32_short_name = ET.SubElement(sw_base_type_float32, 'SHORT-NAME')
        sw_base_type_float32_short_name.text = 'float32'
        self.sw_base_type_float32_long_name = ET.SubElement(sw_base_type_float32, 'LONG-NAME')
        self.sw_base_type_float32_l_4 = ET.SubElement(sw_base_type_float32_long_name, 'L-4')
        sw_base_type_float32_l_4.text = 'float32'
        sw_base_type_float32_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_float32_category = ET.SubElement(sw_base_type_float32, 'CATEGORY')
        sw_base_type_float32_category.text = 'FIXED_LENGTH'
        self.sw_base_type_float32_base_type_size = ET.SubElement(sw_base_type_float32, 'BASE-TYPE-SIZE')
        sw_base_type_float32_base_type_size.text = '32'
        self.sw_base_type_float32_base_type_encoding = ET.SubElement(sw_base_type_float32, 'BASE-TYPE-ENCODING')
        sw_base_type_float32_base_type_encoding.text = 'IEEE754'
        self.sw_base_type_float64 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_float64_short_name = ET.SubElement(sw_base_type_float64, 'SHORT-NAME')
        sw_base_type_float64_short_name.text = 'float64'
        self.sw_base_type_float64_long_name = ET.SubElement(sw_base_type_float64, 'LONG-NAME')
        self.sw_base_type_float64_l_4 = ET.SubElement(sw_base_type_float64_long_name, 'L-4')
        sw_base_type_float64_l_4.text = 'float64'
        sw_base_type_float64_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_float64_category = ET.SubElement(sw_base_type_float64, 'CATEGORY')
        sw_base_type_float64_category.text = 'FIXED_LENGTH'
        self.sw_base_type_float64_base_type_size = ET.SubElement(sw_base_type_float64, 'BASE-TYPE-SIZE')
        sw_base_type_float64_base_type_size.text = '64'
        self.sw_base_type_float64_base_type_encoding = ET.SubElement(sw_base_type_float64, 'BASE-TYPE-ENCODING')
        sw_base_type_float64_base_type_encoding.text = 'IEEE754'
        self.sw_base_type_sint16 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_sint16_short_name = ET.SubElement(sw_base_type_sint16, 'SHORT-NAME')
        sw_base_type_sint16_short_name.text = 'sint16'
        self.sw_base_type_sint16_long_name = ET.SubElement(sw_base_type_sint16, 'LONG-NAME')
        self.sw_base_type_sint16_l_4 = ET.SubElement(sw_base_type_sint16_long_name, 'L-4')
        sw_base_type_sint16_l_4.text = 'sint16'
        sw_base_type_sint16_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_sint16_category = ET.SubElement(sw_base_type_sint16, 'CATEGORY')
        sw_base_type_sint16_category.text = 'FIXED_LENGTH'
        self.sw_base_type_sint16_base_type_size = ET.SubElement(sw_base_type_sint16, 'BASE-TYPE-SIZE')
        sw_base_type_sint16_base_type_size.text = '16'
        self.sw_base_type_sint16_base_type_encoding = ET.SubElement(sw_base_type_sint16, 'BASE-TYPE-ENCODING')
        sw_base_type_sint16_base_type_encoding.text = '2C'
        self.sw_base_type_sint32 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_sint32_short_name = ET.SubElement(sw_base_type_sint32, 'SHORT-NAME')
        sw_base_type_sint32_short_name.text = 'sint32'
        self.sw_base_type_sint32_long_name = ET.SubElement(sw_base_type_sint32, 'LONG-NAME')
        self.sw_base_type_sint32_l_4 = ET.SubElement(sw_base_type_sint32_long_name, 'L-4')
        sw_base_type_sint32_l_4.text = 'sint32'
        sw_base_type_sint32_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_sint32_category = ET.SubElement(sw_base_type_sint32, 'CATEGORY')
        sw_base_type_sint32_category.text = 'FIXED_LENGTH'
        self.sw_base_type_sint32_base_type_size = ET.SubElement(sw_base_type_sint32, 'BASE-TYPE-SIZE')
        sw_base_type_sint32_base_type_size.text = '32'
        self.sw_base_type_sint32_base_type_encoding = ET.SubElement(sw_base_type_sint32, 'BASE-TYPE-ENCODING')
        sw_base_type_sint32_base_type_encoding.text = '2C'
        self.sw_base_type_sint64 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_sint64_short_name = ET.SubElement(sw_base_type_sint64, 'SHORT-NAME')
        sw_base_type_sint64_short_name.text = 'sint64'
        self.sw_base_type_sint64_long_name = ET.SubElement(sw_base_type_sint64, 'LONG-NAME')
        self.sw_base_type_sint64_l_4 = ET.SubElement(sw_base_type_sint64_long_name, 'L-4')
        sw_base_type_sint64_l_4.text = 'sint64'
        sw_base_type_sint64_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_sint64_category = ET.SubElement(sw_base_type_sint64, 'CATEGORY')
        sw_base_type_sint64_category.text = 'FIXED_LENGTH'
        self.sw_base_type_sint64_base_type_size = ET.SubElement(sw_base_type_sint64, 'BASE-TYPE-SIZE')
        sw_base_type_sint64_base_type_size.text = '64'
        self.sw_base_type_sint64_base_type_encoding = ET.SubElement(sw_base_type_sint64, 'BASE-TYPE-ENCODING')
        sw_base_type_sint64_base_type_encoding.text = '2C'
        self.sw_base_type_sint8 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_sint8_short_name = ET.SubElement(sw_base_type_sint8, 'SHORT-NAME')
        sw_base_type_sint8_short_name.text = 'sint8'
        self.sw_base_type_sint8_long_name = ET.SubElement(sw_base_type_sint8, 'LONG-NAME')
        self.sw_base_type_sint8_l_4 = ET.SubElement(sw_base_type_sint8_long_name, 'L-4')
        sw_base_type_sint8_l_4.text = 'sint8'
        sw_base_type_sint8_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_sint8_category = ET.SubElement(sw_base_type_sint8, 'CATEGORY')
        sw_base_type_sint8_category.text = 'FIXED_LENGTH'
        self.sw_base_type_sint8_base_type_size = ET.SubElement(sw_base_type_sint8, 'BASE-TYPE-SIZE')
        sw_base_type_sint8_base_type_size.text = '8'
        self.sw_base_type_sint8_base_type_encoding = ET.SubElement(sw_base_type_sint8, 'BASE-TYPE-ENCODING')
        sw_base_type_sint8_base_type_encoding.text = '2C'
        self.sw_base_type_uint16 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_uint16_short_name = ET.SubElement(sw_base_type_uint16, 'SHORT-NAME')
        sw_base_type_uint16_short_name.text = 'uint16'
        self.sw_base_type_uint16_long_name = ET.SubElement(sw_base_type_uint16, 'LONG-NAME')
        self.sw_base_type_uint16_l_4 = ET.SubElement(sw_base_type_uint16_long_name, 'L-4')
        sw_base_type_uint16_l_4.text = 'uint16'
        sw_base_type_uint16_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_uint16_category = ET.SubElement(sw_base_type_uint16, 'CATEGORY')
        sw_base_type_uint16_category.text = 'FIXED_LENGTH'
        self.sw_base_type_uint16_base_type_size = ET.SubElement(sw_base_type_uint16, 'BASE-TYPE-SIZE')
        sw_base_type_uint16_base_type_size.text = '16'
        self.sw_base_type_uint16_base_type_encoding = ET.SubElement(sw_base_type_uint16, 'BASE-TYPE-ENCODING')
        sw_base_type_uint16_base_type_encoding.text = 'NONE'
        self.sw_base_type_uint32 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_uint32_short_name = ET.SubElement(sw_base_type_uint32, 'SHORT-NAME')
        sw_base_type_uint32_short_name.text = 'uint32'
        self.sw_base_type_uint32_long_name = ET.SubElement(sw_base_type_uint32, 'LONG-NAME')
        self.sw_base_type_uint32_l_4 = ET.SubElement(sw_base_type_uint32_long_name, 'L-4')
        sw_base_type_uint32_l_4.text = 'uint32'
        sw_base_type_uint32_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_uint32_category = ET.SubElement(sw_base_type_uint32, 'CATEGORY')
        sw_base_type_uint32_category.text = 'FIXED_LENGTH'
        self.sw_base_type_uint32_base_type_size = ET.SubElement(sw_base_type_uint32, 'BASE-TYPE-SIZE')
        sw_base_type_uint32_base_type_size.text = '32'
        self.sw_base_type_uint32_base_type_encoding = ET.SubElement(sw_base_type_uint32, 'BASE-TYPE-ENCODING')
        sw_base_type_uint32_base_type_encoding.text = 'NONE'
        self.sw_base_type_uint64 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_uint64_short_name = ET.SubElement(sw_base_type_uint64, 'SHORT-NAME')
        sw_base_type_uint64_short_name.text = 'uint64'
        self.sw_base_type_uint64_long_name = ET.SubElement(sw_base_type_uint64, 'LONG-NAME')
        self.sw_base_type_uint64_l_4 = ET.SubElement(sw_base_type_uint64_long_name, 'L-4')
        sw_base_type_uint64_l_4.text = 'uint64'
        sw_base_type_uint64_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_uint64_category = ET.SubElement(sw_base_type_uint64, 'CATEGORY')
        sw_base_type_uint64_category.text = 'FIXED_LENGTH'
        self.sw_base_type_uint64_base_type_size = ET.SubElement(sw_base_type_uint64, 'BASE-TYPE-SIZE')
        sw_base_type_uint64_base_type_size.text = '64'
        self.sw_base_type_uint64_base_type_encoding = ET.SubElement(sw_base_type_uint64, 'BASE-TYPE-ENCODING')
        sw_base_type_uint64_base_type_encoding.text = 'NONE'
        self.sw_base_type_uint8 = ET.SubElement(BaseTypes_folder_elements, 'SW-BASE-TYPE')
        self.sw_base_type_uint8_short_name = ET.SubElement(sw_base_type_uint8, 'SHORT-NAME')
        sw_base_type_uint8_short_name.text = 'uint8'
        self.sw_base_type_uint8_long_name = ET.SubElement(sw_base_type_uint8, 'LONG-NAME')
        self.sw_base_type_uint8_l_4 = ET.SubElement(sw_base_type_uint8_long_name, 'L-4')
        sw_base_type_uint8_l_4.text = 'uint8'
        sw_base_type_uint8_l_4.attrib = {'L': 'EN'}
        self.sw_base_type_uint8_category = ET.SubElement(sw_base_type_uint8, 'CATEGORY')
        sw_base_type_uint8_category.text = 'FIXED_LENGTH'
        self.sw_base_type_uint8_base_type_size = ET.SubElement(sw_base_type_uint8, 'BASE-TYPE-SIZE')
        sw_base_type_uint8_base_type_size.text = '8'
        self.sw_base_type_uint8_base_type_encoding = ET.SubElement(sw_base_type_uint8, 'BASE-TYPE-ENCODING')
        sw_base_type_uint8_base_type_encoding.text = 'NONE'
        self.CompuMethods_folder = ET.SubElement(AUTOSAR_Platform_subfolder, 'AR-PACKAGE')
        self.CompuMethods_folder_short_name = ET.SubElement(CompuMethods_folder, 'SHORT-NAME')
        CompuMethods_folder_short_name.text = 'CompuMethods'
        self.CompuMethods_folder_category = ET.SubElement(CompuMethods_folder, 'CATEGORY')
        CompuMethods_folder_category.text = 'STANDARD'
        self.CompuMethods_folder_elements = ET.SubElement(CompuMethods_folder, 'ELEMENTS')
        self.compu_method_boolean = ET.SubElement(CompuMethods_folder_elements, 'COMPU-METHOD')
        self.compu_method_boolean_short_name = ET.SubElement(compu_method_boolean, 'SHORT-NAME')
        compu_method_boolean_short_name.text = 'boolean'
        self.compu_method_boolean_category = ET.SubElement(compu_method_boolean, 'CATEGORY')
        compu_method_boolean_category.text = 'TEXTTABLE'
        self.compu_method_boolean_compu_internal_to_phys = ET.SubElement(compu_method_boolean, 'COMPU-INTERNAL-TO-PHYS')
        self.compu_method_boolean_compu_scales = ET.SubElement(compu_method_boolean_compu_internal_to_phys, 'COMPU-SCALES')
        self.compu_method_boolean_compu_scale1 = ET.SubElement(compu_method_boolean_compu_scales, 'COMPU-SCALE')
        self.compu_method_boolean_compu_scale1_lower_limit = ET.SubElement(compu_method_boolean_compu_scale1, 'LOWER-LIMIT')
        compu_method_boolean_compu_scale1_lower_limit.text = '0'
        compu_method_boolean_compu_scale1_lower_limit.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_method_boolean_compu_scale1_upper_limit = ET.SubElement(compu_method_boolean_compu_scale1, 'UPPER-LIMIT')
        compu_method_boolean_compu_scale1_upper_limit.text = '0'
        compu_method_boolean_compu_scale1_upper_limit.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_method_boolean_compu_scale1_compu_const = ET.SubElement(compu_method_boolean_compu_scale1, 'COMPU-CONST')
        self.compu_method_boolean_compu_scale1_vt = ET.SubElement(compu_method_boolean_compu_scale1_compu_const, 'VT')
        compu_method_boolean_compu_scale1_vt.text = 'FALSE'
        self.compu_method_boolean_compu_scale2 = ET.SubElement(compu_method_boolean_compu_scales, 'COMPU-SCALE')
        self.compu_method_boolean_compu_scale2_lower_limit = ET.SubElement(compu_method_boolean_compu_scale2, 'LOWER-LIMIT')
        compu_method_boolean_compu_scale2_lower_limit.text = '1'
        compu_method_boolean_compu_scale2_lower_limit.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_method_boolean_compu_scale2_upper_limit = ET.SubElement(compu_method_boolean_compu_scale2, 'UPPER-LIMIT')
        compu_method_boolean_compu_scale2_upper_limit.text = '1'
        compu_method_boolean_compu_scale2_upper_limit.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_method_boolean_compu_scale2_compu_const = ET.SubElement(compu_method_boolean_compu_scale2, 'COMPU-CONST')
        self.compu_method_boolean_compu_scale2_vt = ET.SubElement(compu_method_boolean_compu_scale2_compu_const, 'VT')
        compu_method_boolean_compu_scale2_vt.text = 'TRUE'
        self.DataConstrs_folder = ET.SubElement(AUTOSAR_Platform_subfolder, 'AR-PACKAGE')
        self.DataConstrs_folder_short_name = ET.SubElement(DataConstrs_folder, 'SHORT-NAME')
        DataConstrs_folder_short_name.text = 'DataConstrs'
        self.DataConstrs_folder_category = ET.SubElement(DataConstrs_folder, 'CATEGORY')
        DataConstrs_folder_category.text = 'STANDARD'
        self.DataConstrs_folder_elements = ET.SubElement(DataConstrs_folder, 'ELEMENTS')
        self.data_constr_boolean = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_boolean_short_name = ET.SubElement(data_constr_boolean, 'SHORT-NAME')
        data_constr_boolean_short_name.text = 'boolean'
        self.data_constr_boolean_data_constr_rules = ET.SubElement(data_constr_boolean, 'DATA-CONSTR-RULES')
        self.data_constr_boolean_data_constr_rule = ET.SubElement(data_constr_boolean_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_boolean_internal_constrs = ET.SubElement(data_constr_boolean_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_boolean_lower_limit = ET.SubElement(data_constr_boolean_internal_constrs, 'LOWER-LIMIT')
        data_constr_boolean_lower_limit.text = '0'
        self.data_constr_boolean_upper_limit = ET.SubElement(data_constr_boolean_internal_constrs, 'UPPER-LIMIT')
        data_constr_boolean_upper_limit.text = '1'
        self.data_constr_float32 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_float32_short_name = ET.SubElement(data_constr_float32, 'SHORT-NAME')
        data_constr_float32_short_name.text = 'float32'
        self.data_constr_float32_data_constr_rules = ET.SubElement(data_constr_float32, 'DATA-CONSTR-RULES')
        self.data_constr_float32_data_constr_rule = ET.SubElement(data_constr_float32_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_float32_internal_constrs = ET.SubElement(data_constr_float32_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_float32_lower_limit = ET.SubElement(data_constr_float32_internal_constrs, 'LOWER-LIMIT')
        data_constr_float32_lower_limit.text = '-3.40282347e+38'
        self.data_constr_float32_upper_limit = ET.SubElement(data_constr_float32_internal_constrs, 'UPPER-LIMIT')
        data_constr_float32_upper_limit.text = '3.40282347e+38'
        self.data_constr_float64 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_float64_short_name = ET.SubElement(data_constr_float64, 'SHORT-NAME')
        data_constr_float64_short_name.text = 'float64'
        self.data_constr_float64_data_constr_rules = ET.SubElement(data_constr_float64, 'DATA-CONSTR-RULES')
        self.data_constr_float64_data_constr_rule = ET.SubElement(data_constr_float64_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_float64_internal_constrs = ET.SubElement(data_constr_float64_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_float64_lower_limit = ET.SubElement(data_constr_float64_internal_constrs, 'LOWER-LIMIT')
        data_constr_float64_lower_limit.text = '-1.7976931348623157e+308'
        self.data_constr_float64_upper_limit = ET.SubElement(data_constr_float64_internal_constrs, 'UPPER-LIMIT')
        data_constr_float64_upper_limit.text = '1.7976931348623157e+308'
        self.data_constr_sint16 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_sint16_short_name = ET.SubElement(data_constr_sint16, 'SHORT-NAME')
        data_constr_sint16_short_name.text = 'sint16'
        self.data_constr_sint16_data_constr_rules = ET.SubElement(data_constr_sint16, 'DATA-CONSTR-RULES')
        self.data_constr_sint16_data_constr_rule = ET.SubElement(data_constr_sint16_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_sint16_internal_constrs = ET.SubElement(data_constr_sint16_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_sint16_lower_limit = ET.SubElement(data_constr_sint16_internal_constrs, 'LOWER-LIMIT')
        data_constr_sint16_lower_limit.text = '-32768'
        self.data_constr_sint16_upper_limit = ET.SubElement(data_constr_sint16_internal_constrs, 'UPPER-LIMIT')
        data_constr_sint16_upper_limit.text = '+32767'
        self.data_constr_sint16_least = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_sint16_least_short_name = ET.SubElement(data_constr_sint16_least, 'SHORT-NAME')
        data_constr_sint16_least_short_name.text = 'sint16_least'
        self.data_constr_sint16_least_data_constr_rules = ET.SubElement(data_constr_sint16_least, 'DATA-CONSTR-RULES')
        self.data_constr_sint16_least_data_constr_rule = ET.SubElement(data_constr_sint16_least_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_sint16_least_internal_constrs = ET.SubElement(data_constr_sint16_least_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_sint16_least_lower_limit = ET.SubElement(data_constr_sint16_least_internal_constrs, 'LOWER-LIMIT')
        data_constr_sint16_least_lower_limit.text = '-32768'
        self.data_constr_sint16_least_upper_limit = ET.SubElement(data_constr_sint16_least_internal_constrs, 'UPPER-LIMIT')
        data_constr_sint16_least_upper_limit.text = '+32767'
        self.data_constr_sint32 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_sint32_short_name = ET.SubElement(data_constr_sint32, 'SHORT-NAME')
        data_constr_sint32_short_name.text = 'sint32'
        self.data_constr_sint32_data_constr_rules = ET.SubElement(data_constr_sint32, 'DATA-CONSTR-RULES')
        self.data_constr_sint32_data_constr_rule = ET.SubElement(data_constr_sint32_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_sint32_internal_constrs = ET.SubElement(data_constr_sint32_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_sint32_lower_limit = ET.SubElement(data_constr_sint32_internal_constrs, 'LOWER-LIMIT')
        data_constr_sint32_lower_limit.text = '-2147483648'
        self.data_constr_sint32_upper_limit = ET.SubElement(data_constr_sint32_internal_constrs, 'UPPER-LIMIT')
        data_constr_sint32_upper_limit.text = '+2147483647'
        self.data_constr_sint32_least = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_sint32_least_short_name = ET.SubElement(data_constr_sint32_least, 'SHORT-NAME')
        data_constr_sint32_least_short_name.text = 'sint32_least'
        self.data_constr_sint32_least_data_constr_rules = ET.SubElement(data_constr_sint32_least, 'DATA-CONSTR-RULES')
        self.data_constr_sint32_least_data_constr_rule = ET.SubElement(data_constr_sint32_least_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_sint32_least_internal_constrs = ET.SubElement(data_constr_sint32_least_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_sint32_least_lower_limit = ET.SubElement(data_constr_sint32_least_internal_constrs, 'LOWER-LIMIT')
        data_constr_sint32_least_lower_limit.text = '-2147483648'
        self.data_constr_sint32_least_upper_limit = ET.SubElement(data_constr_sint32_least_internal_constrs, 'UPPER-LIMIT')
        data_constr_sint32_least_upper_limit.text = '+2147483647'
        self.data_constr_sint64 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_sint64_short_name = ET.SubElement(data_constr_sint64, 'SHORT-NAME')
        data_constr_sint64_short_name.text = 'sint64'
        self.data_constr_sint64_data_constr_rules = ET.SubElement(data_constr_sint64, 'DATA-CONSTR-RULES')
        self.data_constr_sint64_data_constr_rule = ET.SubElement(data_constr_sint64_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_sint64_internal_constrs = ET.SubElement(data_constr_sint64_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_sint64_lower_limit = ET.SubElement(data_constr_sint64_internal_constrs, 'LOWER-LIMIT')
        data_constr_sint64_lower_limit.text = '-9223372036854775808'
        self.data_constr_sint64_upper_limit = ET.SubElement(data_constr_sint64_internal_constrs, 'UPPER-LIMIT')
        data_constr_sint64_upper_limit.text = '9223372036854775807'
        self.data_constr_sint8 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_sint8_short_name = ET.SubElement(data_constr_sint8, 'SHORT-NAME')
        data_constr_sint8_short_name.text = 'sint8'
        self.data_constr_sint8_data_constr_rules = ET.SubElement(data_constr_sint8, 'DATA-CONSTR-RULES')
        self.data_constr_sint8_data_constr_rule = ET.SubElement(data_constr_sint8_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_sint8_internal_constrs = ET.SubElement(data_constr_sint8_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_sint8_lower_limit = ET.SubElement(data_constr_sint8_internal_constrs, 'LOWER-LIMIT')
        data_constr_sint8_lower_limit.text = '-128'
        self.data_constr_sint8_upper_limit = ET.SubElement(data_constr_sint8_internal_constrs, 'UPPER-LIMIT')
        data_constr_sint8_upper_limit.text = '+127'
        self.data_constr_sint8_least = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_sint8_least_short_name = ET.SubElement(data_constr_sint8_least, 'SHORT-NAME')
        data_constr_sint8_least_short_name.text = 'sint8_least'
        self.data_constr_sint8_least_data_constr_rules = ET.SubElement(data_constr_sint8_least, 'DATA-CONSTR-RULES')
        self.data_constr_sint8_least_data_constr_rule = ET.SubElement(data_constr_sint8_least_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_sint8_least_internal_constrs = ET.SubElement(data_constr_sint8_least_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_sint8_least_lower_limit = ET.SubElement(data_constr_sint8_least_internal_constrs, 'LOWER-LIMIT')
        data_constr_sint8_least_lower_limit.text = '-128'
        self.data_constr_sint8_least_upper_limit = ET.SubElement(data_constr_sint8_least_internal_constrs, 'UPPER-LIMIT')
        data_constr_sint8_least_upper_limit.text = '+127'
        self.data_constr_uint16 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_uint16_short_name = ET.SubElement(data_constr_uint16, 'SHORT-NAME')
        data_constr_uint16_short_name.text = 'uint16'
        self.data_constr_uint16_data_constr_rules = ET.SubElement(data_constr_uint16, 'DATA-CONSTR-RULES')
        self.data_constr_uint16_data_constr_rule = ET.SubElement(data_constr_uint16_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_uint16_internal_constrs = ET.SubElement(data_constr_uint16_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_uint16_lower_limit = ET.SubElement(data_constr_uint16_internal_constrs, 'LOWER-LIMIT')
        data_constr_uint16_lower_limit.text = '0'
        self.data_constr_uint16_upper_limit = ET.SubElement(data_constr_uint16_internal_constrs, 'UPPER-LIMIT')
        data_constr_uint16_upper_limit.text = '65535'
        self.data_constr_uint16_least = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_uint16_least_short_name = ET.SubElement(data_constr_uint16_least, 'SHORT-NAME')
        data_constr_uint16_least_short_name.text = 'uint16_least'
        self.data_constr_uint16_least_data_constr_rules = ET.SubElement(data_constr_uint16_least, 'DATA-CONSTR-RULES')
        self.data_constr_uint16_least_data_constr_rule = ET.SubElement(data_constr_uint16_least_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_uint16_least_internal_constrs = ET.SubElement(data_constr_uint16_least_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_uint16_least_lower_limit = ET.SubElement(data_constr_uint16_least_internal_constrs, 'LOWER-LIMIT')
        data_constr_uint16_least_lower_limit.text = '0'
        self.data_constr_uint16_least_upper_limit = ET.SubElement(data_constr_uint16_least_internal_constrs, 'UPPER-LIMIT')
        data_constr_uint16_least_upper_limit.text = '65535'
        self.data_constr_uint32 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_uint32_short_name = ET.SubElement(data_constr_uint32, 'SHORT-NAME')
        data_constr_uint32_short_name.text = 'uint32'
        self.data_constr_uint32_data_constr_rules = ET.SubElement(data_constr_uint32, 'DATA-CONSTR-RULES')
        self.data_constr_uint32_data_constr_rule = ET.SubElement(data_constr_uint32_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_uint32_internal_constrs = ET.SubElement(data_constr_uint32_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_uint32_lower_limit = ET.SubElement(data_constr_uint32_internal_constrs, 'LOWER-LIMIT')
        data_constr_uint32_lower_limit.text = '0'
        self.data_constr_uint32_upper_limit = ET.SubElement(data_constr_uint32_internal_constrs, 'UPPER-LIMIT')
        data_constr_uint32_upper_limit.text = '4294967295'
        self.data_constr_uint32_least = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_uint32_least_short_name = ET.SubElement(data_constr_uint32_least, 'SHORT-NAME')
        data_constr_uint32_least_short_name.text = 'uint32_least'
        self.data_constr_uint32_least_data_constr_rules = ET.SubElement(data_constr_uint32_least, 'DATA-CONSTR-RULES')
        self.data_constr_uint32_least_data_constr_rule = ET.SubElement(data_constr_uint32_least_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_uint32_least_internal_constrs = ET.SubElement(data_constr_uint32_least_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_uint32_least_lower_limit = ET.SubElement(data_constr_uint32_least_internal_constrs, 'LOWER-LIMIT')
        data_constr_uint32_least_lower_limit.text = '0'
        self.data_constr_uint32_least_upper_limit = ET.SubElement(data_constr_uint32_least_internal_constrs, 'UPPER-LIMIT')
        data_constr_uint32_least_upper_limit.text = '4294967295'
        self.data_constr_uint64 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_uint64_short_name = ET.SubElement(data_constr_uint64, 'SHORT-NAME')
        data_constr_uint64_short_name.text = 'uint64'
        self.data_constr_uint64_data_constr_rules = ET.SubElement(data_constr_uint64, 'DATA-CONSTR-RULES')
        self.data_constr_uint64_data_constr_rule = ET.SubElement(data_constr_uint64_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_uint64_internal_constrs = ET.SubElement(data_constr_uint64_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_uint64_lower_limit = ET.SubElement(data_constr_uint64_internal_constrs, 'LOWER-LIMIT')
        data_constr_uint64_lower_limit.text = '0'
        self.data_constr_uint64_upper_limit = ET.SubElement(data_constr_uint64_internal_constrs, 'UPPER-LIMIT')
        data_constr_uint64_upper_limit.text = '18446744073709551615'
        self.data_constr_uint8 = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_uint8_short_name = ET.SubElement(data_constr_uint8, 'SHORT-NAME')
        data_constr_uint8_short_name.text = 'uint8'
        self.data_constr_uint8_data_constr_rules = ET.SubElement(data_constr_uint8, 'DATA-CONSTR-RULES')
        self.data_constr_uint8_data_constr_rule = ET.SubElement(data_constr_uint8_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_uint8_internal_constrs = ET.SubElement(data_constr_uint8_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_uint8_lower_limit = ET.SubElement(data_constr_uint8_internal_constrs, 'LOWER-LIMIT')
        data_constr_uint8_lower_limit.text = '0'
        self.data_constr_uint8_upper_limit = ET.SubElement(data_constr_uint8_internal_constrs, 'UPPER-LIMIT')
        data_constr_uint8_upper_limit.text = '255'
        self.data_constr_uint8_least = ET.SubElement(DataConstrs_folder_elements, 'DATA-CONSTR')
        self.data_constr_uint8_least_short_name = ET.SubElement(data_constr_uint8_least, 'SHORT-NAME')
        data_constr_uint8_least_short_name.text = 'uint8_least'
        self.data_constr_uint8_least_data_constr_rules = ET.SubElement(data_constr_uint8_least, 'DATA-CONSTR-RULES')
        self.data_constr_uint8_least_data_constr_rule = ET.SubElement(data_constr_uint8_least_data_constr_rules, 'DATA-CONSTR-RULE')
        self.data_constr_uint8_least_internal_constrs = ET.SubElement(data_constr_uint8_least_data_constr_rule, 'INTERNAL-CONSTRS')
        self.data_constr_uint8_least_lower_limit = ET.SubElement(data_constr_uint8_least_internal_constrs, 'LOWER-LIMIT')
        data_constr_uint8_least_lower_limit.text = '0'
        self.data_constr_uint8_least_upper_limit = ET.SubElement(data_constr_uint8_least_internal_constrs, 'UPPER-LIMIT')
        data_constr_uint8_least_upper_limit.text = '255'
        self.ImplementationDataTypes_platform_folder = ET.SubElement(AUTOSAR_Platform_subfolder, 'AR-PACKAGE')
        self.ImplementationDataTypes_platform_folder_short_name = ET.SubElement(ImplementationDataTypes_platform_folder, 'SHORT-NAME')
        ImplementationDataTypes_platform_folder_short_name.text = 'ImplementationDataTypes'
        self.ImplementationDataTypes_platform_folder_category = ET.SubElement(ImplementationDataTypes_platform_folder, 'CATEGORY')
        ImplementationDataTypes_platform_folder_category.text = 'STANDARD'
        self.ImplementationDataTypes_platform_folder_elements = ET.SubElement(ImplementationDataTypes_platform_folder, 'ELEMENTS')
        self.implementation_data_type_ConstVoidPtr = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_ConstVoidPtr_short_name = ET.SubElement(implementation_data_type_ConstVoidPtr, 'SHORT-NAME')
        implementation_data_type_ConstVoidPtr_short_name.text = 'ConstVoidPtr'
        self.implementation_data_type_ConstVoidPtr_long_name = ET.SubElement(implementation_data_type_ConstVoidPtr, 'LONG-NAME')
        self.implementation_data_type_ConstVoidPtr_l_4 = ET.SubElement(implementation_data_type_ConstVoidPtr_long_name, 'L-4')
        implementation_data_type_ConstVoidPtr_l_4.text = 'ConstVoidPtr'
        implementation_data_type_ConstVoidPtr_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_ConstVoidPtr_category = ET.SubElement(implementation_data_type_ConstVoidPtr, 'CATEGORY')
        implementation_data_type_ConstVoidPtr_category.text = 'DATA_REFERENCE'
        self.implementation_data_type_ConstVoidPtr_sw_data_def_props1 = ET.SubElement(implementation_data_type_ConstVoidPtr, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_ConstVoidPtr_sw_data_def_props_variants1 = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_data_def_props1, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_ConstVoidPtr_sw_data_def_props_conditional1 = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_data_def_props_variants1, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ConstVoidPtr_sw_pointer_target_props1 = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_data_def_props_conditional1, 'SW-POINTER-TARGET-PROPS')
        self.implementation_data_type_ConstVoidPtr_target_category = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_pointer_target_props1, 'TARGET-CATEGORY')
        implementation_data_type_ConstVoidPtr_target_category.text = 'VALUE'
        self.implementation_data_type_ConstVoidPtr_sw_data_def_props2 = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_pointer_target_props1, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_ConstVoidPtr_sw_data_def_props_variants2 = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_data_def_props2, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_ConstVoidPtr_sw_data_def_props_conditional2 = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_data_def_props_variants2, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ConstVoidPtr_base_type_ref = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_data_def_props_conditional2, 'BASE-TYPE-REF')
        implementation_data_type_ConstVoidPtr_base_type_ref.text = '/AUTOSAR/AUTOSAR_GenDef/BaseTypes/void'
        implementation_data_type_ConstVoidPtr_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.implementation_data_type_ConstVoidPtr_sw_impl_policy = ET.SubElement(implementation_data_type_ConstVoidPtr_sw_data_def_props_conditional2, 'SW-IMPL-POLICY')
        implementation_data_type_ConstVoidPtr_sw_impl_policy.text = 'CONST'
        self.implementation_data_type_ConstVoidPtr_type_emitter = ET.SubElement(implementation_data_type_ConstVoidPtr, 'TYPE-EMITTER')
        implementation_data_type_ConstVoidPtr_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_VoidPtr = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_VoidPtr_short_name = ET.SubElement(implementation_data_type_VoidPtr, 'SHORT-NAME')
        implementation_data_type_VoidPtr_short_name.text = 'VoidPtr'
        self.implementation_data_type_VoidPtr_long_name = ET.SubElement(implementation_data_type_VoidPtr, 'LONG-NAME')
        self.implementation_data_type_VoidPtr_l_4 = ET.SubElement(implementation_data_type_VoidPtr_long_name, 'L-4')
        implementation_data_type_VoidPtr_l_4.text = 'VoidPtr'
        implementation_data_type_VoidPtr_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_VoidPtr_category = ET.SubElement(implementation_data_type_VoidPtr, 'CATEGORY')
        implementation_data_type_VoidPtr_category.text = 'DATA_REFERENCE'
        self.implementation_data_type_VoidPtr_sw_data_def_props = ET.SubElement(implementation_data_type_VoidPtr, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_VoidPtr_sw_data_def_props_variants = ET.SubElement(implementation_data_type_VoidPtr_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_VoidPtr_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_VoidPtr_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_VoidPtr_sw_pointer_target_props = ET.SubElement(implementation_data_type_VoidPtr_sw_data_def_props_conditional, 'SW-POINTER-TARGET-PROPS')
        self.target_implementation_data_type_VoidPtr_category = ET.SubElement(implementation_data_type_VoidPtr_sw_pointer_target_props, 'TARGET-CATEGORY')
        target_implementation_data_type_VoidPtr_category.text = 'VALUE'
        self.implementation_data_type_VoidPtr_sw_data_def_props = ET.SubElement(implementation_data_type_VoidPtr_sw_pointer_target_props, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_VoidPtr_sw_data_def_props_variants = ET.SubElement(implementation_data_type_VoidPtr_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_VoidPtr_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_VoidPtr_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_VoidPtr_base_type_ref = ET.SubElement(implementation_data_type_VoidPtr_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_VoidPtr_base_type_ref.text = '/AUTOSAR/AUTOSAR_GenDef/BaseTypes/void'
        implementation_data_type_VoidPtr_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.implementation_data_type_VoidPtr_type_emitter = ET.SubElement(implementation_data_type_VoidPtr, 'TYPE-EMITTER')
        implementation_data_type_VoidPtr_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_boolean = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_boolean_short_name = ET.SubElement(implementation_data_type_boolean, 'SHORT-NAME')
        implementation_data_type_boolean_short_name.text = 'boolean'
        self.implementation_data_type_boolean_long_name = ET.SubElement(implementation_data_type_boolean, 'LONG-NAME')
        self.implementation_data_type_boolean_l_4 = ET.SubElement(implementation_data_type_boolean_long_name, 'L-4')
        implementation_data_type_boolean_l_4.text = 'boolean'
        implementation_data_type_boolean_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_boolean_category = ET.SubElement(implementation_data_type_boolean, 'CATEGORY')
        implementation_data_type_boolean_category.text = 'VALUE'
        self.implementation_data_type_boolean_sw_data_def_props = ET.SubElement(implementation_data_type_boolean, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_boolean_sw_data_def_props_variants = ET.SubElement(implementation_data_type_boolean_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_boolean_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_boolean_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_boolean_base_type_ref = ET.SubElement(implementation_data_type_boolean_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_boolean_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/boolean'
        implementation_data_type_boolean_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.compu_method_ref1 = ET.SubElement(implementation_data_type_boolean_sw_data_def_props_conditional, 'COMPU-METHOD-REF')
        compu_method_ref1.text = '/AUTOSAR/AUTOSAR_Platform/CompuMethods/boolean'
        compu_method_ref1.attrib = {'DEST': 'COMPU-METHOD'}
        self.data_constr_ref1 = ET.SubElement(implementation_data_type_boolean_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref1.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/boolean'
        data_constr_ref1.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_boolean_type_emitter = ET.SubElement(implementation_data_type_boolean, 'TYPE-EMITTER')
        implementation_data_type_boolean_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_float32 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_float32_short_name = ET.SubElement(implementation_data_type_float32, 'SHORT-NAME')
        implementation_data_type_float32_short_name.text = 'float32'
        self.implementation_data_type_float32_long_name = ET.SubElement(implementation_data_type_float32, 'LONG-NAME')
        self.implementation_data_type_float32_l_4 = ET.SubElement(implementation_data_type_float32_long_name, 'L-4')
        implementation_data_type_float32_l_4.text = 'float32'
        implementation_data_type_float32_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_float32_category = ET.SubElement(implementation_data_type_float32, 'CATEGORY')
        implementation_data_type_float32_category.text = 'VALUE'
        self.implementation_data_type_float32_sw_data_def_props = ET.SubElement(implementation_data_type_float32, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_float32_sw_data_def_props_variants = ET.SubElement(implementation_data_type_float32_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_float32_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_float32_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_float32_base_type_ref = ET.SubElement(implementation_data_type_float32_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_float32_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/float32'
        implementation_data_type_float32_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref2 = ET.SubElement(implementation_data_type_float32_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref2.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/float32'
        data_constr_ref2.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_float32_type_emitter = ET.SubElement(implementation_data_type_float32, 'TYPE-EMITTER')
        implementation_data_type_float32_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_float64 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_float64_short_name = ET.SubElement(implementation_data_type_float64, 'SHORT-NAME')
        implementation_data_type_float64_short_name.text = 'float64'
        self.implementation_data_type_float64_long_name = ET.SubElement(implementation_data_type_float64, 'LONG-NAME')
        self.implementation_data_type_float64_l_4 = ET.SubElement(implementation_data_type_float64_long_name, 'L-4')
        implementation_data_type_float64_l_4.text = 'float64'
        implementation_data_type_float64_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_float64_category = ET.SubElement(implementation_data_type_float64, 'CATEGORY')
        implementation_data_type_float64_category.text = 'VALUE'
        self.implementation_data_type_float64_sw_data_def_props = ET.SubElement(implementation_data_type_float64, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_float64_sw_data_def_props_variants = ET.SubElement(implementation_data_type_float64_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_float64_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_float64_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_float64_base_type_ref = ET.SubElement(implementation_data_type_float64_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_float64_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/float64'
        implementation_data_type_float64_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref3 = ET.SubElement(implementation_data_type_float64_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref3.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/float64'
        data_constr_ref3.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_float64_type_emitter = ET.SubElement(implementation_data_type_float64, 'TYPE-EMITTER')
        implementation_data_type_float64_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_sint16 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_sint16_short_name = ET.SubElement(implementation_data_type_sint16, 'SHORT-NAME')
        implementation_data_type_sint16_short_name.text = 'sint16'
        self.implementation_data_type_sint16_long_name = ET.SubElement(implementation_data_type_sint16, 'LONG-NAME')
        self.implementation_data_type_sint16_l_4 = ET.SubElement(implementation_data_type_sint16_long_name, 'L-4')
        implementation_data_type_sint16_l_4.text = 'sint16'
        implementation_data_type_sint16_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_sint16_category = ET.SubElement(implementation_data_type_sint16, 'CATEGORY')
        implementation_data_type_sint16_category.text = 'VALUE'
        self.implementation_data_type_sint16_sw_data_def_props = ET.SubElement(implementation_data_type_sint16, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_sint16_sw_data_def_props_variants = ET.SubElement(implementation_data_type_sint16_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_sint16_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_sint16_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_sint16_base_type_ref = ET.SubElement(implementation_data_type_sint16_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_sint16_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint16'
        implementation_data_type_sint16_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref4 = ET.SubElement(implementation_data_type_sint16_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref4.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint16'
        data_constr_ref4.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_sint16_type_emitter = ET.SubElement(implementation_data_type_sint16, 'TYPE-EMITTER')
        implementation_data_type_sint16_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_sint16_least = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_sint16_least_short_name = ET.SubElement(implementation_data_type_sint16_least, 'SHORT-NAME')
        implementation_data_type_sint16_least_short_name.text = 'sint16_least'
        self.implementation_data_type_sint16_least_long_name = ET.SubElement(implementation_data_type_sint16_least, 'LONG-NAME')
        self.implementation_data_type_sint16_least_l_4 = ET.SubElement(implementation_data_type_sint16_least_long_name, 'L-4')
        implementation_data_type_sint16_least_l_4.text = 'sint16_least'
        implementation_data_type_sint16_least_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_sint16_least_category = ET.SubElement(implementation_data_type_sint16_least, 'CATEGORY')
        implementation_data_type_sint16_least_category.text = 'VALUE'
        self.implementation_data_type_sint16_least_sw_data_def_props = ET.SubElement(implementation_data_type_sint16_least, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_sint16_least_sw_data_def_props_variants = ET.SubElement(implementation_data_type_sint16_least_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_sint16_least_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_sint16_least_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.data_constr_ref5 = ET.SubElement(implementation_data_type_sint16_least_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref5.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint16_least'
        data_constr_ref5.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_sint16_least_type_emitter = ET.SubElement(implementation_data_type_sint16_least, 'TYPE-EMITTER')
        implementation_data_type_sint16_least_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_sint32 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_sint32_short_name = ET.SubElement(implementation_data_type_sint32, 'SHORT-NAME')
        implementation_data_type_sint32_short_name.text = 'sint32'
        self.implementation_data_type_sint32_long_name = ET.SubElement(implementation_data_type_sint32, 'LONG-NAME')
        self.implementation_data_type_sint32_l_4 = ET.SubElement(implementation_data_type_sint32_long_name, 'L-4')
        implementation_data_type_sint32_l_4.text = 'sint32'
        implementation_data_type_sint32_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_sint32_category = ET.SubElement(implementation_data_type_sint32, 'CATEGORY')
        implementation_data_type_sint32_category.text = 'VALUE'
        self.implementation_data_type_sint32_sw_data_def_props = ET.SubElement(implementation_data_type_sint32, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_sint32_sw_data_def_props_variants = ET.SubElement(implementation_data_type_sint32_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_sint32_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_sint32_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_sint32_base_type_ref = ET.SubElement(implementation_data_type_sint32_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_sint32_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint32'
        implementation_data_type_sint32_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref6 = ET.SubElement(implementation_data_type_sint32_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref6.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint32'
        data_constr_ref6.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_sint32_type_emitter = ET.SubElement(implementation_data_type_sint32, 'TYPE-EMITTER')
        implementation_data_type_sint32_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_sint32_least = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_sint32_least_short_name = ET.SubElement(implementation_data_type_sint32_least, 'SHORT-NAME')
        implementation_data_type_sint32_least_short_name.text = 'sint32_least'
        self.implementation_data_type_sint32_least_long_name = ET.SubElement(implementation_data_type_sint32_least, 'LONG-NAME')
        self.implementation_data_type_sint32_least_l_4 = ET.SubElement(implementation_data_type_sint32_least_long_name, 'L-4')
        implementation_data_type_sint32_least_l_4.text = 'sint32_least'
        implementation_data_type_sint32_least_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_sint32_least_category = ET.SubElement(implementation_data_type_sint32_least, 'CATEGORY')
        implementation_data_type_sint32_least_category.text = 'VALUE'
        self.implementation_data_type_sint32_least_sw_data_def_props = ET.SubElement(implementation_data_type_sint32_least, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_sint32_least_sw_data_def_props_variants = ET.SubElement(implementation_data_type_sint32_least_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_sint32_least_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_sint32_least_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.data_constr_ref7 = ET.SubElement(implementation_data_type_sint32_least_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref7.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint32_least'
        data_constr_ref7.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_sint32_least_type_emitter = ET.SubElement(implementation_data_type_sint32_least, 'TYPE-EMITTER')
        implementation_data_type_sint32_least_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_sint64 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_sint64_short_name = ET.SubElement(implementation_data_type_sint64, 'SHORT-NAME')
        implementation_data_type_sint64_short_name.text = 'sint64'
        self.implementation_data_type_sint64_long_name = ET.SubElement(implementation_data_type_sint64, 'LONG-NAME')
        self.implementation_data_type_sint64_l_4 = ET.SubElement(implementation_data_type_sint64_long_name, 'L-4')
        implementation_data_type_sint64_l_4.text = 'sint64'
        implementation_data_type_sint64_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_sint64_category = ET.SubElement(implementation_data_type_sint64, 'CATEGORY')
        implementation_data_type_sint64_category.text = 'VALUE'
        self.implementation_data_type_sint64_sw_data_def_props = ET.SubElement(implementation_data_type_sint64, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_sint64_sw_data_def_props_variants = ET.SubElement(implementation_data_type_sint64_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_sint64_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_sint64_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_sint64_base_type_ref = ET.SubElement(implementation_data_type_sint64_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_sint64_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint64'
        implementation_data_type_sint64_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref8 = ET.SubElement(implementation_data_type_sint64_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref8.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint64'
        data_constr_ref8.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_sint64_type_emitter = ET.SubElement(implementation_data_type_sint64, 'TYPE-EMITTER')
        implementation_data_type_sint64_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_sint8 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_sint8_short_name = ET.SubElement(implementation_data_type_sint8, 'SHORT-NAME')
        implementation_data_type_sint8_short_name.text = 'sint8'
        self.implementation_data_type_sint8_long_name = ET.SubElement(implementation_data_type_sint8, 'LONG-NAME')
        self.implementation_data_type_sint8_l_4 = ET.SubElement(implementation_data_type_sint8_long_name, 'L-4')
        implementation_data_type_sint8_l_4.text = 'sint8'
        implementation_data_type_sint8_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_sint8_category = ET.SubElement(implementation_data_type_sint8, 'CATEGORY')
        implementation_data_type_sint8_category.text = 'VALUE'
        self.implementation_data_type_sint8_sw_data_def_props = ET.SubElement(implementation_data_type_sint8, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_sint8_sw_data_def_props_variants = ET.SubElement(implementation_data_type_sint8_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_sint8_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_sint8_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_sint8_base_type_ref = ET.SubElement(implementation_data_type_sint8_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_sint8_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/sint8'
        implementation_data_type_sint8_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref9 = ET.SubElement(implementation_data_type_sint8_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref9.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint8'
        data_constr_ref9.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_sint8_type_emitter = ET.SubElement(implementation_data_type_sint8, 'TYPE-EMITTER')
        implementation_data_type_sint8_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_sint8_least = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_sint8_least_short_name = ET.SubElement(implementation_data_type_sint8_least, 'SHORT-NAME')
        implementation_data_type_sint8_least_short_name.text = 'sint8_least'
        self.implementation_data_type_sint8_least_long_name = ET.SubElement(implementation_data_type_sint8_least, 'LONG-NAME')
        self.implementation_data_type_sint8_least_l_4 = ET.SubElement(implementation_data_type_sint8_least_long_name, 'L-4')
        implementation_data_type_sint8_least_l_4.text = 'sint8_least'
        implementation_data_type_sint8_least_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_sint8_least_category = ET.SubElement(implementation_data_type_sint8_least, 'CATEGORY')
        implementation_data_type_sint8_least_category.text = 'VALUE'
        self.implementation_data_type_sint8_least_sw_data_def_props = ET.SubElement(implementation_data_type_sint8_least, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_sint8_least_sw_data_def_props_variants = ET.SubElement(implementation_data_type_sint8_least_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_sint8_least_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_sint8_least_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.data_constr_ref10 = ET.SubElement(implementation_data_type_sint8_least_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref10.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/sint8_least'
        data_constr_ref10.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_sint8_least_type_emitter = ET.SubElement(implementation_data_type_sint8_least, 'TYPE-EMITTER')
        implementation_data_type_sint8_least_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_uint16 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_uint16_short_name = ET.SubElement(implementation_data_type_uint16, 'SHORT-NAME')
        implementation_data_type_uint16_short_name.text = 'uint16'
        self.implementation_data_type_uint16_long_name = ET.SubElement(implementation_data_type_uint16, 'LONG-NAME')
        self.implementation_data_type_uint16_l_4 = ET.SubElement(implementation_data_type_uint16_long_name, 'L-4')
        implementation_data_type_uint16_l_4.text = 'uint16'
        implementation_data_type_uint16_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_uint16_category = ET.SubElement(implementation_data_type_uint16, 'CATEGORY')
        implementation_data_type_uint16_category.text = 'VALUE'
        self.implementation_data_type_uint16_sw_data_def_props = ET.SubElement(implementation_data_type_uint16, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_uint16_sw_data_def_props_variants = ET.SubElement(implementation_data_type_uint16_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_uint16_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_uint16_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_uint16_base_type_ref = ET.SubElement(implementation_data_type_uint16_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_uint16_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint16'
        implementation_data_type_uint16_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref11 = ET.SubElement(implementation_data_type_uint16_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref11.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint16'
        data_constr_ref11.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_uint16_type_emitter = ET.SubElement(implementation_data_type_uint16, 'TYPE-EMITTER')
        implementation_data_type_uint16_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_uint16_least = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_uint16_least_short_name = ET.SubElement(implementation_data_type_uint16_least, 'SHORT-NAME')
        implementation_data_type_uint16_least_short_name.text = 'uint16_least'
        self.implementation_data_type_uint16_least_long_name = ET.SubElement(implementation_data_type_uint16_least, 'LONG-NAME')
        self.implementation_data_type_uint16_least_l_4 = ET.SubElement(implementation_data_type_uint16_least_long_name, 'L-4')
        implementation_data_type_uint16_least_l_4.text = 'uint16_least'
        implementation_data_type_uint16_least_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_uint16_least_category = ET.SubElement(implementation_data_type_uint16_least, 'CATEGORY')
        implementation_data_type_uint16_least_category.text = 'VALUE'
        self.implementation_data_type_uint16_least_sw_data_def_props = ET.SubElement(implementation_data_type_uint16_least, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_uint16_least_sw_data_def_props_variants = ET.SubElement(implementation_data_type_uint16_least_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_uint16_least_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_uint16_least_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.data_constr_ref12 = ET.SubElement(implementation_data_type_uint16_least_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref12.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint16_least'
        data_constr_ref12.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_uint16_least_type_emitter = ET.SubElement(implementation_data_type_uint16_least, 'TYPE-EMITTER')
        implementation_data_type_uint16_least_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_uint32 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_uint32_short_name = ET.SubElement(implementation_data_type_uint32, 'SHORT-NAME')
        implementation_data_type_uint32_short_name.text = 'uint32'
        self.implementation_data_type_uint32_long_name = ET.SubElement(implementation_data_type_uint32, 'LONG-NAME')
        self.implementation_data_type_uint32_l_4 = ET.SubElement(implementation_data_type_uint32_long_name, 'L-4')
        implementation_data_type_uint32_l_4.text = 'uint32'
        implementation_data_type_uint32_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_uint32_category = ET.SubElement(implementation_data_type_uint32, 'CATEGORY')
        implementation_data_type_uint32_category.text = 'VALUE'
        self.implementation_data_type_uint32_sw_data_def_props = ET.SubElement(implementation_data_type_uint32, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_uint32_sw_data_def_props_variants = ET.SubElement(implementation_data_type_uint32_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_uint32_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_uint32_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_uint32_base_type_ref = ET.SubElement(implementation_data_type_uint32_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_uint32_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint32'
        implementation_data_type_uint32_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref13 = ET.SubElement(implementation_data_type_uint32_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref13.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint32'
        data_constr_ref13.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_uint32_type_emitter = ET.SubElement(implementation_data_type_uint32, 'TYPE-EMITTER')
        implementation_data_type_uint32_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_uint32_least = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_uint32_least_short_name = ET.SubElement(implementation_data_type_uint32_least, 'SHORT-NAME')
        implementation_data_type_uint32_least_short_name.text = 'uint32_least'
        self.implementation_data_type_uint32_least_long_name = ET.SubElement(implementation_data_type_uint32_least, 'LONG-NAME')
        self.implementation_data_type_uint32_least_l_4 = ET.SubElement(implementation_data_type_uint32_least_long_name, 'L-4')
        implementation_data_type_uint32_least_l_4.text = 'uint32_least'
        implementation_data_type_uint32_least_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_uint32_least_category = ET.SubElement(implementation_data_type_uint32_least, 'CATEGORY')
        implementation_data_type_uint32_least_category.text = 'VALUE'
        self.implementation_data_type_uint32_least_sw_data_def_props = ET.SubElement(implementation_data_type_uint32_least, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_uint32_least_sw_data_def_props_variants = ET.SubElement(implementation_data_type_uint32_least_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_uint32_least_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_uint32_least_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.data_constr_ref14 = ET.SubElement(implementation_data_type_uint32_least_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref14.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint32_least'
        data_constr_ref14.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_uint32_least_type_emitter = ET.SubElement(implementation_data_type_uint32_least, 'TYPE-EMITTER')
        implementation_data_type_uint32_least_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_uint64 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_uint64_short_name = ET.SubElement(implementation_data_type_uint64, 'SHORT-NAME')
        implementation_data_type_uint64_short_name.text = 'uint64'
        self.implementation_data_type_uint64_long_name = ET.SubElement(implementation_data_type_uint64, 'LONG-NAME')
        self.implementation_data_type_uint64_l_4 = ET.SubElement(implementation_data_type_uint64_long_name, 'L-4')
        implementation_data_type_uint64_l_4.text = 'uint64'
        implementation_data_type_uint64_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_uint64_category = ET.SubElement(implementation_data_type_uint64, 'CATEGORY')
        implementation_data_type_uint64_category.text = 'VALUE'
        self.implementation_data_type_uint64_sw_data_def_props = ET.SubElement(implementation_data_type_uint64, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_uint64_sw_data_def_props_variants = ET.SubElement(implementation_data_type_uint64_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_uint64_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_uint64_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_uint64_base_type_ref = ET.SubElement(implementation_data_type_uint64_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_uint64_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint64'
        implementation_data_type_uint64_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref15 = ET.SubElement(implementation_data_type_uint64_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref15.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint64'
        data_constr_ref15.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_uint64_type_emitter = ET.SubElement(implementation_data_type_uint64, 'TYPE-EMITTER')
        implementation_data_type_uint64_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_uint8 = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_uint8_short_name = ET.SubElement(implementation_data_type_uint8, 'SHORT-NAME')
        implementation_data_type_uint8_short_name.text = 'uint8'
        self.implementation_data_type_uint8_long_name = ET.SubElement(implementation_data_type_uint8, 'LONG-NAME')
        self.implementation_data_type_uint8_l_4 = ET.SubElement(implementation_data_type_uint8_long_name, 'L-4')
        implementation_data_type_uint8_l_4.text = 'uint8'
        implementation_data_type_uint8_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_uint8_category = ET.SubElement(implementation_data_type_uint8, 'CATEGORY')
        implementation_data_type_uint8_category.text = 'VALUE'
        self.implementation_data_type_uint8_sw_data_def_props = ET.SubElement(implementation_data_type_uint8, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_uint8_sw_data_def_props_variants = ET.SubElement(implementation_data_type_uint8_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_uint8_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_uint8_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_uint8_base_type_ref = ET.SubElement(implementation_data_type_uint8_sw_data_def_props_conditional, 'BASE-TYPE-REF')
        implementation_data_type_uint8_base_type_ref.text = '/AUTOSAR/AUTOSAR_Platform/BaseTypes/uint8'
        implementation_data_type_uint8_base_type_ref.attrib = {'DEST': 'SW-BASE-TYPE'}
        self.data_constr_ref16 = ET.SubElement(implementation_data_type_uint8_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref16.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint8'
        data_constr_ref16.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_uint8_type_emitter = ET.SubElement(implementation_data_type_uint8, 'TYPE-EMITTER')
        implementation_data_type_uint8_type_emitter.text = 'Platform_Types.h'
        self.implementation_data_type_uint8_least = ET.SubElement(ImplementationDataTypes_platform_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.implementation_data_type_uint8_least_short_name = ET.SubElement(implementation_data_type_uint8_least, 'SHORT-NAME')
        implementation_data_type_uint8_least_short_name.text = 'uint8_least'
        self.implementation_data_type_uint8_least_long_name = ET.SubElement(implementation_data_type_uint8_least, 'LONG-NAME')
        self.implementation_data_type_uint8_least_l_4 = ET.SubElement(implementation_data_type_uint8_least_long_name, 'L-4')
        implementation_data_type_uint8_least_l_4.text = 'uint8_least'
        implementation_data_type_uint8_least_l_4.attrib = {'L': 'EN'}
        self.implementation_data_type_uint8_least_category = ET.SubElement(implementation_data_type_uint8_least, 'CATEGORY')
        implementation_data_type_uint8_least_category.text = 'VALUE'
        self.implementation_data_type_uint8_least_sw_data_def_props = ET.SubElement(implementation_data_type_uint8_least, 'SW-DATA-DEF-PROPS')
        self.implementation_data_type_uint8_least_sw_data_def_props_variants = ET.SubElement(implementation_data_type_uint8_least_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.implementation_data_type_uint8_least_sw_data_def_props_conditional = ET.SubElement(implementation_data_type_uint8_least_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.data_constr_ref17 = ET.SubElement(implementation_data_type_uint8_least_sw_data_def_props_conditional, 'DATA-CONSTR-REF')
        data_constr_ref17.text = '/AUTOSAR/AUTOSAR_Platform/DataConstrs/uint8_least'
        data_constr_ref17.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_uint8_least_type_emitter = ET.SubElement(implementation_data_type_uint8_least, 'TYPE-EMITTER')
        implementation_data_type_uint8_least_type_emitter.text = 'Platform_Types.h'
        self.AUTOSAR_Std_folder = ET.SubElement(autosar_subfolders, 'AR-PACKAGE')
        self.AUTOSAR_Std_folder_short_name = ET.SubElement(AUTOSAR_Std_folder, 'SHORT-NAME')
        AUTOSAR_Std_folder_short_name.text = 'AUTOSAR_Std'
        self.AUTOSAR_Std_subfolders = ET.SubElement(AUTOSAR_Std_folder, 'AR-PACKAGES')
        self.BswModuleEntrys_folder = ET.SubElement(AUTOSAR_Std_subfolders, 'AR-PACKAGE')
        self.BswModuleEntrys_folder_short_name = ET.SubElement(BswModuleEntrys_folder, 'SHORT-NAME')
        BswModuleEntrys_folder_short_name.text = 'BswModuleEntrys'
        self.BswModuleEntrys_folder_elements = ET.SubElement(BswModuleEntrys_folder, 'ELEMENTS')
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType = ET.SubElement(BswModuleEntrys_folder_elements, 'BSW-MODULE-ENTRY')
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_short_name = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType, 'SHORT-NAME')
        bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_short_name.text = 'Std_ExtractProtocolHeaderFieldsType'
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_sw_service_impl_policy = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType, 'SW-SERVICE-IMPL-POLICY')
        bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_sw_service_impl_policy.text = 'STANDARD'
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_bsw_entry_kind = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType, 'BSW-ENTRY-KIND')
        bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_bsw_entry_kind.text = 'ABSTRACT'
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType, 'RETURN-TYPE')
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_short_name = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type, 'SHORT-NAME')
        bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_short_name.text = 'Std_ReturnType'
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_category = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type, 'CATEGORY')
        bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_category.text = 'TYPE_REFERENCE'
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type, 'SW-DATA-DEF-PROPS')
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props_variants = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props_conditional = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props_variants, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props_conditional_IDT_ref = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props_conditional, 'IMPLEMENTATION-DATA-TYPE-REF')
        bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props_conditional_IDT_ref.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_ReturnType'
        bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_return_type_sw_data_def_props_conditional_IDT_ref.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_arguments = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType, 'ARGUMENTS')
        self.sw_service_arg1 = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_arguments, 'SW-SERVICE-ARG')
        self.short_name305 = ET.SubElement(sw_service_arg1, 'SHORT-NAME')
        short_name305.text = 'buffer'
        self.category41 = ET.SubElement(sw_service_arg1, 'CATEGORY')
        category41.text = 'DATA_REFERENCE'
        self.direction1 = ET.SubElement(sw_service_arg1, 'DIRECTION')
        direction1.text = 'IN'
        self.sw_data_def_props23 = ET.SubElement(sw_service_arg1, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants23 = ET.SubElement(sw_data_def_props23, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional23 = ET.SubElement(sw_data_def_props_variants23, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.sw_pointer_target_props3 = ET.SubElement(sw_data_def_props_conditional23, 'SW-POINTER-TARGET-PROPS')
        self.target_category3 = ET.SubElement(sw_pointer_target_props3, 'TARGET-CATEGORY')
        target_category3.text = 'TYPE_REFERENCE'
        self.sw_data_def_props24 = ET.SubElement(sw_pointer_target_props3, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants24 = ET.SubElement(sw_data_def_props24, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional24 = ET.SubElement(sw_data_def_props_variants24, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref2 = ET.SubElement(sw_data_def_props_conditional24, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref2.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref2.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.sw_impl_policy2 = ET.SubElement(sw_data_def_props_conditional24, 'SW-IMPL-POLICY')
        sw_impl_policy2.text = 'CONST'
        self.sw_service_arg2 = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_arguments, 'SW-SERVICE-ARG')
        self.short_name306 = ET.SubElement(sw_service_arg2, 'SHORT-NAME')
        short_name306.text = 'bufferLength'
        self.category42 = ET.SubElement(sw_service_arg2, 'CATEGORY')
        category42.text = 'TYPE_REFERENCE'
        self.direction2 = ET.SubElement(sw_service_arg2, 'DIRECTION')
        direction2.text = 'IN'
        self.sw_data_def_props25 = ET.SubElement(sw_service_arg2, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants25 = ET.SubElement(sw_data_def_props25, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional25 = ET.SubElement(sw_data_def_props_variants25, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref3 = ET.SubElement(sw_data_def_props_conditional25, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref3.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint32'
        implementation_data_type_ref3.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.sw_service_arg3 = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_arguments, 'SW-SERVICE-ARG')
        self.short_name307 = ET.SubElement(sw_service_arg3, 'SHORT-NAME')
        short_name307.text = 'messageType'
        self.category43 = ET.SubElement(sw_service_arg3, 'CATEGORY')
        category43.text = 'DATA_REFERENCE'
        self.direction3 = ET.SubElement(sw_service_arg3, 'DIRECTION')
        direction3.text = 'OUT'
        self.sw_data_def_props26 = ET.SubElement(sw_service_arg3, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants26 = ET.SubElement(sw_data_def_props26, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional26 = ET.SubElement(sw_data_def_props_variants26, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.sw_pointer_target_props4 = ET.SubElement(sw_data_def_props_conditional26, 'SW-POINTER-TARGET-PROPS')
        self.target_category4 = ET.SubElement(sw_pointer_target_props4, 'TARGET-CATEGORY')
        target_category4.text = 'TYPE_REFERENCE'
        self.sw_data_def_props27 = ET.SubElement(sw_pointer_target_props4, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants27 = ET.SubElement(sw_data_def_props27, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional27 = ET.SubElement(sw_data_def_props_variants27, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref4 = ET.SubElement(sw_data_def_props_conditional27, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref4.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_MessageTypeType'
        implementation_data_type_ref4.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.sw_service_arg4 = ET.SubElement(bsw_module_entry_Std_ExtractProtocolHeaderFieldsType_arguments, 'SW-SERVICE-ARG')
        self.short_name308 = ET.SubElement(sw_service_arg4, 'SHORT-NAME')
        short_name308.text = 'messageResult'
        self.category44 = ET.SubElement(sw_service_arg4, 'CATEGORY')
        category44.text = 'DATA_REFERENCE'
        self.direction4 = ET.SubElement(sw_service_arg4, 'DIRECTION')
        direction4.text = 'OUT'
        self.sw_data_def_props28 = ET.SubElement(sw_service_arg4, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants28 = ET.SubElement(sw_data_def_props28, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional28 = ET.SubElement(sw_data_def_props_variants28, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.sw_pointer_target_props5 = ET.SubElement(sw_data_def_props_conditional28, 'SW-POINTER-TARGET-PROPS')
        self.target_category5 = ET.SubElement(sw_pointer_target_props5, 'TARGET-CATEGORY')
        target_category5.text = 'TYPE_REFERENCE'
        self.sw_data_def_props29 = ET.SubElement(sw_pointer_target_props5, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants29 = ET.SubElement(sw_data_def_props29, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional29 = ET.SubElement(sw_data_def_props_variants29, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref5 = ET.SubElement(sw_data_def_props_conditional29, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref5.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_MessageResultType'
        implementation_data_type_ref5.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.CompuMethods_std_folder = ET.SubElement(AUTOSAR_Std_subfolders, 'AR-PACKAGE')
        self.CompuMethods_std_folder_short_name = ET.SubElement(CompuMethods_std_folder, 'SHORT-NAME')
        CompuMethods_std_folder_short_name.text = 'CompuMethods'
        self.CompuMethods_std_foldercategory = ET.SubElement(CompuMethods_std_folder, 'CATEGORY')
        CompuMethods_std_foldercategory.text = 'STANDARD'
        self.CompuMethods_std_folder_elements = ET.SubElement(CompuMethods_std_folder, 'ELEMENTS')
        self.compu_method2 = ET.SubElement(CompuMethods_std_folder_elements, 'COMPU-METHOD')
        self.short_name310 = ET.SubElement(compu_method2, 'SHORT-NAME')
        short_name310.text = 'Std_MessageResultType'
        self.category46 = ET.SubElement(compu_method2, 'CATEGORY')
        category46.text = 'TEXTTABLE'
        self.compu_internal_to_phys2 = ET.SubElement(compu_method2, 'COMPU-INTERNAL-TO-PHYS')
        self.compu_scales2 = ET.SubElement(compu_internal_to_phys2, 'COMPU-SCALES')
        self.compu_scale3 = ET.SubElement(compu_scales2, 'COMPU-SCALE')
        self.lower_limit20 = ET.SubElement(compu_scale3, 'LOWER-LIMIT')
        lower_limit20.text = '0x00'
        lower_limit20.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit20 = ET.SubElement(compu_scale3, 'UPPER-LIMIT')
        upper_limit20.text = '0x00'
        upper_limit20.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const3 = ET.SubElement(compu_scale3, 'COMPU-CONST')
        self.vt3 = ET.SubElement(compu_const3, 'VT')
        vt3.text = 'STD_MESSAGERESULT_OK'
        self.compu_scale4 = ET.SubElement(compu_scales2, 'COMPU-SCALE')
        self.lower_limit21 = ET.SubElement(compu_scale4, 'LOWER-LIMIT')
        lower_limit21.text = '0x01'
        lower_limit21.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit21 = ET.SubElement(compu_scale4, 'UPPER-LIMIT')
        upper_limit21.text = '0x01'
        upper_limit21.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const4 = ET.SubElement(compu_scale4, 'COMPU-CONST')
        self.vt4 = ET.SubElement(compu_const4, 'VT')
        vt4.text = 'STD_MESSAGERESULT_ERROR'
        self.compu_method3 = ET.SubElement(CompuMethods_std_folder_elements, 'COMPU-METHOD')
        self.short_name311 = ET.SubElement(compu_method3, 'SHORT-NAME')
        short_name311.text = 'Std_MessageTypeType'
        self.category47 = ET.SubElement(compu_method3, 'CATEGORY')
        category47.text = 'TEXTTABLE'
        self.compu_internal_to_phys3 = ET.SubElement(compu_method3, 'COMPU-INTERNAL-TO-PHYS')
        self.compu_scales3 = ET.SubElement(compu_internal_to_phys3, 'COMPU-SCALES')
        self.compu_scale5 = ET.SubElement(compu_scales3, 'COMPU-SCALE')
        self.lower_limit22 = ET.SubElement(compu_scale5, 'LOWER-LIMIT')
        lower_limit22.text = '0x00'
        lower_limit22.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit22 = ET.SubElement(compu_scale5, 'UPPER-LIMIT')
        upper_limit22.text = '0x00'
        upper_limit22.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const5 = ET.SubElement(compu_scale5, 'COMPU-CONST')
        self.vt5 = ET.SubElement(compu_const5, 'VT')
        vt5.text = 'STD_MESSAGETYPE_REQUEST'
        self.compu_scale6 = ET.SubElement(compu_scales3, 'COMPU-SCALE')
        self.lower_limit23 = ET.SubElement(compu_scale6, 'LOWER-LIMIT')
        lower_limit23.text = '0x01'
        lower_limit23.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit23 = ET.SubElement(compu_scale6, 'UPPER-LIMIT')
        upper_limit23.text = '0x01'
        upper_limit23.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const6 = ET.SubElement(compu_scale6, 'COMPU-CONST')
        self.vt6 = ET.SubElement(compu_const6, 'VT')
        vt6.text = 'STD_MESSAGETYPE_RESPONSE'
        self.compu_method4 = ET.SubElement(CompuMethods_std_folder_elements, 'COMPU-METHOD')
        self.short_name312 = ET.SubElement(compu_method4, 'SHORT-NAME')
        short_name312.text = 'Std_ReturnType'
        self.category48 = ET.SubElement(compu_method4, 'CATEGORY')
        category48.text = 'TEXTTABLE'
        self.compu_internal_to_phys4 = ET.SubElement(compu_method4, 'COMPU-INTERNAL-TO-PHYS')
        self.compu_scales4 = ET.SubElement(compu_internal_to_phys4, 'COMPU-SCALES')
        self.compu_scale7 = ET.SubElement(compu_scales4, 'COMPU-SCALE')
        self.lower_limit24 = ET.SubElement(compu_scale7, 'LOWER-LIMIT')
        lower_limit24.text = '0'
        lower_limit24.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit24 = ET.SubElement(compu_scale7, 'UPPER-LIMIT')
        upper_limit24.text = '0'
        upper_limit24.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const7 = ET.SubElement(compu_scale7, 'COMPU-CONST')
        self.vt7 = ET.SubElement(compu_const7, 'VT')
        vt7.text = 'E_OK'
        self.compu_scale8 = ET.SubElement(compu_scales4, 'COMPU-SCALE')
        self.lower_limit25 = ET.SubElement(compu_scale8, 'LOWER-LIMIT')
        lower_limit25.text = '1'
        lower_limit25.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit25 = ET.SubElement(compu_scale8, 'UPPER-LIMIT')
        upper_limit25.text = '1'
        upper_limit25.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const8 = ET.SubElement(compu_scale8, 'COMPU-CONST')
        self.vt8 = ET.SubElement(compu_const8, 'VT')
        vt8.text = 'E_NOT_OK'
        self.compu_method5 = ET.SubElement(CompuMethods_std_folder_elements, 'COMPU-METHOD')
        self.short_name313 = ET.SubElement(compu_method5, 'SHORT-NAME')
        short_name313.text = 'Std_TransformerClass'
        self.category49 = ET.SubElement(compu_method5, 'CATEGORY')
        category49.text = 'TEXTTABLE'
        self.compu_internal_to_phys5 = ET.SubElement(compu_method5, 'COMPU-INTERNAL-TO-PHYS')
        self.compu_scales5 = ET.SubElement(compu_internal_to_phys5, 'COMPU-SCALES')
        self.compu_scale9 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
        self.lower_limit26 = ET.SubElement(compu_scale9, 'LOWER-LIMIT')
        lower_limit26.text = '0x00'
        lower_limit26.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit26 = ET.SubElement(compu_scale9, 'UPPER-LIMIT')
        upper_limit26.text = '0x00'
        upper_limit26.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const9 = ET.SubElement(compu_scale9, 'COMPU-CONST')
        self.vt9 = ET.SubElement(compu_const9, 'VT')
        vt9.text = 'STD_TRANSFORMER_UNSPECIFIED'
        self.compu_scale10 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
        self.lower_limit27 = ET.SubElement(compu_scale10, 'LOWER-LIMIT')
        lower_limit27.text = '0x01'
        lower_limit27.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit27 = ET.SubElement(compu_scale10, 'UPPER-LIMIT')
        upper_limit27.text = '0x01'
        upper_limit27.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const10 = ET.SubElement(compu_scale10, 'COMPU-CONST')
        self.vt10 = ET.SubElement(compu_const10, 'VT')
        vt10.text = 'STD_TRANSFORMER_SERIALIZER'
        self.compu_scale11 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
        self.lower_limit28 = ET.SubElement(compu_scale11, 'LOWER-LIMIT')
        lower_limit28.text = '0x02'
        lower_limit28.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit28 = ET.SubElement(compu_scale11, 'UPPER-LIMIT')
        upper_limit28.text = '0x02'
        upper_limit28.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const11 = ET.SubElement(compu_scale11, 'COMPU-CONST')
        self.vt11 = ET.SubElement(compu_const11, 'VT')
        vt11.text = 'STD_TRANSFORMER_SAFETY'
        self.compu_scale12 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
        self.lower_limit29 = ET.SubElement(compu_scale12, 'LOWER-LIMIT')
        lower_limit29.text = '0x03'
        lower_limit29.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit29 = ET.SubElement(compu_scale12, 'UPPER-LIMIT')
        upper_limit29.text = '0x03'
        upper_limit29.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const12 = ET.SubElement(compu_scale12, 'COMPU-CONST')
        self.vt12 = ET.SubElement(compu_const12, 'VT')
        vt12.text = 'STD_TRANSFORMER_SECURITY'
        self.compu_scale13 = ET.SubElement(compu_scales5, 'COMPU-SCALE')
        self.lower_limit30 = ET.SubElement(compu_scale13, 'LOWER-LIMIT')
        lower_limit30.text = '0xFF'
        lower_limit30.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit30 = ET.SubElement(compu_scale13, 'UPPER-LIMIT')
        upper_limit30.text = '0xFF'
        upper_limit30.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const13 = ET.SubElement(compu_scale13, 'COMPU-CONST')
        self.vt13 = ET.SubElement(compu_const13, 'VT')
        vt13.text = 'STD_TRANSFORMER_CUSTOM'
        self.compu_method6 = ET.SubElement(CompuMethods_std_folder_elements, 'COMPU-METHOD')
        self.short_name314 = ET.SubElement(compu_method6, 'SHORT-NAME')
        short_name314.text = 'Std_TransformerForwardCode'
        self.category50 = ET.SubElement(compu_method6, 'CATEGORY')
        category50.text = 'TEXTTABLE'
        self.compu_internal_to_phys6 = ET.SubElement(compu_method6, 'COMPU-INTERNAL-TO-PHYS')
        self.compu_scales6 = ET.SubElement(compu_internal_to_phys6, 'COMPU-SCALES')
        self.compu_scale14 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
        self.lower_limit31 = ET.SubElement(compu_scale14, 'LOWER-LIMIT')
        lower_limit31.text = '0x00'
        lower_limit31.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit31 = ET.SubElement(compu_scale14, 'UPPER-LIMIT')
        upper_limit31.text = '0x00'
        upper_limit31.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const14 = ET.SubElement(compu_scale14, 'COMPU-CONST')
        self.vt14 = ET.SubElement(compu_const14, 'VT')
        vt14.text = 'E_OK'
        self.compu_scale15 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
        self.lower_limit32 = ET.SubElement(compu_scale15, 'LOWER-LIMIT')
        lower_limit32.text = '0x01'
        lower_limit32.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit32 = ET.SubElement(compu_scale15, 'UPPER-LIMIT')
        upper_limit32.text = '0x01'
        upper_limit32.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const15 = ET.SubElement(compu_scale15, 'COMPU-CONST')
        self.vt15 = ET.SubElement(compu_const15, 'VT')
        vt15.text = 'E_SAFETY_INVALID_REP'
        self.compu_scale16 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
        self.lower_limit33 = ET.SubElement(compu_scale16, 'LOWER-LIMIT')
        lower_limit33.text = '0x02'
        lower_limit33.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit33 = ET.SubElement(compu_scale16, 'UPPER-LIMIT')
        upper_limit33.text = '0x02'
        upper_limit33.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const16 = ET.SubElement(compu_scale16, 'COMPU-CONST')
        self.vt16 = ET.SubElement(compu_const16, 'VT')
        vt16.text = 'E_SAFETY_INVALID_SEQ'
        self.compu_scale17 = ET.SubElement(compu_scales6, 'COMPU-SCALE')
        self.lower_limit34 = ET.SubElement(compu_scale17, 'LOWER-LIMIT')
        lower_limit34.text = '0x03'
        lower_limit34.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.upper_limit34 = ET.SubElement(compu_scale17, 'UPPER-LIMIT')
        upper_limit34.text = '0x03'
        upper_limit34.attrib = {'INTERVAL-TYPE': 'CLOSED'}
        self.compu_const17 = ET.SubElement(compu_scale17, 'COMPU-CONST')
        self.vt17 = ET.SubElement(compu_const17, 'VT')
        vt17.text = 'E_SAFETY_INVALID_CRC'
        self.DataConstrs_std_folder = ET.SubElement(AUTOSAR_Std_subfolders, 'AR-PACKAGE')
        self.DataConstrs_std_folder_short_name = ET.SubElement(DataConstrs_std_folder, 'SHORT-NAME')
        DataConstrs_std_folder_short_name.text = 'DataConstrs'
        self.DataConstrs_std_folder_category = ET.SubElement(DataConstrs_std_folder, 'CATEGORY')
        DataConstrs_std_folder_category.text = 'STANDARD'
        self.DataConstrs_std_folder_elements = ET.SubElement(DataConstrs_std_folder, 'ELEMENTS')
        self.data_constr18 = ET.SubElement(DataConstrs_std_folder_elements, 'DATA-CONSTR')
        self.short_name316 = ET.SubElement(data_constr18, 'SHORT-NAME')
        short_name316.text = 'Std_MessageResultType'
        self.data_constr_rules18 = ET.SubElement(data_constr18, 'DATA-CONSTR-RULES')
        self.data_constr_rule18 = ET.SubElement(data_constr_rules18, 'DATA-CONSTR-RULE')
        self.internal_constrs18 = ET.SubElement(data_constr_rule18, 'INTERNAL-CONSTRS')
        self.lower_limit35 = ET.SubElement(internal_constrs18, 'LOWER-LIMIT')
        lower_limit35.text = '0x00'
        self.upper_limit35 = ET.SubElement(internal_constrs18, 'UPPER-LIMIT')
        upper_limit35.text = '0x02'
        self.data_constr19 = ET.SubElement(DataConstrs_std_folder_elements, 'DATA-CONSTR')
        self.short_name317 = ET.SubElement(data_constr19, 'SHORT-NAME')
        short_name317.text = 'Std_MessageTypeType'
        self.data_constr_rules19 = ET.SubElement(data_constr19, 'DATA-CONSTR-RULES')
        self.data_constr_rule19 = ET.SubElement(data_constr_rules19, 'DATA-CONSTR-RULE')
        self.internal_constrs19 = ET.SubElement(data_constr_rule19, 'INTERNAL-CONSTRS')
        self.lower_limit36 = ET.SubElement(internal_constrs19, 'LOWER-LIMIT')
        lower_limit36.text = '0x00'
        self.upper_limit36 = ET.SubElement(internal_constrs19, 'UPPER-LIMIT')
        upper_limit36.text = '0x02'
        self.data_constr20 = ET.SubElement(DataConstrs_std_folder_elements, 'DATA-CONSTR')
        self.short_name318 = ET.SubElement(data_constr20, 'SHORT-NAME')
        short_name318.text = 'Std_ReturnType'
        self.data_constr_rules20 = ET.SubElement(data_constr20, 'DATA-CONSTR-RULES')
        self.data_constr_rule20 = ET.SubElement(data_constr_rules20, 'DATA-CONSTR-RULE')
        self.internal_constrs20 = ET.SubElement(data_constr_rule20, 'INTERNAL-CONSTRS')
        self.lower_limit37 = ET.SubElement(internal_constrs20, 'LOWER-LIMIT')
        lower_limit37.text = '0'
        self.upper_limit37 = ET.SubElement(internal_constrs20, 'UPPER-LIMIT')
        upper_limit37.text = '1'
        self.data_constr21 = ET.SubElement(DataConstrs_std_folder_elements, 'DATA-CONSTR')
        self.short_name319 = ET.SubElement(data_constr21, 'SHORT-NAME')
        short_name319.text = 'Std_TransformerClass'
        self.data_constr_rules21 = ET.SubElement(data_constr21, 'DATA-CONSTR-RULES')
        self.data_constr_rule21 = ET.SubElement(data_constr_rules21, 'DATA-CONSTR-RULE')
        self.internal_constrs21 = ET.SubElement(data_constr_rule21, 'INTERNAL-CONSTRS')
        self.lower_limit38 = ET.SubElement(internal_constrs21, 'LOWER-LIMIT')
        lower_limit38.text = '0x00'
        self.upper_limit38 = ET.SubElement(internal_constrs21, 'UPPER-LIMIT')
        upper_limit38.text = '0xFF'
        self.data_constr22 = ET.SubElement(DataConstrs_std_folder_elements, 'DATA-CONSTR')
        self.short_name320 = ET.SubElement(data_constr22, 'SHORT-NAME')
        short_name320.text = 'Std_TransformerErrorCode'
        self.data_constr_rules22 = ET.SubElement(data_constr22, 'DATA-CONSTR-RULES')
        self.data_constr_rule22 = ET.SubElement(data_constr_rules22, 'DATA-CONSTR-RULE')
        self.internal_constrs22 = ET.SubElement(data_constr_rule22, 'INTERNAL-CONSTRS')
        self.lower_limit39 = ET.SubElement(internal_constrs22, 'LOWER-LIMIT')
        lower_limit39.text = '0x00'
        self.upper_limit39 = ET.SubElement(internal_constrs22, 'UPPER-LIMIT')
        upper_limit39.text = '0xFF'
        self.data_constr23 = ET.SubElement(DataConstrs_std_folder_elements, 'DATA-CONSTR')
        self.short_name321 = ET.SubElement(data_constr23, 'SHORT-NAME')
        short_name321.text = 'Std_TransformerForwardCode'
        self.data_constr_rules23 = ET.SubElement(data_constr23, 'DATA-CONSTR-RULES')
        self.data_constr_rule23 = ET.SubElement(data_constr_rules23, 'DATA-CONSTR-RULE')
        self.internal_constrs23 = ET.SubElement(data_constr_rule23, 'INTERNAL-CONSTRS')
        self.lower_limit40 = ET.SubElement(internal_constrs23, 'LOWER-LIMIT')
        lower_limit40.text = '0x00'
        self.upper_limit40 = ET.SubElement(internal_constrs23, 'UPPER-LIMIT')
        upper_limit40.text = '0x03'
        self.ImplementationDataTypes_std_folder = ET.SubElement(AUTOSAR_Std_subfolders, 'AR-PACKAGE')
        self.ImplementationDataTypes_std_folder_short_name = ET.SubElement(ImplementationDataTypes_std_folder, 'SHORT-NAME')
        ImplementationDataTypes_std_folder_short_name.text = 'ImplementationDataTypes'
        self.ImplementationDataTypes_std_folder_category = ET.SubElement(ImplementationDataTypes_std_folder, 'CATEGORY')
        ImplementationDataTypes_std_folder_category.text = 'STANDARD'
        self.ImplementationDataTypes_std_folder_elements = ET.SubElement(ImplementationDataTypes_std_folder, 'ELEMENTS')
        self.implementation_data_type20 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name323 = ET.SubElement(implementation_data_type20, 'SHORT-NAME')
        short_name323.text = 'Std_ExtractProtocolHeaderFieldsType'
        self.desc1 = ET.SubElement(implementation_data_type20, 'DESC')
        self.l_21 = ET.SubElement(desc1, 'L-2')
        l_21.text = 'Type for the function pointer to extract the relevant protocol header fields of the message and the type of the message result of a transformer. - At the time being, this is limited to the types used for C/S communication (i.e., REQUEST and RESPONSE and OK and ERROR).'
        l_21.attrib = {'L': 'EN'}
        self.category53 = ET.SubElement(implementation_data_type20, 'CATEGORY')
        category53.text = 'FUNCTION_REFERENCE'
        self.sw_data_def_props30 = ET.SubElement(implementation_data_type20, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants30 = ET.SubElement(sw_data_def_props30, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional30 = ET.SubElement(sw_data_def_props_variants30, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.sw_pointer_target_props6 = ET.SubElement(sw_data_def_props_conditional30, 'SW-POINTER-TARGET-PROPS')
        self.target_category6 = ET.SubElement(sw_pointer_target_props6, 'TARGET-CATEGORY')
        target_category6.text = 'FUNCTION_REFERENCE'
        self.function_pointer_signature_ref1 = ET.SubElement(sw_pointer_target_props6, 'FUNCTION-POINTER-SIGNATURE-REF')
        function_pointer_signature_ref1.text = '/AUTOSAR/AUTOSAR_Std/BswModuleEntrys/Std_ExtractProtocolHeaderFieldsType'
        function_pointer_signature_ref1.attrib = {'DEST': 'BSW-MODULE-ENTRY'}
        self.type_emitter20 = ET.SubElement(implementation_data_type20, 'TYPE-EMITTER')
        type_emitter20.text = 'Std_Types.h'
        self.implementation_data_type21 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name324 = ET.SubElement(implementation_data_type21, 'SHORT-NAME')
        short_name324.text = 'Std_MessageResultType'
        self.desc2 = ET.SubElement(implementation_data_type21, 'DESC')
        self.l_22 = ET.SubElement(desc2, 'L-2')
        l_22.text = 'This type is used to encode different types of results for response messages. - Currently this encoding is limited to the distinction between OK and ERROR responses.'
        l_22.attrib = {'L': 'EN'}
        self.category54 = ET.SubElement(implementation_data_type21, 'CATEGORY')
        category54.text = 'TYPE_REFERENCE'
        self.sw_data_def_props31 = ET.SubElement(implementation_data_type21, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants31 = ET.SubElement(sw_data_def_props31, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional31 = ET.SubElement(sw_data_def_props_variants31, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.compu_method_ref2 = ET.SubElement(sw_data_def_props_conditional31, 'COMPU-METHOD-REF')
        compu_method_ref2.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_MessageResultType'
        compu_method_ref2.attrib = {'DEST': 'COMPU-METHOD'}
        self.data_constr_ref18 = ET.SubElement(sw_data_def_props_conditional31, 'DATA-CONSTR-REF')
        data_constr_ref18.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_MessageResultType'
        data_constr_ref18.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_ref6 = ET.SubElement(sw_data_def_props_conditional31, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref6.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref6.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter21 = ET.SubElement(implementation_data_type21, 'TYPE-EMITTER')
        type_emitter21.text = 'Std_Types.h'
        self.implementation_data_type22 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name325 = ET.SubElement(implementation_data_type22, 'SHORT-NAME')
        short_name325.text = 'Std_MessageTypeType'
        self.desc3 = ET.SubElement(implementation_data_type22, 'DESC')
        self.l_23 = ET.SubElement(desc3, 'L-2')
        l_23.text = 'This type is used to encode the different type of messages. - Currently this encoding is limited to the distinction between requests and responses in C/S communication.'
        l_23.attrib = {'L': 'EN'}
        self.category55 = ET.SubElement(implementation_data_type22, 'CATEGORY')
        category55.text = 'TYPE_REFERENCE'
        self.sw_data_def_props32 = ET.SubElement(implementation_data_type22, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants32 = ET.SubElement(sw_data_def_props32, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional32 = ET.SubElement(sw_data_def_props_variants32, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.compu_method_ref3 = ET.SubElement(sw_data_def_props_conditional32, 'COMPU-METHOD-REF')
        compu_method_ref3.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_MessageTypeType'
        compu_method_ref3.attrib = {'DEST': 'COMPU-METHOD'}
        self.data_constr_ref19 = ET.SubElement(sw_data_def_props_conditional32, 'DATA-CONSTR-REF')
        data_constr_ref19.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_MessageTypeType'
        data_constr_ref19.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_ref7 = ET.SubElement(sw_data_def_props_conditional32, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref7.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref7.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter22 = ET.SubElement(implementation_data_type22, 'TYPE-EMITTER')
        type_emitter22.text = 'Std_Types.h'
        self.implementation_data_type23 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name326 = ET.SubElement(implementation_data_type23, 'SHORT-NAME')
        short_name326.text = 'Std_ReturnType'
        self.desc4 = ET.SubElement(implementation_data_type23, 'DESC')
        self.l_24 = ET.SubElement(desc4, 'L-2')
        l_24.text = 'This type can be used as standard API return type which is shared between the RTE and the BSW modules. It shall be defined as follows: typedef uint8 Std_ReturnType;'
        l_24.attrib = {'L': 'EN'}
        self.category56 = ET.SubElement(implementation_data_type23, 'CATEGORY')
        category56.text = 'TYPE_REFERENCE'
        self.sw_data_def_props33 = ET.SubElement(implementation_data_type23, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants33 = ET.SubElement(sw_data_def_props33, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional33 = ET.SubElement(sw_data_def_props_variants33, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.compu_method_ref4 = ET.SubElement(sw_data_def_props_conditional33, 'COMPU-METHOD-REF')
        compu_method_ref4.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_ReturnType'
        compu_method_ref4.attrib = {'DEST': 'COMPU-METHOD'}
        self.data_constr_ref20 = ET.SubElement(sw_data_def_props_conditional33, 'DATA-CONSTR-REF')
        data_constr_ref20.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_ReturnType'
        data_constr_ref20.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_ref8 = ET.SubElement(sw_data_def_props_conditional33, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref8.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref8.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter23 = ET.SubElement(implementation_data_type23, 'TYPE-EMITTER')
        type_emitter23.text = 'Std_Types.h'
        self.implementation_data_type24 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name327 = ET.SubElement(implementation_data_type24, 'SHORT-NAME')
        short_name327.text = 'Std_TransformerClass'
        self.desc5 = ET.SubElement(implementation_data_type24, 'DESC')
        self.l_25 = ET.SubElement(desc5, 'L-2')
        l_25.text = 'Std_TransformerClass is an enumeration where each element represents a transformer class.'
        l_25.attrib = {'L': 'EN'}
        self.category57 = ET.SubElement(implementation_data_type24, 'CATEGORY')
        category57.text = 'TYPE_REFERENCE'
        self.sw_data_def_props34 = ET.SubElement(implementation_data_type24, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants34 = ET.SubElement(sw_data_def_props34, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional34 = ET.SubElement(sw_data_def_props_variants34, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.compu_method_ref5 = ET.SubElement(sw_data_def_props_conditional34, 'COMPU-METHOD-REF')
        compu_method_ref5.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_TransformerClass'
        compu_method_ref5.attrib = {'DEST': 'COMPU-METHOD'}
        self.data_constr_ref21 = ET.SubElement(sw_data_def_props_conditional34, 'DATA-CONSTR-REF')
        data_constr_ref21.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_TransformerClass'
        data_constr_ref21.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_ref9 = ET.SubElement(sw_data_def_props_conditional34, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref9.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref9.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter24 = ET.SubElement(implementation_data_type24, 'TYPE-EMITTER')
        type_emitter24.text = 'Std_Types.h'
        self.implementation_data_type25 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name328 = ET.SubElement(implementation_data_type25, 'SHORT-NAME')
        short_name328.text = 'Std_TransformerError'
        self.category58 = ET.SubElement(implementation_data_type25, 'CATEGORY')
        category58.text = 'STRUCTURE'
        self.sub_elements1 = ET.SubElement(implementation_data_type25, 'SUB-ELEMENTS')
        self.implementation_data_type_element1 = ET.SubElement(sub_elements1, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
        self.short_name329 = ET.SubElement(implementation_data_type_element1, 'SHORT-NAME')
        short_name329.text = 'errorCode'
        self.category59 = ET.SubElement(implementation_data_type_element1, 'CATEGORY')
        category59.text = 'TYPE_REFERENCE'
        self.sw_data_def_props35 = ET.SubElement(implementation_data_type_element1, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants35 = ET.SubElement(sw_data_def_props35, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional35 = ET.SubElement(sw_data_def_props_variants35, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref10 = ET.SubElement(sw_data_def_props_conditional35, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref10.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_TransformerErrorCode'
        implementation_data_type_ref10.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.implementation_data_type_element2 = ET.SubElement(sub_elements1, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
        self.short_name330 = ET.SubElement(implementation_data_type_element2, 'SHORT-NAME')
        short_name330.text = 'transformerClass'
        self.category60 = ET.SubElement(implementation_data_type_element2, 'CATEGORY')
        category60.text = 'TYPE_REFERENCE'
        self.sw_data_def_props36 = ET.SubElement(implementation_data_type_element2, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants36 = ET.SubElement(sw_data_def_props36, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional36 = ET.SubElement(sw_data_def_props_variants36, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref11 = ET.SubElement(sw_data_def_props_conditional36, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref11.text = '/AUTOSAR/AUTOSAR_Std/ImplementationDataTypes/Std_TransformerClass'
        implementation_data_type_ref11.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter25 = ET.SubElement(implementation_data_type25, 'TYPE-EMITTER')
        type_emitter25.text = 'Std_Types.h'
        self.implementation_data_type26 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name331 = ET.SubElement(implementation_data_type26, 'SHORT-NAME')
        short_name331.text = 'Std_TransformerErrorCode'
        self.desc6 = ET.SubElement(implementation_data_type26, 'DESC')
        self.l_26 = ET.SubElement(desc6, 'L-2')
        l_26.text = 'The type of the Std_TransformerError.'
        l_26.attrib = {'L': 'EN'}
        self.category61 = ET.SubElement(implementation_data_type26, 'CATEGORY')
        category61.text = 'TYPE_REFERENCE'
        self.sw_data_def_props37 = ET.SubElement(implementation_data_type26, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants37 = ET.SubElement(sw_data_def_props37, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional37 = ET.SubElement(sw_data_def_props_variants37, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.data_constr_ref22 = ET.SubElement(sw_data_def_props_conditional37, 'DATA-CONSTR-REF')
        data_constr_ref22.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_TransformerErrorCode'
        data_constr_ref22.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_ref12 = ET.SubElement(sw_data_def_props_conditional37, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref12.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref12.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter26 = ET.SubElement(implementation_data_type26, 'TYPE-EMITTER')
        type_emitter26.text = 'Std_Types.h'
        self.implementation_data_type27 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name332 = ET.SubElement(implementation_data_type27, 'SHORT-NAME')
        short_name332.text = 'Std_TransformerForwardCode'
        self.category62 = ET.SubElement(implementation_data_type27, 'CATEGORY')
        category62.text = 'TYPE_REFERENCE'
        self.sw_data_def_props38 = ET.SubElement(implementation_data_type27, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants38 = ET.SubElement(sw_data_def_props38, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional38 = ET.SubElement(sw_data_def_props_variants38, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.compu_method_ref6 = ET.SubElement(sw_data_def_props_conditional38, 'COMPU-METHOD-REF')
        compu_method_ref6.text = '/AUTOSAR/AUTOSAR_Std/CompuMethods/Std_TransformerForwardCode'
        compu_method_ref6.attrib = {'DEST': 'COMPU-METHOD'}
        self.data_constr_ref23 = ET.SubElement(sw_data_def_props_conditional38, 'DATA-CONSTR-REF')
        data_constr_ref23.text = '/AUTOSAR/AUTOSAR_Std/DataConstrs/Std_TransformerForwardCode'
        data_constr_ref23.attrib = {'DEST': 'DATA-CONSTR'}
        self.implementation_data_type_ref13 = ET.SubElement(sw_data_def_props_conditional38, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref13.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref13.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter27 = ET.SubElement(implementation_data_type27, 'TYPE-EMITTER')
        type_emitter27.text = 'Std_Types.h'
        self.implementation_data_type28 = ET.SubElement(ImplementationDataTypes_std_folder_elements, 'IMPLEMENTATION-DATA-TYPE')
        self.short_name333 = ET.SubElement(implementation_data_type28, 'SHORT-NAME')
        short_name333.text = 'Std_VersionInfoType'
        self.desc7 = ET.SubElement(implementation_data_type28, 'DESC')
        self.l_27 = ET.SubElement(desc7, 'L-2')
        l_27.text = 'This type shall be used to request the version of a BSW module using the <Module name>_GetVersionInfo() function.'
        l_27.attrib = {'L': 'EN'}
        self.category63 = ET.SubElement(implementation_data_type28, 'CATEGORY')
        category63.text = 'STRUCTURE'
        self.sub_elements2 = ET.SubElement(implementation_data_type28, 'SUB-ELEMENTS')
        self.implementation_data_type_element3 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
        self.short_name334 = ET.SubElement(implementation_data_type_element3, 'SHORT-NAME')
        short_name334.text = 'vendorID'
        self.category64 = ET.SubElement(implementation_data_type_element3, 'CATEGORY')
        category64.text = 'TYPE_REFERENCE'
        self.sw_data_def_props39 = ET.SubElement(implementation_data_type_element3, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants39 = ET.SubElement(sw_data_def_props39, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional39 = ET.SubElement(sw_data_def_props_variants39, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref14 = ET.SubElement(sw_data_def_props_conditional39, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref14.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
        implementation_data_type_ref14.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.implementation_data_type_element4 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
        self.short_name335 = ET.SubElement(implementation_data_type_element4, 'SHORT-NAME')
        short_name335.text = 'moduleID'
        self.category65 = ET.SubElement(implementation_data_type_element4, 'CATEGORY')
        category65.text = 'TYPE_REFERENCE'
        self.sw_data_def_props40 = ET.SubElement(implementation_data_type_element4, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants40 = ET.SubElement(sw_data_def_props40, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional40 = ET.SubElement(sw_data_def_props_variants40, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref15 = ET.SubElement(sw_data_def_props_conditional40, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref15.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint16'
        implementation_data_type_ref15.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.implementation_data_type_element5 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
        self.short_name336 = ET.SubElement(implementation_data_type_element5, 'SHORT-NAME')
        short_name336.text = 'sw_major_version'
        self.category66 = ET.SubElement(implementation_data_type_element5, 'CATEGORY')
        category66.text = 'TYPE_REFERENCE'
        self.sw_data_def_props41 = ET.SubElement(implementation_data_type_element5, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants41 = ET.SubElement(sw_data_def_props41, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional41 = ET.SubElement(sw_data_def_props_variants41, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref16 = ET.SubElement(sw_data_def_props_conditional41, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref16.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref16.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.implementation_data_type_element6 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
        self.short_name337 = ET.SubElement(implementation_data_type_element6, 'SHORT-NAME')
        short_name337.text = 'sw_minor_version'
        self.category67 = ET.SubElement(implementation_data_type_element6, 'CATEGORY')
        category67.text = 'TYPE_REFERENCE'
        self.sw_data_def_props42 = ET.SubElement(implementation_data_type_element6, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants42 = ET.SubElement(sw_data_def_props42, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional42 = ET.SubElement(sw_data_def_props_variants42, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref17 = ET.SubElement(sw_data_def_props_conditional42, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref17.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref17.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.implementation_data_type_element7 = ET.SubElement(sub_elements2, 'IMPLEMENTATION-DATA-TYPE-ELEMENT')
        self.short_name338 = ET.SubElement(implementation_data_type_element7, 'SHORT-NAME')
        short_name338.text = 'sw_patch_version'
        self.category68 = ET.SubElement(implementation_data_type_element7, 'CATEGORY')
        category68.text = 'TYPE_REFERENCE'
        self.sw_data_def_props43 = ET.SubElement(implementation_data_type_element7, 'SW-DATA-DEF-PROPS')
        self.sw_data_def_props_variants43 = ET.SubElement(sw_data_def_props43, 'SW-DATA-DEF-PROPS-VARIANTS')
        self.sw_data_def_props_conditional43 = ET.SubElement(sw_data_def_props_variants43, 'SW-DATA-DEF-PROPS-CONDITIONAL')
        self.implementation_data_type_ref18 = ET.SubElement(sw_data_def_props_conditional43, 'IMPLEMENTATION-DATA-TYPE-REF')
        implementation_data_type_ref18.text = '/AUTOSAR/AUTOSAR_Platform/ImplementationDataTypes/uint8'
        implementation_data_type_ref18.attrib = {'DEST': 'IMPLEMENTATION-DATA-TYPE'}
        self.type_emitter28 = ET.SubElement(implementation_data_type28, 'TYPE-EMITTER')
        type_emitter28.text = 'Std_Types.h'
        self.Communication_folder = ET.SubElement(root_folders, 'AR-PACKAGE')
        self.Communication_folder_short_name = ET.SubElement(Communication_folder, 'SHORT-NAME')
        Communication_folder_short_name.text = 'Communication'
        self.Communication_subfolders = ET.SubElement(Communication_folder, 'AR-PACKAGES')
        self.CommunicationClusters_folder = ET.SubElement(Communication_subfolders, 'AR-PACKAGE')
        self.CommunicationClusters_folder_short_name = ET.SubElement(CommunicationClusters_folder, 'SHORT-NAME')
        CommunicationClusters_folder_short_name.text = 'CommunicationClusters'
        self.Frames_folder = ET.SubElement(Communication_subfolders, 'AR-PACKAGE')
        self.Frames_folder_short_name = ET.SubElement(Frames_folder, 'SHORT-NAME')
        Frames_folder_short_name.text = 'Frames'
        self.ISignals_folder = ET.SubElement(Communication_subfolders, 'AR-PACKAGE')
        self.ISignals_folder_short_name = ET.SubElement(ISignals_folder, 'SHORT-NAME')
        ISignals_folder_short_name.text = 'ISignals'
        self.Pdus_folder = ET.SubElement(Communication_subfolders, 'AR-PACKAGE')
        self.Pdus_folder_short_name = ET.SubElement(Pdus_folder, 'SHORT-NAME')
        Pdus_folder_short_name.text = 'Pdus'
        self.SystemSignals_folder = ET.SubElement(Communication_subfolders, 'AR-PACKAGE')
        self.SystemSignals_folder_short_name = ET.SubElement(SystemSignals_folder, 'SHORT-NAME')
        SystemSignals_folder_short_name.text = 'SystemSignals'
        self.EcuInstances_folder = ET.SubElement(root_folders, 'AR-PACKAGE')
        self.EcuInstances_folder_short_name = ET.SubElement(EcuInstances_folder, 'SHORT-NAME')
        EcuInstances_folder_short_name.text = 'EcuInstances'
        self.RootSWComposition_folder = ET.SubElement(root_folders, 'AR-PACKAGE')
        RootSWComposition_folder.attrib = {'UUID': '9ae99405-7be6-41c0-ad56-a5fa909a1e5c'}
        self.RootSWComposition_folder_short_name = ET.SubElement(RootSWComposition_folder, 'SHORT-NAME')
        RootSWComposition_folder_short_name.text = 'RootSWComposition'
        self.SharedElements_folder = ET.SubElement(root_folders, 'AR-PACKAGE')
        self.SharedElements_folder_short_name = ET.SubElement(SharedElements_folder, 'SHORT-NAME')
        SharedElements_folder_short_name.text = 'SharedElements'
        self.SharedElements_subfolders = ET.SubElement(SharedElements_folder, 'AR-PACKAGES')
        self.ApplicationDataTypes_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        self.ApplicationDataTypes_folder_short_name = ET.SubElement(ApplicationDataTypes_folder, 'SHORT-NAME')
        ApplicationDataTypes_folder_short_name.text = 'ApplicationDataTypes'
        self.ApplicationDataTypes_subfolders = ET.SubElement(ApplicationDataTypes_folder, 'AR-PACKAGES')
        self.Array_folder = ET.SubElement(ApplicationDataTypes_subfolders, 'AR-PACKAGE')
        Array_folder.attrib = {'UUID': '035a8ab9-015a-426c-8766-e4b58e5c5a98'}
        self.Array_folder_short_name = ET.SubElement(Array_folder, 'SHORT-NAME')
        Array_folder_short_name.text = 'Array'
        self.Primitive_folder = ET.SubElement(ApplicationDataTypes_subfolders, 'AR-PACKAGE')
        Primitive_folder.attrib = {'UUID': 'b142aaa0-2671-41cd-bbc6-78cc30cf22c4'}
        self.Primitive_folder_short_name = ET.SubElement(Primitive_folder, 'SHORT-NAME')
        Primitive_folder_short_name.text = 'Primitive'
        self.Record_folder = ET.SubElement(ApplicationDataTypes_subfolders, 'AR-PACKAGE')
        Record_folder.attrib = {'UUID': '65217d8d-3662-4a20-a643-ec9ee94de7a0'}
        self.Record_folder_short_name = ET.SubElement(Record_folder, 'SHORT-NAME')
        Record_folder_short_name.text = 'Record'
        self.CompuMethods_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        self.CompuMethods_folder_short_name = ET.SubElement(CompuMethods_folder, 'SHORT-NAME')
        CompuMethods_folder_short_name.text = 'CompuMethods'
        self.ConstantSpecifications_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        self.ConstantSpecifications_folder_short_name = ET.SubElement(ConstantSpecifications_folder, 'SHORT-NAME')
        ConstantSpecifications_folder_short_name.text = 'ConstantSpecifications'
        self.ConstantTypeMappingSets_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        ConstantTypeMappingSets_folder.attrib = {'UUID': '6fcb326d-7f82-4cd3-9429-fa90f212d1e8'}
        self.ConstantTypeMappingSets_folder_short_name = ET.SubElement(ConstantTypeMappingSets_folder, 'SHORT-NAME')
        ConstantTypeMappingSets_folder_short_name.text = 'ConstantTypeMappingSets'
        self.DataConstr_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        DataConstr_folder.attrib = {'UUID': '5b7c99d1-d4ef-481b-95e4-0d6975de4f3b'}
        self.DataConstr_folder_short_name = ET.SubElement(DataConstr_folder, 'SHORT-NAME')
        DataConstr_folder_short_name.text = 'DataConstr'
        self.DataTypemappingSets_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        DataTypemappingSets_folder.attrib = {'UUID': '463cbb86-4f8e-463e-8bb3-dafc528ccbdf'}
        self.DataTypemappingSets_foldershort_name = ET.SubElement(DataTypemappingSets_folder, 'SHORT-NAME')
        DataTypemappingSets_foldershort_name.text = 'DataTypemappingSets'
        self.ImplementationDataTypes_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        self.ImplementationDataTypes_folder_short_name = ET.SubElement(ImplementationDataTypes_folder, 'SHORT-NAME')
        ImplementationDataTypes_folder_short_name.text = 'ImplementationDataTypes'
        self.PortInterfaces_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        self.PortInterfaces_folder_short_name = ET.SubElement(PortInterfaces_folder, 'SHORT-NAME')
        PortInterfaces_folder_short_name.text = 'PortInterfaces'
        self.PortInterfaces_subfolders = ET.SubElement(PortInterfaces_folder, 'AR-PACKAGES')
        self.ClientServer_folder = ET.SubElement(PortInterfaces_subfolders, 'AR-PACKAGE')
        ClientServer_folder.attrib = {'UUID': 'a0d0a13a-15e8-47a3-8169-5f11ad6c7d3f'}
        self.ClientServer_folder_short_name = ET.SubElement(ClientServer_folder, 'SHORT-NAME')
        ClientServer_folder_short_name.text = 'ClientServer'
        self.ModeSwitch_folder = ET.SubElement(PortInterfaces_subfolders, 'AR-PACKAGE')
        ModeSwitch_folder.attrib = {'UUID': '3503a605-12c8-44be-96cf-4ad548d5d58f'}
        self.ModeSwitch_folder_short_name = ET.SubElement(ModeSwitch_folder, 'SHORT-NAME')
        ModeSwitch_folder_short_name.text = 'ModeSwitch'
        self.NvData_folder = ET.SubElement(PortInterfaces_subfolders, 'AR-PACKAGE')
        NvData_folder.attrib = {'UUID': '07677b4a-bc79-4c7b-afa1-581ad642a3dd'}
        self.NvData_folder_short_name = ET.SubElement(NvData_folder, 'SHORT-NAME')
        NvData_folder_short_name.text = 'NvData'
        self.Parameter_folder = ET.SubElement(PortInterfaces_subfolders, 'AR-PACKAGE')
        Parameter_folder.attrib = {'UUID': '9b48ec34-87aa-4f84-9080-1d3f919ca090'}
        self.Parameter_folder_short_name = ET.SubElement(Parameter_folder, 'SHORT-NAME')
        Parameter_folder_short_name.text = 'Parameter'
        self.SenderReceiver_folder = ET.SubElement(PortInterfaces_subfolders, 'AR-PACKAGE')
        SenderReceiver_folder.attrib = {'UUID': '304f7bbd-15e6-4f85-b22f-4b02c9a5631c'}
        self.SenderReceiver_folder_short_name = ET.SubElement(SenderReceiver_folder, 'SHORT-NAME')
        SenderReceiver_folder_short_name.text = 'SenderReceiver'
        self.Trigger_folder = ET.SubElement(PortInterfaces_subfolders, 'AR-PACKAGE')
        Trigger_folder.attrib = {'UUID': '00421379-584f-4dbb-8c9f-d70ad66b8e41'}
        self.Trigger_folder_short_name = ET.SubElement(Trigger_folder, 'SHORT-NAME')
        Trigger_folder_short_name.text = 'Trigger'
        self.SWCImpl_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        SWCImpl_folder.attrib = {'UUID': 'a21c4095-c5dd-41b4-8a15-aa23a460a3e9'}
        self.SWCImpl_folder_short_name = ET.SubElement(SWCImpl_folder, 'SHORT-NAME')
        SWCImpl_folder_short_name.text = 'SWCImpl'
        self.SwAddrMethods_folder = ET.SubElement(SharedElements_subfolders, 'AR-PACKAGE')
        SwAddrMethods_folder.attrib = {'UUID': 'fc8b946c-31d4-49d6-8e0c-ff6847ede7f5'}
        self.SwAddrMethods_folder_short_name = ET.SubElement(SwAddrMethods_folder, 'SHORT-NAME')
        SwAddrMethods_folder_short_name.text = 'SwAddrMethods'
        self.SwComponentTypes_folder = ET.SubElement(root_folders, 'AR-PACKAGE')
        self.SwComponentTypes_folder_short_name = ET.SubElement(SwComponentTypes_folder, 'SHORT-NAME')
        SwComponentTypes_folder_short_name.text = 'SwComponentTypes'
        self.SwComponentTypes_subfolders = ET.SubElement(SwComponentTypes_folder, 'AR-PACKAGES')
        self.ApplSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        ApplSWC_folder.attrib = {'UUID': '7e1cfec7-fc85-4615-9df0-46ddc1fdaa09'}
        self.ApplSWC_folder_short_name = ET.SubElement(ApplSWC_folder, 'SHORT-NAME')
        ApplSWC_folder_short_name.text = 'ApplSWC'
        self.CddSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        CddSWC_folder.attrib = {'UUID': '7f0b665f-81ab-462f-aeab-1777b0f9dfd8'}
        self.CddSWC_folder_short_name = ET.SubElement(CddSWC_folder, 'SHORT-NAME')
        CddSWC_folder_short_name.text = 'CddSWC'
        self.CompSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        CompSWC_folder.attrib = {'UUID': 'a9d129de-eda4-4cda-9025-70a56f38fb59'}
        self.CompSWC_folder_short_name = ET.SubElement(CompSWC_folder, 'SHORT-NAME')
        CompSWC_folder_short_name.text = 'CompSWC'
        self.EcuAbSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        EcuAbSWC_folder.attrib = {'UUID': '28aa9cf2-4118-4878-8504-271a3ed4600b'}
        self.EcuAbSWC_folder_short_name = ET.SubElement(EcuAbSWC_folder, 'SHORT-NAME')
        EcuAbSWC_folder_short_name.text = 'EcuAbSWC'
        self.NvDataSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        NvDataSWC_folder.attrib = {'UUID': '8562405a-26a1-4c3d-861f-eb0745310572'}
        self.NvDataSWC_folder_short_name = ET.SubElement(NvDataSWC_folder, 'SHORT-NAME')
        NvDataSWC_folder_short_name.text = 'NvDataSWC'
        self.PrmSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        PrmSWC_folder.attrib = {'UUID': '0a54c44d-f71e-4ec3-bbf1-410c0b885915'}
        self.PrmSWC_folder_short_name = ET.SubElement(PrmSWC_folder, 'SHORT-NAME')
        PrmSWC_folder_short_name.text = 'PrmSWC'
        self.SnsrActSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        SnsrActSWC_folder.attrib = {'UUID': 'f142ef66-4dce-4750-8568-a7e836f462da'}
        self.SnsrActSWC_folder_short_name = ET.SubElement(SnsrActSWC_folder, 'SHORT-NAME')
        SnsrActSWC_folder_short_name.text = 'SnsrActSWC'
        self.SrvcPrxySWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        SrvcPrxySWC_folder.attrib = {'UUID': '60bb3f96-0a5c-4e30-bdda-5205f3a1cdb6'}
        self.SrvcPrxySWC_folder_short_name = ET.SubElement(SrvcPrxySWC_folder, 'SHORT-NAME')
        SrvcPrxySWC_folder_short_name.text = 'SrvcPrxySWC'
        self.SrvcSWC_folder = ET.SubElement(SwComponentTypes_subfolders, 'AR-PACKAGE')
        SrvcSWC_folder.attrib = {'UUID': '60bb3f96-0a5c-4e30-bdaa-5205f3a1cdb6'}
        self.SrvcSWC_folder_short_name = ET.SubElement(SrvcSWC_folder, 'SHORT-NAME')
        SrvcSWC_folder_short_name.text = 'SrvcSWC'
        self.Systems_folder = ET.SubElement(root_folders, 'AR-PACKAGE')
        self.Systems_folder_short_name = ET.SubElement(Systems_folder, 'SHORT-NAME')
        Systems_folder_short_name.text = 'Systems'
        return root_folders
    def get_variable(self, name):
        return self.variables.get(name)
